{"version":3,"sources":["webpack:////Users/captainsafia/github.com/nteract/nteract/packages/notebook-app-component/src/cell-creator.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/notebook-app-component/src/draggable-cell.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/editor/src/mode/ipython.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/notebook-app-component/src/hijack-scroll.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/notebook-app-component/src/markdown-preview.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/notebook-app-component/src/notebook-helmet.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/notebook-app-component/src/status-bar.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/notebook-app-component/src/transform-media.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/editor/src/configurable.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/editor/src/excludedIntelliSenseKeys.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/editor/src/components/hint.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/editor/src/jupyter/surrogate.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/editor/src/jupyter/complete.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/editor/src/jupyter/tooltip.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/editor/src/components/initial-text-area.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/editor/src/vendored/codemirror.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/editor/src/vendored/show-hint.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/editor/src/index.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/notebook-app-component/src/editor.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/dropdown-menu/src/index.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/notebook-app-component/src/toolbar.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/notebook-app-component/src/index.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/presentational-components/src/components/prompt.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/presentational-components/src/components/cell.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/presentational-components/src/components/cells.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/presentational-components/src/syntax-highlighter/index.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/presentational-components/src/components/source.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/presentational-components/src/components/input.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/presentational-components/src/components/outputs.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/presentational-components/src/components/pagers.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/presentational-components/src/styles.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/presentational-components/src/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/notebook-app-component/src/notebook-app.tsx"],"names":["_nteract_actions__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_nteract_octicons__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_3__","styled_components__WEBPACK_IMPORTED_MODULE_4__","CellCreatorMenu","div","CreatorHoverMask","CreatorHoverRegion","PureCellCreator","[object Object]","this","createMarkdownCell","props","createCell","createCodeCell","onClick","title","className","__webpack_exports__","Object","dispatch","createCellAbove","payload","createCellAppend","createCellBelow","type","above","id","contentRef","undefined","cellType","source","react__WEBPACK_IMPORTED_MODULE_0__","react_dnd__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","cellDragPreviewImage","join","cellSource","beginDrag","DragHandle","attrs","role","DragArea","style","opacity","isDragging","borderTop","isOver","hoverUpperHalf","borderBottom","isDragUpper","monitor","el","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","getClientOffset","y","cellTarget","component","moveCell","getItem","destinationId","setState","connect","connectDragSource","dragSource","connectDragPreview","dragPreview","target","connectDropTarget","dropTarget","state","selectCell","focusCell","img","window","Image","src","onload","ref","children","r","codemirror__WEBPACK_IMPORTED_MODULE_0__","codemirror__WEBPACK_IMPORTED_MODULE_0___default","n","a","defineMode","conf","parserConf","ipythonConf","assign","name","singleOperators","RegExp","identifiers","getMode","defineMIME","d","HijackScroll","prevFocused","hovered","parentElement","querySelector","focused","scrollIntoViewIfNeeded","scrollIntoView","prevProps","MarkdownCell","_nteract_markdown__WEBPACK_IMPORTED_MODULE_0__","_nteract_presentational_components__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","noop","Component","super","view","openEditor","bind","editorKeyDown","renderedKeyDown","closeEditor","updateFocus","nextProps","editorFocused","rendered","cellFocused","focus","e","shift","shiftKey","ctrl","ctrlKey","key","unfocusEditor","focusEditor","preventDefault","focusAbove","focusBelow","createElement","onDoubleClick","onKeyDown","tabIndex","outline","hidden","defaultProps","_nteract_selectors__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","initialState","initialProps","filePath","PureComponent","Fragment","href","date_fns_distance_in_words_to_now__WEBPACK_IMPORTED_MODULE_1__","date_fns_distance_in_words_to_now__WEBPACK_IMPORTED_MODULE_1___default","LeftStatus","RightStatus","Bar","content","kernelStatus","kernelSpecDisplayName","lastSaved","kernelRef","model","kernel","status","kernelSpecName","displayName","react__WEBPACK_IMPORTED_MODULE_0___default","react_redux__WEBPACK_IMPORTED_MODULE_1__","_nteract_core__WEBPACK_IMPORTED_MODULE_2__","memoize_one__WEBPACK_IMPORTED_MODULE_3__","TransformMedia","index","cellId","memoizedMetadata","immutableMetadata","toJS","output","core","entities","contents","byRef","getIn","output_type","console","warn","Media","handlers","transformsById","order","displayOrder","theme","userTheme","mediaType","outputData","data","find","hasOwnProperty","get","richestMediaType","metadata","transform","initialDispath","mediaActions","onMetadataChange","updateOutputMetadata","configurableCodeMirrorOptions","value","mode","indentUnit","smartIndent","tabSize","indentWithTabs","electricChars","rtlMoveVisually","keyMap","extraKeys","lineWrapping","lineNumbers","firstLineNumber","lineNumberFormatter","gutters","fixedGutter","readOnly","showCursorWhenSelecting","undoDepth","historyEventDelay","tabindex","autofocus","dragDrop","onDragEvent","onKeyEvent","cursorBlinkRate","cursorHeight","workTime","workDelay","pollInterval","flattenSpans","maxHighlightLength","viewportMargin","lint","placeholder","showHint","hintOptions","isConfigurable","option","excludedIntelliSenseTriggerKeys","8","9","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","91","92","93","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","144","145","186","187","188","189","192","220","222","Hint","react","TypeIcon","displayText","text","styled_components_browser_esm","span","js_idx_to_char_idx","js_idx","char_idx","i","length","char_code","charCodeAt","next_char_code","char_idx_to_js_idx","pick","_cm","handle","idx","_text","expand_completions","editor","results","start","cursor_start","end","cursor_end","indexFromPos","getCursor","getValue","from","posFromIndex","to","matches","render","elt","completion","react_dom_default","_jupyter_types_experimental","list","map","match","completionRequest","code","cursorPos","messaging_src","cursor_pos","codeComplete","channels","cursor","message","completion$","pipe","entry","first","timeout","Observable","create","observer","subscription","subscribe","next","codeCompleteObservable","tool","_editor","tip$","dict","tooltipObservable","detail_level","tooltipRequest","TextArea","textarea","autoComplete","TipButton","button","Tip","normalizeLineEndings","str","replace","src_CodeMirrorEditor","textareaRef","hint","async","tips","deleteTip","debounceNextCompletionRequest","isFocused","tipElement","fullOptions","cleanMode","Cmd-.","Cmd-/","Ctrl-.","Ctrl-/","Ctrl-Space","execCommand","Down","goLineDownOrEmit","Shift-Tab","Tab","executeTab","Up","goLineUpOrEmit","completeSingle","Right","defaultOptions","defaults","keys","filter","reduce","obj","componentWillReceiveProps","lodash","options","cm","codemirror_default","fromTextArea","current","setValue","on","focusChanged","codemirrorValueChanged","keyupEvents","fromEvent","ev","keyupEventsSubscriber","switchMap","of","completionActive","keyCode","which","toString","getDoc","token","getTokenAt","string","completionSubject","Subject","debounce","immediate","partition","completionResults","merge","debounceTime","takeUntil","repeat","Error","completionResult","callback","catchError","error","log","empty","completionEventsSubscriber","refresh","getInputField","blur","setOption","preserveScrollPosition","prevScrollPosition","getScrollInfo","scrollTo","left","optionName","toTextArea","unsubscribe","onFocusChange","debounceThisCompletionRequest","tip","resp","bundle","node","document","getElementsByClassName","createPortal","outputs_src","expanded","Plain","addWidget","line","ch","body","pos","appendChild","lastLineNumber","lastLine","getLine","somethingSelected","signal","doc","change","onChange","origin","defaultValue","matchBrackets","markdownMode","tokenTypeOverrides","emoji","rawMode","es","selectors_src","cell","cellById","codeMirrorMode","cell_type","kernels","info","codemirrorMode","config","initialDispatch","DropdownDiv","src_DropdownMenu","menuHidden","child","childElement","react_hot_loader","src_DropdownTrigger","src_DropdownContent","onItemClick","DropdownTriggerDiv","DropdownContentDiv","CellToolbarMask","CellToolbar","display","sourceHidden","toolbar_PureToolbar","executeCell","deleteCell","clearOutputs","aria-selected","toggleCellInputVisibility","toggleCellOutputVisibility","toggleOutputExpansion","toggleParameterCell","changeCellType","_notebook_app__WEBPACK_IMPORTED_MODULE_0__","Prompt","running","queued","counter","blank","promptText","PromptBuffer","shadowLevels","FLAT","HOVERED","SELECTED","cellShadowLevel","isSelected","_hovered","Cell","boxShadow","Cells","Highlighter","language","startsWith","slice","prism_default","styles_prism","customStyle","padding","margin","backgroundColor","border","syntax_highlighter","source_BareSource","Source","input_BareInput","Input","OutputWrapper","maxHeight","outputs_Outputs","Pagers","DarkTheme","LightTheme","process","_nteract_core__WEBPACK_IMPORTED_MODULE_0__","_nteract_outputs__WEBPACK_IMPORTED_MODULE_1__","_nteract_presentational_components__WEBPACK_IMPORTED_MODULE_2__","immutable__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react_dnd__WEBPACK_IMPORTED_MODULE_5__","react_dnd_html5_backend__WEBPACK_IMPORTED_MODULE_6__","react_dnd_html5_backend__WEBPACK_IMPORTED_MODULE_6___default","react_redux__WEBPACK_IMPORTED_MODULE_7__","_cell_creator__WEBPACK_IMPORTED_MODULE_8__","_draggable_cell__WEBPACK_IMPORTED_MODULE_9__","_editor__WEBPACK_IMPORTED_MODULE_10__","_hijack_scroll__WEBPACK_IMPORTED_MODULE_11__","_markdown_preview__WEBPACK_IMPORTED_MODULE_12__","_notebook_helmet__WEBPACK_IMPORTED_MODULE_13__","_status_bar__WEBPACK_IMPORTED_MODULE_14__","_toolbar__WEBPACK_IMPORTED_MODULE_15__","_transform_media__WEBPACK_IMPORTED_MODULE_16__","styled_components__WEBPACK_IMPORTED_MODULE_17__","emptyList","emptySet","CellBanner","ConnectedCell","notebook","outputs","outputHidden","size","outputExpanded","tags","pager","cellStatus","transient","executionCount","focusAboveCell","focusPreviousCell","focusPreviousCellEditor","focusBelowCell","focusNextCell","createCellIfUndefined","focusNextCellEditor","focusCellEditor","toggleCellType","element","Json","JavaScript","HTML","Markdown","LaTeX","SVG","has","NotebookApp","keyDown","addEventListener","removeEventListener","executeFocusedCell","ctrlKeyPressed","platform","metaKey","cellOrder","cellID","getTheme","ConnectedNotebook"],"mappings":"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","file":"notebook-app-component-38a27f34b5b096e6a6fa.bundle.js","sourcesContent":["import * as actions from \"@nteract/actions\";\nimport { CellType } from \"@nteract/commutable\";\nimport { CodeOcticon, MarkdownOcticon } from \"@nteract/octicons\";\nimport { ContentRef } from \"@nteract/types\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport styled from \"styled-components\";\n\ninterface Props {\n  above: boolean;\n  createCell: (type: \"code\" | \"markdown\") => void;\n}\n\ninterface ConnectedProps {\n  above: boolean;\n  createCellAppend: (\n    payload: { cellType: CellType; contentRef: ContentRef }\n  ) => void;\n  createCellAbove: (\n    payload: {\n      cellType: CellType;\n      id?: string;\n      contentRef: ContentRef;\n    }\n  ) => void;\n  createCellBelow: (\n    payload: {\n      cellType: CellType;\n      id?: string;\n      source: string;\n      contentRef: ContentRef;\n    }\n  ) => void;\n  id?: string;\n  contentRef: ContentRef;\n}\n\nexport const CellCreatorMenu = styled.div`\n  display: none;\n  background: var(--theme-cell-creator-bg);\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5);\n  pointer-events: all;\n  position: relative;\n  top: -5px;\n\n  button {\n    display: inline-block;\n\n    width: 22px;\n    height: 20px;\n    padding: 0px 4px;\n\n    text-align: center;\n\n    border: none;\n    outline: none;\n    background: none;\n  }\n\n  button span {\n    font-size: 15px;\n    line-height: 1;\n\n    color: var(--theme-cell-creator-fg);\n  }\n\n  button span:hover {\n    color: var(--theme-cell-creator-fg-hover);\n  }\n\n  .octicon {\n    transition: color 0.5s;\n  }\n`;\n\nconst CreatorHoverMask = styled.div`\n  display: block;\n  position: relative;\n  overflow: visible;\n  height: 0px;\n\n  @media print{\n    display: none;\n  }\n`;\nconst CreatorHoverRegion = styled.div`\n  position: relative;\n  overflow: visible;\n  top: -10px;\n  height: 60px;\n  text-align: center;\n\n  &:hover ${CellCreatorMenu} {\n    display: inline-block;\n  }\n`;\n\nexport class PureCellCreator extends React.PureComponent<Props> {\n  createMarkdownCell = () => {\n    this.props.createCell(\"markdown\");\n  };\n\n  createCodeCell = () => {\n    this.props.createCell(\"code\");\n  };\n\n  render() {\n    return (\n      <CreatorHoverMask>\n        <CreatorHoverRegion>\n          <CellCreatorMenu>\n            <button\n              onClick={this.createMarkdownCell}\n              title=\"create text cell\"\n              className=\"add-text-cell\"\n            >\n              <span className=\"octicon\">\n                <MarkdownOcticon />\n              </span>\n            </button>\n            <button\n              onClick={this.createCodeCell}\n              title=\"create code cell\"\n              className=\"add-code-cell\"\n            >\n              <span className=\"octicon\">\n                <CodeOcticon />\n              </span>\n            </button>\n          </CellCreatorMenu>\n        </CreatorHoverRegion>\n      </CreatorHoverMask>\n    );\n  }\n}\n\n// tslint:disable max-classes-per-file\nclass CellCreator extends React.PureComponent<ConnectedProps> {\n  createCell = (type: \"code\" | \"markdown\"): void => {\n    const {\n      above,\n      createCellBelow,\n      createCellAppend,\n      createCellAbove,\n      id,\n      contentRef\n    } = this.props;\n\n    if (id === undefined || typeof id !== \"string\") {\n      createCellAppend({ cellType: type, contentRef });\n      return;\n    }\n\n    above\n      ? createCellAbove({ cellType: type, id, contentRef })\n      : createCellBelow({ cellType: type, id, source: \"\", contentRef });\n  };\n\n  render() {\n    return (\n      <PureCellCreator above={this.props.above} createCell={this.createCell} />\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  createCellAbove: (payload: {\n    cellType: CellType;\n    id?: string;\n    contentRef: ContentRef;\n  }) => dispatch(actions.createCellAbove(payload)),\n  createCellAppend: (payload: { cellType: CellType; contentRef: ContentRef }) =>\n    dispatch(actions.createCellAppend(payload)),\n  createCellBelow: (payload: {\n    cellType: CellType;\n    id?: string;\n    source: string;\n    contentRef: ContentRef;\n  }) => dispatch(actions.createCellBelow(payload))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CellCreator);\n","/* eslint jsx-a11y/no-static-element-interactions: 0 */\n/* eslint jsx-a11y/click-events-have-key-events: 0 */\n\nimport { ContentRef } from \"@nteract/types\";\nimport * as React from \"react\";\nimport {\n  ConnectDragPreview,\n  ConnectDragSource,\n  ConnectDropTarget,\n  DragSource,\n  DragSourceConnector,\n  DragSourceMonitor,\n  DropTarget,\n  DropTargetConnector,\n  DropTargetMonitor\n} from \"react-dnd\";\n\nimport styled, { StyledComponent } from \"styled-components\";\n\n/**\n  The cell drag preview image is just a little stylized version of\n\n   [ ]\n\n  It matches nteract's default light theme\n\n */\nconst cellDragPreviewImage = [\n  \"data:image/png;base64,\",\n  \"iVBORw0KGgoAAAANSUhEUgAAADsAAAAzCAYAAAApdnDeAAAAAXNSR0IArs4c6QAA\",\n  \"AwNJREFUaAXtmlFL3EAUhe9MZptuoha3rLWgYC0W+lj/T3+26INvXbrI2oBdE9km\",\n  \"O9Nzxu1S0LI70AQScyFmDDfkfvdMZpNwlCCccwq7f21MaVM4FPtkU0o59RdoJBMx\",\n  \"WZINBg+DQWGKCAk+2kIKFh9JlSzLYVmOilEpR1Kh/iUbQFiNQTSbzWJrbYJximOJ\",\n  \"cSaulpVRoqh4K8JhjprIVJWqFlCpQNG51roYj8cLjJcGf5RMZWC1TYw1o2LxcEmy\",\n  \"0jeEo3ZFWVHIx0ji4eeKHFOx8l4sVVVZnBE6tWLHq7xO7FY86YpPeVjeo5y61tlR\",\n  \"JyhXEOQhF/lw6BGWixHvUWXVTpdgyUMu8q1h/ZJbqQhdiLsESx4FLvL9gcV6q3Cs\",\n  \"0liq2IHuBHjItYIV3rMvJnrYrkrdK9sr24EO9NO4AyI+i/CilOXbTi1xeXXFTyAS\",\n  \"GSOfzs42XmM+v5fJ5JvP29/fl8PDw43nhCbUpuzFxYXs7OxKmqZb1WQGkc/P80K+\",\n  \"T6dbnROaVJuyfPY+Pj7aup7h66HP/1Uu5O7u59bnhSTWpmxIEU3l9rBNdbrp6/TK\",\n  \"Nt3xpq7XK9tUp5u+Tm2/s/jYJdfX12LwBHVycrKRK89zmeJhYnZ7K3Fcz3e/2mDP\",\n  \"z7/waZEf8zaC+gSkKa3l4OBA3uztbXdOYFZtsKcfToNKSZNUPp6GnRN0AST3C1Ro\",\n  \"x9qS3yvbFqVC6+yVDe1YW/J7ZduiVGidvbKhHWtLfq9sW5QKrdMri9cxB6OFhQmO\",\n  \"TrDuBHjIRT5CEZZj0i7xOkYnWGeCPOQiHqC8lc/R60cLnNPuvjOkns7dk4t8/Jfv\",\n  \"s46mRlWqQiudxebVV3gAj7C9hXsmgZeztnfe/91YODEr3IoF/JY/sE2gbGaVLci3\",\n  \"hh0tRtWNvsm16JmNcOs6N9dW72LP7yOtWbEhjAUkZ+icoJ5HbE6+NSxMjKWe6cKb\",\n  \"GkUWgMwiFbXSlRpFkXelUlF4F70rVd7Bd4oZ/LL8xiDmtPV2Nwyf2zOlTfHERY7i\",\n  \"Haa1+w2+iFqx0aIgvgAAAABJRU5ErkJggg==\"\n].join(\"\");\n\ninterface Props {\n  focusCell: (payload: any) => void;\n  id: string;\n  moveCell: (payload: any) => void;\n  children: React.ReactNode;\n  contentRef: ContentRef;\n}\n\ninterface DnDSourceProps {\n  connectDragPreview: ConnectDragPreview;\n  connectDragSource: ConnectDragSource;\n  isDragging: boolean;\n}\n\ninterface DnDTargetProps {\n  connectDropTarget: ConnectDropTarget;\n  isOver: boolean;\n}\n\ninterface State {\n  hoverUpperHalf: boolean;\n}\n\nconst cellSource = {\n  beginDrag(props: Props) {\n    return {\n      id: props.id\n    };\n  }\n};\n\nconst DragHandle = styled.div.attrs({\n  role: \"presentation\"\n})`\n  position: absolute;\n  z-index: 200;\n  width: var(--prompt-width, 50px);\n  height: 100%;\n  cursor: move;\n`;\n\ninterface DragAreaProps {\n  isDragging: boolean;\n  isOver: boolean;\n  hoverUpperHalf: boolean;\n}\n\nconst DragArea = styled.div.attrs<DragAreaProps>(props => ({\n  style: {\n    opacity: props.isDragging ? 0.25 : 1,\n    borderTop:\n      props.isOver && props.hoverUpperHalf\n        ? \"3px lightgray solid\"\n        : \"3px transparent solid\",\n    borderBottom:\n      props.isOver && !props.hoverUpperHalf\n        ? \"3px lightgray solid\"\n        : \"3px transparent solid\"\n  }\n}))`\n  position: relative;\n  padding: 10px;\n` as StyledComponent<\"div\", any, DragAreaProps, never>; // Somehow setting the type on `attrs` isn't propagating properly;\n\nfunction isDragUpper(\n  props: Props,\n  monitor: DropTargetMonitor,\n  el: HTMLElement\n): boolean {\n  const hoverBoundingRect = el.getBoundingClientRect();\n  const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n  const clientOffset = monitor.getClientOffset();\n  const hoverClientY = clientOffset!.y - hoverBoundingRect.top;\n\n  return hoverClientY < hoverMiddleY;\n}\n\nconst cellTarget = {\n  drop(props: Props, monitor: DropTargetMonitor, component: any): void {\n    if (monitor) {\n      const hoverUpperHalf = isDragUpper(props, monitor, component.el);\n      // DropTargetSpec monitor definition could be undefined. we'll need a check for monitor in order to pass validation.\n      props.moveCell({\n        id: monitor.getItem().id,\n        destinationId: props.id,\n        above: hoverUpperHalf,\n        contentRef: props.contentRef\n      });\n    }\n  },\n\n  hover(props: Props, monitor: DropTargetMonitor, component: any): void {\n    if (monitor) {\n      component.setState({\n        hoverUpperHalf: isDragUpper(props, monitor, component.el)\n      });\n    }\n  }\n};\n\nfunction collectSource(\n  connect: DragSourceConnector,\n  monitor: DragSourceMonitor\n): {\n  connectDragSource: ConnectDragSource;\n  isDragging: boolean;\n  connectDragPreview: ConnectDragPreview;\n} {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n    connectDragPreview: connect.dragPreview()\n  };\n}\n\nfunction collectTarget(\n  connect: DropTargetConnector,\n  monitor: DropTargetMonitor\n): {\n  connectDropTarget: ConnectDropTarget;\n  isOver: boolean;\n} {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver()\n  };\n}\n\nclass DraggableCellView extends React.Component<\n  Props & DnDSourceProps & DnDTargetProps,\n  State\n> {\n  el?: HTMLDivElement | null;\n\n  state = {\n    hoverUpperHalf: true\n  };\n\n  componentDidMount(): void {\n    const connectDragPreview = this.props.connectDragPreview;\n    const img = new (window as any).Image();\n\n    img.src = cellDragPreviewImage;\n\n    img.onload = /*dragImageLoaded*/ () => {\n      connectDragPreview(img);\n    };\n  }\n\n  selectCell = () => {\n    const { focusCell, id, contentRef } = this.props;\n    focusCell({ id, contentRef });\n  };\n\n  render() {\n    return this.props.connectDropTarget(\n      // Sadly connectDropTarget _has_ to take a React element for a DOM element (no styled-divs)\n      <div>\n        <DragArea\n          isDragging={this.props.isDragging}\n          hoverUpperHalf={this.state.hoverUpperHalf}\n          isOver={this.props.isOver}\n          ref={el => {\n            this.el = el;\n          }}\n        >\n          {this.props.connectDragSource(\n            // Same thing with connectDragSource... It also needs a React Element that matches a DOM element\n            <div>\n              <DragHandle onClick={this.selectCell} />\n            </div>\n          )}\n          {this.props.children}\n        </DragArea>\n      </div>\n    );\n  }\n}\n\nconst source = DragSource<Props, DnDSourceProps>(\n  \"CELL\",\n  cellSource,\n  collectSource\n);\nconst target = DropTarget<Props, DnDTargetProps>(\n  \"CELL\",\n  cellTarget,\n  collectTarget\n);\n\nexport default source(target(DraggableCellView));\n","// https://github.com/nteract/nteract/issues/389\nimport CodeMirror, { EditorConfiguration, Mode } from \"codemirror\";\n\nimport \"codemirror/mode/meta\";\nimport \"codemirror/mode/python/python\";\n\n// The TypeScript definitions are missing these versions\n// of the codemirror define* functions that IPython uses for\n// highlighting magics\n// @ts-ignore\nCodeMirror.defineMode(\n  \"ipython\",\n  (conf: EditorConfiguration, parserConf: any): Mode<any> => {\n    const ipythonConf = Object.assign({}, parserConf, {\n      name: \"python\",\n      singleOperators: new RegExp(\"^[\\\\+\\\\-\\\\*/%&|@\\\\^~<>!\\\\?]\"),\n      identifiers: new RegExp(\n        \"^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*\"\n      ) // Technically Python3\n    });\n    return CodeMirror.getMode(conf, ipythonConf);\n  },\n  \"python\"\n);\n\n// @ts-ignore\nCodeMirror.defineMIME(\"text/x-ipython\", \"ipython\");\n","/* eslint jsx-a11y/no-static-element-interactions: 0 */\n/* eslint jsx-a11y/click-events-have-key-events: 0 */\n\nimport * as React from \"react\";\n\ninterface HijackScrollProps {\n  focused: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n}\n\nexport class HijackScroll extends React.Component<HijackScrollProps> {\n  el: HTMLDivElement | null = null;\n\n  scrollIntoViewIfNeeded(prevFocused?: boolean): void {\n    // Check if the element is being hovered over.\n    const hovered =\n      this.el &&\n      this.el.parentElement &&\n      this.el.parentElement.querySelector(\":hover\") === this.el;\n\n    if (\n      this.props.focused &&\n      prevFocused !== this.props.focused &&\n      // Don't scroll into view if already hovered over, this prevents\n      // accidentally selecting text within the codemirror area\n      !hovered\n    ) {\n      if (this.el && \"scrollIntoViewIfNeeded\" in this.el) {\n        // This is only valid in Chrome, WebKit\n        (this.el as any).scrollIntoViewIfNeeded();\n      } else if (this.el) {\n        // Make a best guess effort for older platforms\n        this.el.scrollIntoView();\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps: HijackScrollProps) {\n    this.scrollIntoViewIfNeeded(prevProps.focused);\n  }\n\n  componentDidMount(): void {\n    this.scrollIntoViewIfNeeded();\n  }\n\n  render() {\n    return (\n      <div\n        onClick={this.props.onClick}\n        role=\"presentation\"\n        ref={el => {\n          this.el = el;\n        }}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","/* eslint jsx-a11y/no-static-element-interactions: 0 */\n/* eslint jsx-a11y/no-noninteractive-tabindex: 0 */\n\nimport Markdown from \"@nteract/markdown\";\nimport {\n  Input,\n  Outputs,\n  PromptBuffer\n} from \"@nteract/presentational-components\";\nimport React from \"react\";\n\ninterface Props {\n  source: string;\n  focusEditor: () => void;\n  unfocusEditor: () => void;\n  focusAbove: () => void;\n  focusBelow: () => void;\n  cellFocused: boolean;\n  editorFocused: boolean;\n  children: React.ReactNode;\n}\n\ninterface State {\n  view: boolean;\n}\n\nconst noop = () => {};\n\n// TODO: Consider whether this component is really something like two components:\n//\n//       * a behavioral component that tracks focus (possibly already covered elsewhere)\n//       * the actual markdown previewer\n//\n//       Since I'm really unsure and don't want to write a silly abstraction that\n//       only I (@rgbkrk) understand, I'll wait for others to reflect on this\n//       within the code base (or leave it alone, which is totally cool too). :)\n\nexport default class MarkdownCell extends React.Component<Props, State> {\n  static defaultProps = {\n    cellFocused: false,\n    editorFocused: false,\n    focusAbove: noop,\n    focusBelow: noop,\n    focusEditor: noop,\n    unfocusEditor: noop,\n    source: \"\"\n  };\n\n  rendered!: HTMLDivElement | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      view: true\n    };\n    this.openEditor = this.openEditor.bind(this);\n    this.editorKeyDown = this.editorKeyDown.bind(this);\n    this.renderedKeyDown = this.renderedKeyDown.bind(this);\n    this.closeEditor = this.closeEditor.bind(this);\n  }\n\n  componentDidMount(): void {\n    this.updateFocus();\n  }\n\n  componentWillReceiveProps(nextProps: Props): void {\n    this.setState({\n      view: !nextProps.editorFocused\n    });\n  }\n\n  componentDidUpdate(): void {\n    this.updateFocus();\n  }\n\n  updateFocus(): void {\n    if (\n      this.rendered &&\n      this.state &&\n      this.state.view &&\n      this.props.cellFocused\n    ) {\n      this.rendered.focus();\n      if (this.props.editorFocused) {\n        this.openEditor();\n      }\n    }\n  }\n\n  /**\n   * Handles when a keydown event occurs on the unrendered MD cell\n   */\n  editorKeyDown(e: React.KeyboardEvent): void {\n    const shift = e.shiftKey;\n    const ctrl = e.ctrlKey;\n    if ((shift || ctrl) && e.key === \"Enter\") {\n      this.closeEditor();\n    }\n  }\n\n  closeEditor(): void {\n    this.setState({ view: true });\n    this.props.unfocusEditor();\n  }\n\n  openEditor(): void {\n    this.setState({ view: false });\n    this.props.focusEditor();\n  }\n\n  /**\n   * Handles when a keydown event occurs on the rendered MD cell\n   */\n  renderedKeyDown(e: React.KeyboardEvent) {\n    const shift = e.shiftKey;\n    const ctrl = e.ctrlKey;\n    if ((shift || ctrl) && e.key === \"Enter\") {\n      if (this.state.view) {\n        return;\n      }\n      // This likely isn't even possible, as we _should_ be in view mode\n      this.closeEditor();\n      return;\n    }\n\n    switch (e.key) {\n      case \"Enter\":\n        this.openEditor();\n        e.preventDefault();\n        return;\n      case \"ArrowUp\":\n        this.props.focusAbove();\n        break;\n      case \"ArrowDown\":\n        this.props.focusBelow();\n        break;\n      default:\n    }\n    return;\n  }\n\n  render() {\n    const source = this.props.source;\n\n    return this.state && this.state.view ? (\n      <div\n        onDoubleClick={this.openEditor}\n        onKeyDown={this.renderedKeyDown}\n        ref={rendered => {\n          this.rendered = rendered;\n        }}\n        tabIndex={this.props.cellFocused ? 0 : undefined}\n        style={{\n          outline: \"none\"\n        }}\n      >\n        <Outputs>\n          <Markdown\n            source={\n              source\n                ? source\n                : \"*Empty markdown cell, double click me to add content.*\"\n            }\n          />\n        </Outputs>\n      </div>\n    ) : (\n      <div onKeyDown={this.editorKeyDown}>\n        <Input>\n          <PromptBuffer />\n          {/* The editor */}\n          {this.props.children}\n        </Input>\n        <Outputs hidden={source === \"\"}>\n          <Markdown\n            source={\n              source\n                ? source\n                : \"*Empty markdown cell, double click me to add content.*\"\n            }\n          />\n        </Outputs>\n      </div>\n    );\n  }\n}\n","import * as selectors from \"@nteract/selectors\";\nimport { AppState, ContentRef } from \"@nteract/types\";\nimport path from \"path\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\n\ninterface Props {\n  filePath: string | null;\n}\n\nexport class NotebookHelmet extends React.PureComponent<Props> {\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        <Helmet>\n          <base href={this.props.filePath || \".\"} />\n        </Helmet>\n      </React.Fragment>\n    );\n  }\n}\n\ninterface InitialProps {\n  contentRef: ContentRef;\n}\n\nconst makeMapStateToProps = (\n  initialState: AppState,\n  initialProps: InitialProps\n): ((state: AppState) => Props) => {\n  const { contentRef } = initialProps;\n\n  const mapStateToProps = (state: AppState) => {\n    const filePath = selectors.filepath(state, { contentRef });\n    return {\n      filePath\n    };\n  };\n\n  return mapStateToProps;\n};\n\nexport default connect(makeMapStateToProps)(NotebookHelmet);\n","import * as selectors from \"@nteract/selectors\";\nimport { AppState, ContentRef, KernelRef } from \"@nteract/types\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\ninterface Props {\n  lastSaved?: Date | null;\n  kernelSpecDisplayName: string;\n  kernelStatus: string;\n}\n\nconst NOT_CONNECTED = \"not connected\";\n\nimport styled from \"styled-components\";\n\nexport const LeftStatus = styled.div`\n  float: left;\n  display: block;\n  padding-left: 10px;\n`;\nexport const RightStatus = styled.div`\n  float: right;\n  padding-right: 10px;\n  display: block;\n`;\n\nexport const Bar = styled.div`\n  padding-top: 8px;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  font-size: 12px;\n  line-height: 0.5em;\n  background: var(--status-bar);\n  z-index: 99;\n  @media print {\n     display: none;\n  }\n`;\n\nexport class StatusBar extends React.Component<Props> {\n  shouldComponentUpdate(nextProps: Props): boolean {\n    if (\n      this.props.lastSaved !== nextProps.lastSaved ||\n      this.props.kernelStatus !== nextProps.kernelStatus\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    const name = this.props.kernelSpecDisplayName || \"Loading...\";\n\n    return (\n      <Bar>\n        <RightStatus>\n          {this.props.lastSaved ? (\n            <p> Last saved {distanceInWordsToNow(this.props.lastSaved)} </p>\n          ) : (\n            <p> Not saved yet </p>\n          )}\n        </RightStatus>\n        <LeftStatus>\n          <p>\n            {name} | {this.props.kernelStatus}\n          </p>\n        </LeftStatus>\n      </Bar>\n    );\n  }\n}\n\ninterface InitialProps {\n  contentRef: ContentRef;\n}\n\nconst makeMapStateToProps = (\n  initialState: AppState,\n  initialProps: InitialProps\n): ((state: AppState) => Props) => {\n  const { contentRef } = initialProps;\n\n  const mapStateToProps = (state: AppState) => {\n    const content = selectors.content(state, { contentRef });\n\n    if (!content || content.type !== \"notebook\") {\n      return {\n        kernelStatus: NOT_CONNECTED,\n        kernelSpecDisplayName: \"no kernel\",\n        lastSaved: null\n      };\n    }\n\n    const kernelRef = content.model.kernelRef;\n    let kernel = null;\n    if (kernelRef) {\n      kernel = selectors.kernel(state, { kernelRef });\n    }\n\n    const lastSaved = content && content.lastSaved ? content.lastSaved : null;\n\n    const kernelStatus =\n      kernel != null && kernel.status != null ? kernel.status : NOT_CONNECTED;\n\n    // TODO: We need kernels associated to the kernelspec they came from\n    //       so we can pluck off the display_name and provide it here\n    let kernelSpecDisplayName = \" \";\n    if (kernelStatus === NOT_CONNECTED) {\n      kernelSpecDisplayName = \"no kernel\";\n    } else if (kernel != null && kernel.kernelSpecName != null) {\n      kernelSpecDisplayName = kernel.kernelSpecName;\n    } else if (content !== undefined && content.type === \"notebook\") {\n      kernelSpecDisplayName =\n        selectors.notebook.displayName(content.model) || \" \";\n    }\n\n    return {\n      kernelSpecDisplayName,\n      kernelStatus,\n      lastSaved\n    };\n  };\n\n  return mapStateToProps;\n};\n\nexport default connect(makeMapStateToProps)(StatusBar);\n","import Immutable from \"immutable\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport {\n  ImmutableDisplayData,\n  ImmutableExecuteResult,\n  ImmutableOutput,\n  JSONObject\n} from \"@nteract/commutable\";\nimport { actions, selectors } from \"@nteract/core\";\nimport { AppState, ContentRef } from \"@nteract/types\";\n\nimport { get } from \"https\";\nimport memoizeOne from \"memoize-one\";\n\ninterface OwnProps {\n  output_type: string;\n  cellId: string;\n  contentRef: ContentRef;\n  index: number;\n}\n\ninterface MappedProps {\n  Media: React.ComponentType<any>;\n  mediaType?: string;\n  output?: ImmutableDisplayData | ImmutableExecuteResult;\n  data?: any;\n  metadata?: Immutable.Map<string, any>;\n  theme?: string;\n}\n\ninterface DispatchProps {\n  mediaActions: {\n    onMetadataChange: (metadata: JSONObject, mediaType: string) => void;\n  };\n}\n\nconst PureTransformMedia = (props: MappedProps & DispatchProps) => {\n  const { Media, mediaActions, mediaType, data, metadata, theme } = props;\n\n  // If we had no valid result, return an empty output\n  if (!mediaType || !data) {\n    return null;\n  }\n\n  return (\n    <Media {...mediaActions} data={data} metadata={metadata} theme={theme} />\n  );\n};\n\nconst richestMediaType = (\n  output: ImmutableExecuteResult | ImmutableDisplayData,\n  order: Immutable.List<string>,\n  handlers: { [k: string]: any } | Immutable.Map<string, any>\n) => {\n  const outputData = output.data;\n\n  // Find the first mediaType in the output data that we support with a handler\n  const mediaType = order.find(key => {\n    return (\n      outputData.hasOwnProperty(key) &&\n      (handlers.hasOwnProperty(key) || handlers.get(key, false))\n    );\n  });\n\n  return mediaType;\n};\n\nconst makeMapStateToProps = (\n  initialState: AppState,\n  initialProps: OwnProps\n) => {\n  const { contentRef, index, cellId } = initialProps;\n\n  const memoizedMetadata = memoizeOne(immutableMetadata =>\n    immutableMetadata ? immutableMetadata.toJS() : {}\n  );\n\n  const mapStateToProps = (state: AppState): MappedProps => {\n    const output: ImmutableOutput = state.core.entities.contents.byRef.getIn(\n      [contentRef, \"model\", \"notebook\", \"cellMap\", cellId, \"outputs\", index],\n      null\n    );\n\n    // This component should only be used with display data and execute result\n    if (\n      !output ||\n      !(\n        output.output_type === \"display_data\" ||\n        output.output_type === \"execute_result\"\n      )\n    ) {\n      console.warn(\n        \"connected transform media managed to get a non media bundle output\"\n      );\n      return {\n        Media: () => null\n      };\n    }\n\n    const handlers = selectors.transformsById(state);\n    const order = selectors.displayOrder(state);\n    const theme = selectors.userTheme(state);\n\n    const mediaType = richestMediaType(output, order, handlers);\n\n    if (mediaType) {\n      const metadata = memoizedMetadata(output.metadata.get(mediaType));\n      const data = output.data[mediaType];\n      const Media = selectors.transform(state, { id: mediaType });\n      return {\n        Media,\n        mediaType,\n        data,\n        metadata,\n        theme\n      };\n    }\n    return {\n      Media: () => null,\n      mediaType,\n      output,\n      theme\n    };\n  };\n  return mapStateToProps;\n};\n\nconst makeMapDispatchToProps = (\n  initialDispath: Dispatch,\n  initialProps: OwnProps\n) => {\n  const { cellId, contentRef, index } = initialProps;\n  const mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n      mediaActions: {\n        onMetadataChange: (metadata: JSONObject, mediaType: string) => {\n          dispatch(\n            actions.updateOutputMetadata({\n              id: cellId,\n              contentRef,\n              metadata,\n              index,\n              mediaType\n            })\n          );\n        }\n      }\n    };\n  };\n  return mapDispatchToProps;\n};\n\nconst TransformMedia = connect(\n  makeMapStateToProps,\n  makeMapDispatchToProps\n)(PureTransformMedia);\n\nexport default TransformMedia;\n","import { EditorConfiguration } from \"codemirror\";\n\n// For some reason the addon typings don't export options we need for\n// recomposition. Instead they add on to the EditorConfiguration interface.\n// As a result we have to import bare modules to get the additional properties\n// we want on the EditorConfiguration interface.\n// import \"codemirror/codemirror-matchbrackets\";\n// import \"codemirror/codemirror-showhint\";\n// However, if we import these they're on the wrong path for actual import and\n// webpack fails. Instead we'll encode our typings here...\n\ntype FullEditorConfiguration = EditorConfiguration & {\n  showHint?: boolean;\n  hintOptions?: any;\n  matchBrackets?: boolean;\n};\n\nexport { FullEditorConfiguration };\n\n// Declare which options we allow being configured\nexport const configurableCodeMirrorOptions: {\n  // Ensure we capture each of the editor configuration options\n  [k in keyof FullEditorConfiguration]: boolean\n} = {\n  // Do nothing with value, we handle it in a separately managed way\n  value: false,\n  mode: true,\n  // We don't allow overriding the theme as we use this to help theme codemirror\n  theme: false,\n  indentUnit: true,\n  smartIndent: true,\n  tabSize: true,\n  indentWithTabs: true,\n  electricChars: true,\n  rtlMoveVisually: true,\n  keyMap: true,\n  // We're in control of `extraKeys` since we need to bind them to our events\n  extraKeys: false,\n  lineWrapping: true,\n  lineNumbers: true,\n  firstLineNumber: true,\n  lineNumberFormatter: true,\n  gutters: true,\n  fixedGutter: true,\n  readOnly: true,\n  showCursorWhenSelecting: true,\n  undoDepth: true,\n  historyEventDelay: true,\n  tabindex: true,\n  autofocus: true,\n  dragDrop: true,\n  onDragEvent: true,\n  onKeyEvent: true,\n  cursorBlinkRate: true,\n  cursorHeight: true,\n  workTime: true,\n  workDelay: true,\n  pollInterval: true,\n  flattenSpans: true,\n  maxHighlightLength: true,\n  viewportMargin: true,\n  lint: true,\n  placeholder: true,\n\n  // CodeMirror addon configurations\n  showHint: true,\n  // We don't want overriding of the hint behavior\n  hintOptions: false\n};\n\nexport function isConfigurable(\n  option: any\n): option is keyof EditorConfiguration {\n  return !!(configurableCodeMirrorOptions as { [s: string]: boolean })[option];\n}\n","export const excludedIntelliSenseTriggerKeys: { [keycode: string]: string } = {\n  \"8\": \"backspace\",\n  \"9\": \"tab\",\n  \"13\": \"enter\",\n  \"16\": \"shift\",\n  \"17\": \"ctrl\",\n  \"18\": \"alt\",\n  \"19\": \"pause\",\n  \"20\": \"capslock\",\n  \"27\": \"escape\",\n  \"32\": \"space\",\n  \"33\": \"pageup\",\n  \"34\": \"pagedown\",\n  \"35\": \"end\",\n  \"36\": \"home\",\n  \"37\": \"left\",\n  \"38\": \"up\",\n  \"39\": \"right\",\n  \"40\": \"down\",\n  \"45\": \"insert\",\n  \"46\": \"delete\",\n  \"91\": \"left window key\",\n  \"92\": \"right window key\",\n  \"93\": \"select\",\n  \"107\": \"add\",\n  \"109\": \"subtract\",\n  \"110\": \"decimal point\",\n  \"111\": \"divide\",\n  \"112\": \"f1\",\n  \"113\": \"f2\",\n  \"114\": \"f3\",\n  \"115\": \"f4\",\n  \"116\": \"f5\",\n  \"117\": \"f6\",\n  \"118\": \"f7\",\n  \"119\": \"f8\",\n  \"120\": \"f9\",\n  \"121\": \"f10\",\n  \"122\": \"f11\",\n  \"123\": \"f12\",\n  \"144\": \"numlock\",\n  \"145\": \"scrolllock\",\n  \"186\": \"semicolon\",\n  \"187\": \"equalsign\",\n  \"188\": \"comma\",\n  \"189\": \"dash\",\n  \"192\": \"graveaccent\",\n  \"220\": \"backslash\",\n  \"222\": \"quote\"\n};\n","import * as React from \"react\";\nimport styled, { StyledComponent } from \"styled-components\";\n\ninterface TypeIconProps {\n  type?:\n    | \"module\"\n    | \"keyword\"\n    | \"statement\"\n    | \"function\"\n    | \"instance\"\n    | \"null\"\n    | \"class\"\n    | string; // Allow others we may not support yet\n}\n\ninterface HintProps {\n  text: string;\n  type?: TypeIconProps[\"type\"];\n  displayText?: string;\n  [other: string]: any;\n}\n\n// Completion to us, \"hint\" to codemirror\nexport function Hint(props: HintProps): JSX.Element {\n  return (\n    <React.Fragment>\n      {props.type ? <TypeIcon type={props.type} /> : null}\n      {props.displayText || props.text}\n    </React.Fragment>\n  );\n}\n\n/**\n * An Icon to show before a code hint to show the type\n * (e.g. Module, Keyword, etc.)\n */\nexport const TypeIcon: StyledComponent<\n  \"span\",\n  any,\n  TypeIconProps\n> = styled.span.attrs<TypeIconProps>(props => ({\n  className: `completion-type-${props.type}`,\n  title: props.type\n}))`\n  & {\n    background: transparent;\n    border: transparent 1px solid;\n    width: 17px;\n    height: 17px;\n    margin: 0;\n    padding: 0;\n    display: inline-block;\n    margin-right: 5px;\n    top: 18px;\n  }\n\n  &:before {\n    /* When experimental type completion isn't available render the left side as \"nothing\" */\n    content: \" \";\n    bottom: 1px;\n    left: 4px;\n    position: relative;\n    color: white;\n  }\n  /* color and content for each type of completion */\n  &.completion-type-keyword:before {\n    content: \"K\";\n  }\n  &.completion-type-keyword {\n    background-color: darkred;\n  }\n  &.completion-type-class:before {\n    content: \"C\";\n  }\n  &.completion-type-class {\n    background-color: blueviolet;\n  }\n  &.completion-type-module:before {\n    content: \"M\";\n  }\n  &.completion-type-module {\n    background-color: chocolate;\n  }\n  &.completion-type-statement:before {\n    content: \"S\";\n  }\n  &.completion-type-statement {\n    background-color: forestgreen;\n  }\n  &.completion-type-function:before {\n    content: \"ƒ\";\n  }\n  &.completion-type-function {\n    background-color: yellowgreen;\n  }\n  &.completion-type-instance:before {\n    content: \"I\";\n  }\n  &.completion-type-instance {\n    background-color: teal;\n  }\n  &.completion-type-null:before {\n    content: \"ø\";\n  }\n  &.completion-type-null {\n    background-color: black;\n  }\n`; // Somehow setting the type on `attrs` isn't propagating properly\n","// javascript stores text as utf16 and string indices use \"code units\",\n// which stores high-codepoint characters as \"surrogate pairs\",\n// which occupy two indices in the javascript string.\n// We need to translate cursor_pos in the protocol (in characters)\n// to js offset (with surrogate pairs taking two spots).\nlet js_idx_to_char_idx: (js_idx: number, text: string) => number = (\n  js_idx: number,\n  text: string\n): number => {\n  let char_idx: number = js_idx;\n  for (let i: number = 0; i + 1 < text.length && i < js_idx; i++) {\n    const char_code: number = text.charCodeAt(i);\n    // check for surrogate pair\n    if (char_code >= 0xd800 && char_code <= 0xdbff) {\n      const next_char_code: number = text.charCodeAt(i + 1);\n      if (next_char_code >= 0xdc00 && next_char_code <= 0xdfff) {\n        char_idx--;\n        i++;\n      }\n    }\n  }\n  return char_idx;\n};\n\nlet char_idx_to_js_idx: (char_idx: number, text: string) => number = (\n  char_idx: number,\n  text: string\n): number => {\n  let js_idx: number = char_idx;\n  for (let i: number = 0; i + 1 < text.length && i < js_idx; i++) {\n    const char_code: number = text.charCodeAt(i);\n    // check for surrogate pair\n    if (char_code >= 0xd800 && char_code <= 0xdbff) {\n      const next_char_code: number = text.charCodeAt(i + 1);\n      if (next_char_code >= 0xdc00 && next_char_code <= 0xdfff) {\n        js_idx++;\n        i++;\n      }\n    }\n  }\n  return js_idx;\n};\n\n// This is not a normal \"a\"!\nif (\"𝐚\".length === 1) {\n  // If javascript fixes string indices of non-BMP characters,\n  // don't keep shifting offsets to compensate for surrogate pairs\n  char_idx_to_js_idx = js_idx_to_char_idx = (idx: number, _text: string) => {\n    return idx;\n  };\n}\n\nexport { char_idx_to_js_idx, js_idx_to_char_idx };\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  childOf,\n  createMessage,\n  JupyterMessage,\n  ofMessageType\n} from \"@nteract/messaging\";\nimport { Channels } from \"@nteract/messaging\";\nimport { Doc, Editor, Position } from \"codemirror\";\nimport { Observable, Observer } from \"rxjs\";\nimport { first, map, timeout } from \"rxjs/operators\";\n\nimport { Hint } from \"../components/hint\";\nimport { char_idx_to_js_idx, js_idx_to_char_idx } from \"./surrogate\";\n\n// Hint picker\nexport function pick(_cm: any, handle: { pick: () => void }): void {\n  handle.pick();\n}\n\nexport function formChangeObject<T, U>(cm: T, change: U) {\n  return {\n    cm,\n    change\n  };\n}\n\ninterface CompletionResult {\n  end: number;\n  start: number;\n  type: string;\n  text: string;\n  displayText?: string;\n}\n\ntype CompletionMatch = string | CompletionResult;\n\ninterface CompletionResults {\n  cursor_start: number;\n  cursor_end: number;\n  matches: CompletionMatch[];\n  metadata?: {\n    _jupyter_types_experimental?: any;\n  };\n}\n\n// duplicate of default codemirror rendering logic for completions,\n// except if the completion have a metadata._experimental key, dispatch to a new\n// completer for these new values.\nexport const expand_completions = (editor: Doc) => (\n  results: CompletionResults\n) => {\n  let start: number = results.cursor_start;\n  let end: number = results.cursor_end;\n\n  if (end === null) {\n    // adapted message spec replies don't have cursor position info,\n    // interpret end=null as current position,\n    // and negative start relative to that\n    end = editor.indexFromPos(editor.getCursor());\n    if (start === null) {\n      start = end;\n    } else if (start < 0) {\n      start = end + start;\n    }\n  } else {\n    // handle surrogate pairs\n    // HACK: This seems susceptible to timing issues, we could verify changes in\n    //       what's in the editor, as we'll be able to correlate across events\n    //       Suggestions and background in https://github.com/nteract/nteract/pull/1840#discussion_r133380430\n    const text: string = editor.getValue();\n    end = char_idx_to_js_idx(end, text);\n    start = char_idx_to_js_idx(start, text);\n  }\n\n  const from: Position = editor.posFromIndex(start);\n  const to: Position = editor.posFromIndex(end);\n\n  let matches: CompletionMatch[] = results.matches;\n\n  // ipykernel may return experimental completion in the metadata field,\n  // experiment with these. We use codemirror ability to take a rendering\n  // function on a per completion basis (we can't give a global one :-( to\n  // render not only the text, but the type as well.\n  // as this is not documented in CM the DOM structure of the completer will be\n  //\n  // <ul class=\"CodeMirror-hints\" >\n  //  <li class=\"CodeMirror-hint\"></li>\n  //  <li class=\"CodeMirror-hint CodeMirror-hint-active\"></li>\n  //  <li class=\"CodeMirror-hint\"></li>\n  //  <li class=\"CodeMirror-hint\"></li>\n  // </ul>\n  // with each <li/> passed as the first argument of render.\n  if (results.metadata && results.metadata._jupyter_types_experimental) {\n    matches = results.metadata._jupyter_types_experimental;\n  }\n\n  function render(\n    elt: HTMLElement,\n    data: any, // Not used, it's the overall list of results\n    // The \"completion\" result here is literally whatever object we return as\n    // elements to the list return below, as CodeMirror uses this render\n    // callback later\n    completion: { text: string; type?: string }\n  ): void {\n    ReactDOM.render(<Hint {...completion} />, elt);\n  }\n\n  return {\n    list: matches.map((match: CompletionMatch) => {\n      if (typeof match === \"string\") {\n        return { to, from, text: match, render };\n      }\n\n      return {\n        to,\n        from,\n        render,\n        ...match\n      };\n    }),\n    from,\n    to\n  };\n};\n\nexport function codeCompleteObservable(\n  channels: Channels,\n  editor: Doc,\n  message: JupyterMessage\n) {\n  const completion$ = channels.pipe(\n    childOf(message),\n    ofMessageType(\"complete_reply\"),\n    map(entry => entry.content),\n    first(),\n    map(expand_completions(editor)),\n    timeout(15000) // Large timeout for slower languages; this is just here to make sure we eventually clean up resources\n  );\n\n  // On subscription, send the message\n  return Observable.create((observer: Observer<any>) => {\n    const subscription = completion$.subscribe(observer);\n    channels.next(message);\n    return subscription;\n  });\n}\n\nexport const completionRequest = (code: string, cursorPos: number) =>\n  createMessage(\"complete_request\", {\n    content: {\n      code,\n      cursor_pos: cursorPos\n    }\n  });\n\nexport function codeComplete(channels: Channels, editor: Doc) {\n  const cursor = editor.getCursor();\n  let cursorPos = editor.indexFromPos(cursor);\n  const code = editor.getValue();\n  cursorPos = js_idx_to_char_idx(cursorPos, code);\n\n  const message = completionRequest(code, cursorPos);\n\n  return codeCompleteObservable(channels, editor, message);\n}\n","import {\n  Channels,\n  childOf,\n  createMessage,\n  JupyterMessage,\n  ofMessageType\n} from \"@nteract/messaging\";\nimport { Doc, Editor, Position } from \"codemirror\";\nimport { Observable, Observer } from \"rxjs\";\nimport { first, map } from \"rxjs/operators\";\n\nimport { js_idx_to_char_idx } from \"./surrogate\";\n\nexport function tooltipObservable(\n  channels: Channels,\n  _editor: Editor & Doc,\n  message: JupyterMessage\n) {\n  const tip$ = channels.pipe(\n    childOf(message),\n    ofMessageType(\"inspect_reply\"),\n    map((entry: JupyterMessage) => entry.content),\n    first(),\n    map(results => ({\n      dict: results.data\n    }))\n  );\n  // On subscription, send the message\n  return Observable.create((observer: Observer<any>) => {\n    const subscription = tip$.subscribe(observer);\n    channels.next(message);\n    return subscription;\n  });\n}\n\nexport function tooltipRequest(\n  code: string,\n  cursorPos: number\n): JupyterMessage<\"inspect_request\", any> {\n  return createMessage(\"inspect_request\", {\n    content: {\n      code,\n      cursor_pos: cursorPos,\n      detail_level: 0\n    }\n  });\n}\n\nexport function tool(channels: Channels, editor: Editor & Doc) {\n  const cursor: Position = editor.getCursor();\n  // Get position while handling surrogate pairs\n  const cursorPos: number = js_idx_to_char_idx(\n    editor.indexFromPos(cursor),\n    editor.getValue()\n  );\n  const code: string = editor.getValue();\n\n  const message: JupyterMessage<\"inspect_request\", any> = tooltipRequest(\n    code,\n    cursorPos\n  );\n  return tooltipObservable(channels, editor, message);\n}\n","import styled, { StyledComponent } from \"styled-components\";\n\n/**\n * This is the <textarea /> we let CodeMirror hijack.\n *\n * This also provides a decent server-side renderable <textarea /> that matches\n * the style of our CodeMirror editor.\n */\nexport const TextArea: StyledComponent<\n  \"textarea\",\n  any,\n  { autoComplete: \"off\" },\n  \"autoComplete\"\n> = styled.textarea.attrs({ autoComplete: \"off\" })`\n  font-family: \"Dank Mono\", dm, \"Source Code Pro\", \"Monaco\", monospace;\n  font-size: 14px;\n  line-height: 20px;\n\n  height: inherit;\n\n  background: none;\n\n  border: none;\n  overflow: hidden;\n\n  -webkit-scrollbar: none;\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none;\n  width: 100%;\n  resize: none;\n  padding: 10px 0 5px 10px;\n  letter-spacing: 0.3px;\n  word-spacing: 0px;\n\n  &:focus {\n    outline: none;\n    border: none;\n  }\n`;\n\nexport { TextArea as InitialTextArea };\n","import { createGlobalStyle } from \"styled-components\";\n\n// This file contains the base codemirror styles for including in the base editor\n// Copied directly from codemirror/lib/codemirror.css\n\nexport default createGlobalStyle`\n  /* BASICS */\n\n  .CodeMirror {\n    /* Set height, width, borders, and global font properties here */\n    font-family: monospace;\n    height: 300px;\n    color: black;\n    direction: ltr;\n  }\n\n  /* PADDING */\n\n  .CodeMirror-lines {\n    padding: 4px 0; /* Vertical padding around content */\n  }\n  .CodeMirror pre {\n    padding: 0 4px; /* Horizontal padding of content */\n  }\n\n  .CodeMirror-scrollbar-filler,\n  .CodeMirror-gutter-filler {\n    background-color: white; /* The little square between H and V scrollbars */\n  }\n\n  /* GUTTER */\n\n  .CodeMirror-gutters {\n    border-right: 1px solid #ddd;\n    background-color: #f7f7f7;\n    white-space: nowrap;\n  }\n  .CodeMirror-linenumbers {\n  }\n  .CodeMirror-linenumber {\n    padding: 0 3px 0 5px;\n    min-width: 20px;\n    text-align: right;\n    color: #999;\n    white-space: nowrap;\n  }\n\n  .CodeMirror-guttermarker {\n    color: black;\n  }\n  .CodeMirror-guttermarker-subtle {\n    color: #999;\n  }\n\n  /* CURSOR */\n\n  .CodeMirror-cursor {\n    border-left: 1px solid black;\n    border-right: none;\n    width: 0;\n  }\n  /* Shown when moving in bi-directional text */\n  .CodeMirror div.CodeMirror-secondarycursor {\n    border-left: 1px solid silver;\n  }\n  .cm-fat-cursor .CodeMirror-cursor {\n    width: auto;\n    border: 0 !important;\n    background: #7e7;\n  }\n  .cm-fat-cursor div.CodeMirror-cursors {\n    z-index: 1;\n  }\n  .cm-fat-cursor-mark {\n    background-color: rgba(20, 255, 20, 0.5);\n    -webkit-animation: blink 1.06s steps(1) infinite;\n    -moz-animation: blink 1.06s steps(1) infinite;\n    animation: blink 1.06s steps(1) infinite;\n  }\n  .cm-animate-fat-cursor {\n    width: auto;\n    border: 0;\n    -webkit-animation: blink 1.06s steps(1) infinite;\n    -moz-animation: blink 1.06s steps(1) infinite;\n    animation: blink 1.06s steps(1) infinite;\n    background-color: #7e7;\n  }\n  @-moz-keyframes blink {\n    0% {\n    }\n    50% {\n      background-color: transparent;\n    }\n    100% {\n    }\n  }\n  @-webkit-keyframes blink {\n    0% {\n    }\n    50% {\n      background-color: transparent;\n    }\n    100% {\n    }\n  }\n  @keyframes blink {\n    0% {\n    }\n    50% {\n      background-color: transparent;\n    }\n    100% {\n    }\n  }\n\n  /* Can style cursor different in overwrite (non-insert) mode */\n  .CodeMirror-overwrite .CodeMirror-cursor {\n  }\n\n  .cm-tab {\n    display: inline-block;\n    text-decoration: inherit;\n  }\n\n  .CodeMirror-rulers {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: -50px;\n    bottom: -20px;\n    overflow: hidden;\n  }\n  .CodeMirror-ruler {\n    border-left: 1px solid #ccc;\n    top: 0;\n    bottom: 0;\n    position: absolute;\n  }\n\n  /* DEFAULT THEME */\n\n  .cm-s-default .cm-header {\n    color: blue;\n  }\n  .cm-s-default .cm-quote {\n    color: #090;\n  }\n  .cm-negative {\n    color: #d44;\n  }\n  .cm-positive {\n    color: #292;\n  }\n  .cm-header,\n  .cm-strong {\n    font-weight: bold;\n  }\n  .cm-em {\n    font-style: italic;\n  }\n  .cm-link {\n    text-decoration: underline;\n  }\n  .cm-strikethrough {\n    text-decoration: line-through;\n  }\n\n  .cm-s-default .cm-keyword {\n    color: #708;\n  }\n  .cm-s-default .cm-atom {\n    color: #219;\n  }\n  .cm-s-default .cm-number {\n    color: #164;\n  }\n  .cm-s-default .cm-def {\n    color: #00f;\n  }\n  .cm-s-default .cm-variable,\n  .cm-s-default .cm-punctuation,\n  .cm-s-default .cm-property,\n  .cm-s-default .cm-operator {\n  }\n  .cm-s-default .cm-variable-2 {\n    color: #05a;\n  }\n  .cm-s-default .cm-variable-3,\n  .cm-s-default .cm-type {\n    color: #085;\n  }\n  .cm-s-default .cm-comment {\n    color: #a50;\n  }\n  .cm-s-default .cm-string {\n    color: #a11;\n  }\n  .cm-s-default .cm-string-2 {\n    color: #f50;\n  }\n  .cm-s-default .cm-meta {\n    color: #555;\n  }\n  .cm-s-default .cm-qualifier {\n    color: #555;\n  }\n  .cm-s-default .cm-builtin {\n    color: #30a;\n  }\n  .cm-s-default .cm-bracket {\n    color: #997;\n  }\n  .cm-s-default .cm-tag {\n    color: #170;\n  }\n  .cm-s-default .cm-attribute {\n    color: #00c;\n  }\n  .cm-s-default .cm-hr {\n    color: #999;\n  }\n  .cm-s-default .cm-link {\n    color: #00c;\n  }\n\n  .cm-s-default .cm-error {\n    color: #f00;\n  }\n  .cm-invalidchar {\n    color: #f00;\n  }\n\n  .CodeMirror-composing {\n    border-bottom: 2px solid;\n  }\n\n  /* Default styles for common addons */\n\n  div.CodeMirror span.CodeMirror-matchingbracket {\n    color: #0b0;\n  }\n  div.CodeMirror span.CodeMirror-nonmatchingbracket {\n    color: #a22;\n  }\n  .CodeMirror-matchingtag {\n    background: rgba(255, 150, 0, 0.3);\n  }\n  .CodeMirror-activeline-background {\n    background: #e8f2ff;\n  }\n\n  /* STOP */\n\n  /* The rest of this file contains styles related to the mechanics of\n   the editor. You probably shouldn't touch them. */\n\n  .CodeMirror {\n    position: relative;\n    overflow: hidden;\n    background: white;\n  }\n\n  .CodeMirror-scroll {\n    overflow: scroll !important; /* Things will break if this is overridden */\n    /* 30px is the magic margin used to hide the element's real scrollbars */\n    /* See overflow: hidden in .CodeMirror */\n    margin-bottom: -30px;\n    margin-right: -30px;\n    padding-bottom: 30px;\n    height: 100%;\n    outline: none; /* Prevent dragging from highlighting the element */\n    position: relative;\n  }\n  .CodeMirror-sizer {\n    position: relative;\n    border-right: 30px solid transparent;\n  }\n\n  /* The fake, visible scrollbars. Used to force redraw during scrolling\n   before actual scrolling happens, thus preventing shaking and\n   flickering artifacts. */\n  .CodeMirror-vscrollbar,\n  .CodeMirror-hscrollbar,\n  .CodeMirror-scrollbar-filler,\n  .CodeMirror-gutter-filler {\n    position: absolute;\n    z-index: 6;\n    display: none;\n  }\n  .CodeMirror-vscrollbar {\n    right: 0;\n    top: 0;\n    overflow-x: hidden;\n    overflow-y: scroll;\n  }\n  .CodeMirror-hscrollbar {\n    bottom: 0;\n    left: 0;\n    overflow-y: hidden;\n    overflow-x: scroll;\n  }\n  .CodeMirror-scrollbar-filler {\n    right: 0;\n    bottom: 0;\n  }\n  .CodeMirror-gutter-filler {\n    left: 0;\n    bottom: 0;\n  }\n\n  .CodeMirror-gutters {\n    position: absolute;\n    left: 0;\n    top: 0;\n    min-height: 100%;\n    z-index: 3;\n  }\n  .CodeMirror-gutter {\n    white-space: normal;\n    height: 100%;\n    display: inline-block;\n    vertical-align: top;\n    margin-bottom: -30px;\n  }\n  .CodeMirror-gutter-wrapper {\n    position: absolute;\n    z-index: 4;\n    background: none !important;\n    border: none !important;\n  }\n  .CodeMirror-gutter-background {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    z-index: 4;\n  }\n  .CodeMirror-gutter-elt {\n    position: absolute;\n    cursor: default;\n    z-index: 4;\n  }\n  .CodeMirror-gutter-wrapper ::selection {\n    background-color: transparent;\n  }\n  .CodeMirror-gutter-wrapper ::-moz-selection {\n    background-color: transparent;\n  }\n\n  .CodeMirror-lines {\n    cursor: text;\n    min-height: 1px; /* prevents collapsing before first draw */\n  }\n  .CodeMirror pre {\n    /* Reset some styles that the rest of the page might have set */\n    -moz-border-radius: 0;\n    -webkit-border-radius: 0;\n    border-radius: 0;\n    border-width: 0;\n    background: transparent;\n    font-family: inherit;\n    font-size: inherit;\n    margin: 0;\n    white-space: pre;\n    word-wrap: normal;\n    line-height: inherit;\n    color: inherit;\n    z-index: 2;\n    position: relative;\n    overflow: visible;\n    -webkit-tap-highlight-color: transparent;\n    -webkit-font-variant-ligatures: contextual;\n    font-variant-ligatures: contextual;\n  }\n  .CodeMirror-wrap pre {\n    word-wrap: break-word;\n    white-space: pre-wrap;\n    word-break: normal;\n  }\n\n  .CodeMirror-linebackground {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 0;\n  }\n\n  .CodeMirror-linewidget {\n    position: relative;\n    z-index: 2;\n    padding: 0.1px; /* Force widget margins to stay inside of the container */\n  }\n\n  .CodeMirror-widget {\n  }\n\n  .CodeMirror-rtl pre {\n    direction: rtl;\n  }\n\n  .CodeMirror-code {\n    outline: none;\n  }\n\n  /* Force content-box sizing for the elements where we expect it */\n  .CodeMirror-scroll,\n  .CodeMirror-sizer,\n  .CodeMirror-gutter,\n  .CodeMirror-gutters,\n  .CodeMirror-linenumber {\n    -moz-box-sizing: content-box;\n    box-sizing: content-box;\n  }\n\n  .CodeMirror-measure {\n    position: absolute;\n    width: 100%;\n    height: 0;\n    overflow: hidden;\n    visibility: hidden;\n  }\n\n  .CodeMirror-cursor {\n    position: absolute;\n    pointer-events: none;\n  }\n  .CodeMirror-measure pre {\n    position: static;\n  }\n\n  div.CodeMirror-cursors {\n    visibility: hidden;\n    position: relative;\n    z-index: 3;\n  }\n  div.CodeMirror-dragcursors {\n    visibility: visible;\n  }\n\n  .CodeMirror-focused div.CodeMirror-cursors {\n    visibility: visible;\n  }\n\n  .CodeMirror-selected {\n    background: #d9d9d9;\n  }\n  .CodeMirror-focused .CodeMirror-selected {\n    background: #d7d4f0;\n  }\n  .CodeMirror-crosshair {\n    cursor: crosshair;\n  }\n  .CodeMirror-line::selection,\n  .CodeMirror-line > span::selection,\n  .CodeMirror-line > span > span::selection {\n    background: #d7d4f0;\n  }\n  .CodeMirror-line::-moz-selection,\n  .CodeMirror-line > span::-moz-selection,\n  .CodeMirror-line > span > span::-moz-selection {\n    background: #d7d4f0;\n  }\n\n  .cm-searching {\n    background-color: #ffa;\n    background-color: rgba(255, 255, 0, 0.4);\n  }\n\n  /* Used to force a border model for a node */\n  .cm-force-border {\n    padding-right: 0.1px;\n  }\n\n  @media print {\n    /* Hide the cursor when printing */\n    .CodeMirror div.CodeMirror-cursors {\n      visibility: hidden;\n    }\n  }\n\n  /* See issue #2901 */\n  .cm-tab-wrap-hack:after {\n    content: \"\";\n  }\n\n  /* Help users use markselection to safely style text background */\n  span.CodeMirror-selectedtext {\n    background: none;\n  }\n\n/*************************** OVERRIDES ***************************/\n/* These styles override CodeMirror styling, to ease our theming */\n\n.CodeMirror {\n    height: \"100%\";\n    font-family: \"Dank Mono\", dm, \"Source Code Pro\", \"Monaco\", monospace;\n    font-size: 14px;\n    line-height: 20px;\n\n    height: auto;\n\n    background: none;\n  }\n\n  .CodeMirror-cursor {\n    border-left-width: 1px;\n    border-left-style: solid;\n    border-left-color: var(--cm-color, black);\n  }\n\n  .CodeMirror-scroll {\n    overflow-x: auto !important;\n    overflow-y: hidden !important;\n    width: 100%;\n  }\n\n  .CodeMirror-lines {\n    padding: 0.4em;\n  }\n\n  .CodeMirror-linenumber {\n    padding: 0 8px 0 4px;\n  }\n\n  .CodeMirror-gutters {\n    border-top-left-radius: 2px;\n    border-bottom-left-radius: 2px;\n  }\n\n  /** Override particular styles to allow for theming via CSS Variables */\n  .cm-s-composition.CodeMirror {\n    font-family: \"Source Code Pro\", monospace;\n    letter-spacing: 0.3px;\n    word-spacing: 0px;\n    background: var(--cm-background, #fafafa);\n    color: var(--cm-color, black);\n  }\n  .cm-s-composition .CodeMirror-lines {\n    padding: 10px;\n  }\n  .cm-s-composition .CodeMirror-gutters {\n    background-color: var(--cm-gutter-bg, white);\n    padding-right: 10px;\n    z-index: 3;\n    border: none;\n  }\n\n  .cm-s-composition span.cm-comment {\n    color: var(--cm-comment, #a86);\n  }\n  .cm-s-composition span.cm-keyword {\n    line-height: 1em;\n    font-weight: bold;\n    color: var(--cm-keyword, blue);\n  }\n  .cm-s-composition span.cm-string {\n    color: var(--cm-string, #a22);\n  }\n  .cm-s-composition span.cm-builtin {\n    line-height: 1em;\n    font-weight: bold;\n    color: var(--cm-builtin, #077);\n  }\n  .cm-s-composition span.cm-special {\n    line-height: 1em;\n    font-weight: bold;\n    color: var(--cm-special, #0aa);\n  }\n  .cm-s-composition span.cm-variable {\n    color: var(--cm-variable, black);\n  }\n  .cm-s-composition span.cm-number,\n  .cm-s-composition span.cm-atom {\n    color: var(--cm-number, #3a3);\n  }\n  .cm-s-composition span.cm-meta {\n    color: var(--cm-meta, #555);\n  }\n  .cm-s-composition span.cm-link {\n    color: var(--cm-link, #3a3);\n  }\n  .cm-s-composition span.cm-operator {\n    color: var(--cm-operator, black);\n  }\n  .cm-s-composition span.cm-def {\n    color: var(--cm-def, black);\n  }\n  .cm-s-composition .CodeMirror-activeline-background {\n    background: var(--cm-activeline-bg, #e8f2ff);\n  }\n  .cm-s-composition .CodeMirror-matchingbracket {\n    border-bottom: 1px solid var(--cm-matchingbracket-outline, grey);\n    color: var(--cm-matchingbracket-color, black) !important;\n  }\n\n\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\n/**\n * Note that codemirror hint rendering is only controllable per entry within a list of\n * hints. The styling for our actual hint is in ../components/hint.tsx, but doesn't encompass\n * the .CodeMirror-hints container nor the individual entry .CodeMirror-hint.\n *\n * DOM structure wise, it looks like this:\n *\n * <ul class=\"CodeMirror-hints\">\n *   <li class=\"CodeMirror-hint CodeMirror-hint-active\">\n *     {elementWeControl}\n *   </li>\n *   <li class=\"CodeMirror-hint CodeMirror-hint-active\">\n *     {anotherElementWeControl}\n *   </li>\n * </ul>\n */\n\nexport default createGlobalStyle`\n/* From codemirror/addon/hint/show-hint.css */\n/* There are overrides at the bottom of this stylesheet to cooperate with nteract */\n\n.CodeMirror-hints {\n  position: absolute;\n  z-index: 10;\n  overflow: hidden;\n  list-style: none;\n\n  margin: 0;\n  padding: 2px;\n\n  -webkit-box-shadow: 2px 3px 5px rgba(0,0,0,.2);\n  -moz-box-shadow: 2px 3px 5px rgba(0,0,0,.2);\n  box-shadow: 2px 3px 5px rgba(0,0,0,.2);\n  border-radius: 3px;\n  border: 1px solid silver;\n\n  background: white;\n  font-size: 90%;\n  font-family: monospace;\n\n  max-height: 20em;\n  overflow-y: auto;\n}\n\n.CodeMirror-hint {\n  margin: 0;\n  padding: 0 4px;\n  border-radius: 2px;\n  white-space: pre;\n  color: black;\n  cursor: pointer;\n}\n\nli.CodeMirror-hint-active {\n  background: #08f;\n  color: white;\n}\n\n/*************************** OVERRIDES ***************************/\n/* These styles override hint styling, used for code completion */\n\n.CodeMirror-hints {\n    -webkit-box-shadow: 2px 3px 5px rgba(0, 0, 0, 0.2);\n    -moz-box-shadow: 2px 3px 5px rgba(0, 0, 0, 0.2);\n    box-shadow: 2px 3px 5px rgba(0, 0, 0, 0.2);\n    border-radius: 0px;\n    border: none;\n    padding: 0;\n\n    background: var(--cm-hint-bg, white);\n    font-size: 90%;\n    font-family: \"Source Code Pro\", monospace;\n\n    /*_________*/\n    z-index: 9001;  /* known as wow just bring it to the front, ignore the rest of the UI */\n\n    overflow-y: auto;\n  }\n\n  .CodeMirror-hint {\n    border-radius: 0px;\n    white-space: pre;\n    cursor: pointer;\n    color: var(--cm-hint-color, black);\n  }\n\n  li.CodeMirror-hint-active {\n    background: var(--cm-hint-bg-active, #abd1ff);\n    color: var(--cm-hint-color-active, black);\n  }\n\n  /** Handle the type hint segment */\n  .CodeMirror-hint {\n    padding-left: 0;\n    border-bottom: none;\n  }\n`;\n","import { Channels } from \"@nteract/messaging\";\nimport { Media, RichMedia } from \"@nteract/outputs\";\nimport CodeMirror, {\n  Doc,\n  Editor,\n  EditorChangeLinkedList,\n  EditorFromTextArea,\n  Position,\n  Token\n} from \"codemirror\";\n\nimport {\n  configurableCodeMirrorOptions,\n  FullEditorConfiguration,\n  isConfigurable\n} from \"./configurable\";\n\nimport { debounce } from \"lodash\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  empty,\n  fromEvent,\n  merge,\n  Observable,\n  of,\n  Subject,\n  Subscription\n} from \"rxjs\";\nimport {\n  catchError,\n  debounceTime,\n  map,\n  partition,\n  repeat,\n  switchMap,\n  takeUntil\n} from \"rxjs/operators\";\n\nimport { excludedIntelliSenseTriggerKeys } from \"./excludedIntelliSenseKeys\";\nimport { codeComplete, pick } from \"./jupyter/complete\";\nimport { tool } from \"./jupyter/tooltip\";\n\nimport { InitialTextArea } from \"./components/initial-text-area\";\n\nimport CodeMirrorCSS from \"./vendored/codemirror\";\nimport ShowHintCSS from \"./vendored/show-hint\";\n\nexport { CodeMirrorCSS, ShowHintCSS };\n\nimport styled, { StyledComponent } from \"styled-components\";\n\nconst TipButton: StyledComponent<\"button\", never> = styled.button`\n  float: right;\n  display: inline-block;\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  font-size: 11.5px;\n`;\n\nconst Tip: StyledComponent<\"div\", never> = styled.div`\n  padding: 20px 20px 50px 20px;\n  margin: 30px 20px 50px 20px;\n  box-shadow: 2px 2px 50px rgba(0, 0, 0, 0.2);\n  white-space: pre-wrap;\n  background-color: var(--theme-app-bg);\n  z-index: 9999999;\n`;\n\nfunction normalizeLineEndings(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\r\\n|\\r/g, \"\\n\");\n}\n\nexport interface EditorKeyEvent {\n  editor: Editor;\n  ev: KeyboardEvent;\n}\n\nexport type CodeMirrorEditorProps = {\n  preserveScrollPosition: boolean;\n  editorFocused: boolean;\n  completion: boolean;\n  tip?: boolean;\n  focusAbove?: (instance: Editor) => void;\n  focusBelow?: (instance: Editor) => void;\n  // _Our_ theme, not the codemirror one we use\n  theme: string;\n  channels?: Channels | null;\n  // TODO: We only check if this is idle, so the completion provider should only\n  //       care about this when kernelStatus === idle _and_ we're the active cell\n  //       could instead call it `canTriggerCompletion` and reduce our current re-renders\n  kernelStatus: string;\n  onChange?: (value: string, change: EditorChangeLinkedList) => void;\n  onFocusChange?: (focused: boolean) => void;\n  value: string;\n} & Partial<FullEditorConfiguration>;\n\ninterface CodeMirrorEditorState {\n  isFocused: boolean;\n  tipElement?: any;\n}\n\ninterface CodeCompletionEvent {\n  editor: Editor & Doc;\n  callback: (completionResult: any) => {};\n  debounce: boolean;\n}\n\nexport default class CodeMirrorEditor extends React.PureComponent<\n  CodeMirrorEditorProps,\n  CodeMirrorEditorState\n> {\n  static defaultProps: Partial<CodeMirrorEditorProps> = {\n    value: \"\",\n    channels: null,\n    completion: false,\n    editorFocused: false,\n    kernelStatus: \"not connected\",\n    theme: \"light\",\n    tip: false,\n    autofocus: false,\n\n    // CodeMirror specific options for defaults\n    matchBrackets: true,\n    indentUnit: 4,\n    lineNumbers: false,\n    cursorBlinkRate: 530\n  };\n\n  textarea?: HTMLTextAreaElement | null;\n  cm!: EditorFromTextArea;\n  defaultOptions: FullEditorConfiguration;\n  keyupEventsSubscriber!: Subscription;\n  completionSubject!: Subject<CodeCompletionEvent>;\n  completionEventsSubscriber!: Subscription;\n  debounceNextCompletionRequest: boolean;\n\n  textareaRef: React.RefObject<HTMLTextAreaElement> = React.createRef<\n    HTMLTextAreaElement\n  >();\n\n  constructor(props: CodeMirrorEditorProps) {\n    super(props);\n    this.hint = this.hint.bind(this);\n    (this.hint as any).async = true;\n    this.tips = this.tips.bind(this);\n    this.deleteTip = this.deleteTip.bind(this);\n    this.debounceNextCompletionRequest = true;\n    this.state = { isFocused: true, tipElement: null };\n\n    this.fullOptions = this.fullOptions.bind(this);\n    this.cleanMode = this.cleanMode.bind(this);\n\n    // Bind our events to codemirror\n    const extraKeys = {\n      \"Cmd-.\": this.tips,\n      \"Cmd-/\": \"toggleComment\",\n      \"Ctrl-.\": this.tips,\n      \"Ctrl-/\": \"toggleComment\",\n      \"Ctrl-Space\": (editor: Editor) => {\n        this.debounceNextCompletionRequest = false;\n        return editor.execCommand(\"autocomplete\");\n      },\n      Down: this.goLineDownOrEmit,\n      \"Shift-Tab\": (editor: Editor) => editor.execCommand(\"indentLess\"),\n      Tab: this.executeTab,\n      Up: this.goLineUpOrEmit\n    };\n\n    const hintOptions = {\n      // In automatic autocomplete mode we don't want override\n      completeSingle: false,\n      extraKeys: {\n        Right: pick\n      },\n      hint: this.hint\n    };\n\n    this.defaultOptions = Object.assign({\n      extraKeys,\n      hintOptions,\n      // This sets the class on the codemirror <div> that gets created to\n      // cm-s-composition\n      theme: \"composition\",\n      lineWrapping: true\n    });\n  }\n\n  fullOptions(defaults: FullEditorConfiguration = {}) {\n    // Only pass to codemirror the options we support\n    return Object.keys(this.props)\n      .filter(isConfigurable)\n      .reduce((obj, key) => {\n        obj[key] = this.props[key];\n        return obj;\n      }, defaults);\n  }\n\n  cleanMode(): string | object {\n    if (!this.props.mode) {\n      return \"text/plain\";\n    }\n    if (typeof this.props.mode === \"string\") {\n      return this.props.mode;\n    }\n    // If the mode comes in as an immutable map, convert it first\n    if (typeof this.props.mode === \"object\" && \"toJS\" in this.props.mode) {\n      return this.props.mode.toJS();\n    }\n    return this.props.mode;\n  }\n\n  componentWillMount(): void {\n    this.componentWillReceiveProps = debounce(\n      this.componentWillReceiveProps,\n      0\n    );\n  }\n\n  componentDidMount(): void {\n    require(\"codemirror/addon/hint/show-hint\");\n    require(\"codemirror/addon/hint/anyword-hint\");\n\n    require(\"codemirror/addon/edit/matchbrackets\");\n    require(\"codemirror/addon/edit/closebrackets\");\n\n    require(\"codemirror/addon/comment/comment\");\n\n    require(\"codemirror/mode/python/python\");\n    require(\"codemirror/mode/ruby/ruby\");\n    require(\"codemirror/mode/javascript/javascript\");\n    require(\"codemirror/mode/css/css\");\n    require(\"codemirror/mode/julia/julia\");\n    require(\"codemirror/mode/r/r\");\n    require(\"codemirror/mode/clike/clike\");\n    require(\"codemirror/mode/shell/shell\");\n    require(\"codemirror/mode/sql/sql\");\n    require(\"codemirror/mode/markdown/markdown\");\n    require(\"codemirror/mode/gfm/gfm\");\n\n    require(\"./mode/ipython\");\n\n    const { completion, editorFocused, focusAbove, focusBelow } = this.props;\n\n    // Set up the initial options with both our defaults and all the ones we\n    // allow to be passed in\n    const options: FullEditorConfiguration = {\n      ...this.fullOptions,\n      ...this.defaultOptions,\n      mode: this.cleanMode()\n    };\n\n    this.cm = CodeMirror.fromTextArea(this.textareaRef.current!, options);\n\n    this.cm.setValue(this.props.value || \"\");\n\n    // On first load, if focused, set codemirror to focus\n    if (editorFocused) {\n      this.cm.focus();\n    }\n\n    this.cm.on(\"topBoundary\", focusAbove!);\n    this.cm.on(\"bottomBoundary\", focusBelow!);\n\n    this.cm.on(\"focus\", this.focusChanged.bind(this, true));\n    this.cm.on(\"blur\", this.focusChanged.bind(this, false));\n    this.cm.on(\"change\", this.codemirrorValueChanged.bind(this));\n\n    const keyupEvents: Observable<EditorKeyEvent> = fromEvent<EditorKeyEvent>(\n      this.cm as any,\n      \"keyup\",\n      (editor, ev) => ({ editor, ev })\n    );\n\n    // Initiate code completion in response to some keystrokes *other than*\n    //  \"Ctrl-Space\" (which is bound in extraKeys, above)\n    this.keyupEventsSubscriber = keyupEvents\n      .pipe(switchMap<EditorKeyEvent, EditorKeyEvent>(i => of(i)))\n      .subscribe(({ editor, ev }) => {\n        if (\n          completion &&\n          !editor.state.completionActive &&\n          !excludedIntelliSenseTriggerKeys[(ev.keyCode || ev.which).toString()]\n        ) {\n          const cursor: Position = editor.getDoc().getCursor();\n          const token: Token = editor.getTokenAt(cursor);\n          if (\n            token.type === \"tag\" ||\n            token.type === \"variable\" ||\n            token.string === \" \" ||\n            token.string === \"<\" ||\n            token.string === \"/\" ||\n            token.string === \".\"\n          ) {\n            editor.execCommand(\"autocomplete\");\n          }\n        }\n      });\n\n    this.completionSubject = new Subject<CodeCompletionEvent>();\n\n    // tslint:disable no-shadowed-variable\n    const [debounce, immediate] = partition<CodeCompletionEvent>(\n      ev => ev.debounce === true\n    )(this.completionSubject);\n\n    const mergedCompletionEvents: Observable<CodeCompletionEvent> = merge(\n      immediate,\n      debounce.pipe(\n        debounceTime(150),\n        // Upon receipt of an immediate event, cancel anything queued up from\n        // debounce. This handles \"type chars quickly, then quickly hit\n        // Ctrl+Space\", ensuring that it generates just one event rather than\n        // two.\n        takeUntil(immediate),\n        repeat() // Resubscribe to wait for next debounced event.\n      )\n    );\n\n    const completionResults: Observable<\n      () => void\n    > = mergedCompletionEvents.pipe(\n      switchMap(ev => {\n        const { channels } = this.props;\n        if (!channels) {\n          throw new Error(\n            \"Unexpectedly received a completion event when channels were unset\"\n          );\n        }\n        return codeComplete(channels, ev.editor).pipe(\n          map(completionResult => () => ev.callback(completionResult)),\n          // Complete immediately upon next event, even if it's a debounced one\n          // https://blog.strongbrew.io/building-a-safe-autocomplete-operator-with-rxjs/\n          takeUntil(this.completionSubject),\n          catchError((error: Error) => {\n            console.log(`Code completion error: ${error.message}`);\n            return empty();\n          })\n        );\n      })\n    );\n\n    this.completionEventsSubscriber = completionResults.subscribe(callback =>\n      callback()\n    );\n  }\n\n  componentDidUpdate(prevProps: CodeMirrorEditorProps): void {\n    if (!this.cm) {\n      return;\n    }\n\n    const { editorFocused, theme } = this.props;\n\n    if (prevProps.theme !== theme) {\n      this.cm.refresh();\n    }\n\n    if (prevProps.editorFocused !== editorFocused) {\n      editorFocused ? this.cm.focus() : this.cm.getInputField().blur();\n    }\n\n    if (prevProps.cursorBlinkRate !== this.props.cursorBlinkRate) {\n      this.cm.setOption(\"cursorBlinkRate\", this.props.cursorBlinkRate);\n      if (editorFocused) {\n        // code mirror doesn't change the blink rate immediately, we have to\n        // move the cursor, or unfocus and refocus the editor to get the blink\n        // rate to update - so here we do that (unfocus and refocus)\n        this.cm.getInputField().blur();\n        this.cm.focus();\n      }\n    }\n\n    if (prevProps.mode !== this.props.mode) {\n      this.cm.setOption(\"mode\", this.cleanMode());\n    }\n  }\n\n  componentWillReceiveProps(nextProps: CodeMirrorEditorProps): void {\n    if (\n      this.cm &&\n      nextProps.value !== undefined &&\n      normalizeLineEndings(this.cm.getValue()) !==\n        normalizeLineEndings(nextProps.value)\n    ) {\n      if (this.props.preserveScrollPosition) {\n        const prevScrollPosition = this.cm.getScrollInfo();\n        this.cm.setValue(nextProps.value);\n        this.cm.scrollTo(prevScrollPosition.left, prevScrollPosition.top);\n      } else {\n        this.cm.setValue(nextProps.value);\n      }\n    }\n\n    for (const optionName in nextProps) {\n      if (!isConfigurable(optionName)) {\n        continue;\n      }\n      if (nextProps[optionName] !== this.props[optionName]) {\n        this.cm.setOption(optionName, nextProps[optionName]);\n      }\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.cm) {\n      this.cm.toTextArea();\n    }\n    this.keyupEventsSubscriber.unsubscribe();\n    this.completionEventsSubscriber.unsubscribe();\n  }\n\n  focusChanged(focused: boolean): void {\n    this.setState({\n      isFocused: focused\n    });\n    if (this.props.onFocusChange) {\n      this.props.onFocusChange(focused);\n    }\n  }\n\n  hint(editor: Editor & Doc, callback: () => {}): void {\n    const { completion, channels } = this.props;\n    const debounceThisCompletionRequest: boolean = this\n      .debounceNextCompletionRequest;\n    this.debounceNextCompletionRequest = true;\n    if (completion && channels) {\n      const el: CodeCompletionEvent = {\n        editor,\n        callback,\n        debounce: debounceThisCompletionRequest\n      };\n      this.completionSubject.next(el);\n    }\n  }\n\n  deleteTip(): void {\n    this.setState({ tipElement: null });\n  }\n\n  tips(editor: Editor & Doc): void {\n    const { tip, channels } = this.props;\n\n    if (tip) {\n      tool(channels!, editor).subscribe((resp: { [dict: string]: any }) => {\n        const bundle = resp.dict;\n\n        if (Object.keys(bundle).length === 0) {\n          return;\n        }\n\n        const node: HTMLElement = document.getElementsByClassName(\n          \"tip-holder\"\n        )[0] as HTMLElement;\n\n        const expanded: { expanded: boolean } = { expanded: true };\n        const tipElement: React.ReactPortal = ReactDOM.createPortal(\n          <Tip className=\"CodeMirror-hint\">\n            <RichMedia data={bundle} metadata={{ expanded }}>\n              <Media.Plain />\n            </RichMedia>\n            <TipButton onClick={this.deleteTip}>{\"\\u2715\"}</TipButton>\n          </Tip>,\n          node\n        );\n\n        this.setState({ tipElement });\n\n        editor.addWidget({ line: editor.getCursor().line, ch: 0 }, node, true);\n\n        const body: HTMLElement = document.body;\n        if (node != null && body != null) {\n          const pos: ClientRect | DOMRect = node.getBoundingClientRect();\n          body.appendChild(node);\n          node.style.top = `${pos.top}px`;\n        }\n      });\n    }\n  }\n\n  goLineDownOrEmit(editor: Editor & Doc): void {\n    const cursor: Position = editor.getCursor();\n    const lastLineNumber: number = editor.lastLine();\n    const lastLine: string = editor.getLine(lastLineNumber);\n    if (\n      cursor.line === lastLineNumber &&\n      cursor.ch === lastLine.length &&\n      !editor.somethingSelected()\n    ) {\n      CodeMirror.signal(editor, \"bottomBoundary\");\n    } else {\n      editor.execCommand(\"goLineDown\");\n    }\n  }\n\n  goLineUpOrEmit(editor: Editor & Doc): void {\n    const cursor: Position = editor.getCursor();\n    if (cursor.line === 0 && cursor.ch === 0 && !editor.somethingSelected()) {\n      CodeMirror.signal(editor, \"topBoundary\");\n    } else {\n      editor.execCommand(\"goLineUp\");\n    }\n  }\n\n  executeTab(editor: Editor & Doc): void {\n    editor.somethingSelected()\n      ? editor.execCommand(\"indentMore\")\n      : editor.execCommand(\"insertSoftTab\");\n  }\n\n  codemirrorValueChanged(doc: Editor, change: EditorChangeLinkedList): void {\n    if (\n      this.props.onChange &&\n      // When the change came from us setting the value, don't trigger another change\n      change.origin !== \"setValue\"\n    ) {\n      this.props.onChange(doc.getValue(), change);\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        {/* Global CodeMirror CSS packaged up by styled-components */}\n\n        <div className=\"tip-holder\" />\n        <InitialTextArea\n          ref={this.textareaRef}\n          defaultValue={this.props.value}\n        />\n        {/* CodeMirror will inject a div right below the TextArea above */}\n        {this.state.tipElement}\n      </React.Fragment>\n    );\n  }\n}\n","import * as actions from \"@nteract/actions\";\nimport EditorView, { CodeMirrorEditorProps } from \"@nteract/editor\";\nimport * as selectors from \"@nteract/selectors\";\nimport { AppState, ContentRef } from \"@nteract/types\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\ninterface InitialProps {\n  id: string;\n  contentRef: ContentRef;\n  focusAbove: () => void;\n  focusBelow: () => void;\n}\n\nconst markdownMode = {\n  name: \"gfm\",\n  tokenTypeOverrides: {\n    emoji: \"emoji\"\n  }\n};\n\nconst rawMode = {\n  name: \"text/plain\",\n  tokenTypeOverrides: {\n    emoji: \"emoji\"\n  }\n};\n\nconst makeMapStateToProps = (\n  initialState: AppState,\n  initialProps: InitialProps\n) => {\n  const { id, contentRef, focusAbove, focusBelow } = initialProps;\n  function mapStateToProps(state: AppState) {\n    const model = selectors.model(state, { contentRef });\n    if (!model || model.type !== \"notebook\") {\n      throw new Error(\n        \"Connected Editor components should not be used with non-notebook models\"\n      );\n    }\n    const cell = selectors.notebook.cellById(model, { id });\n    if (!cell) {\n      throw new Error(\"cell not found inside cell map\");\n    }\n\n    // Is our cell focused\n    // This only gets used by dispatch\n    const cellFocused = model.cellFocused === id;\n    // Is our editor focused\n    const editorFocused = model.editorFocused === id;\n\n    const theme = selectors.userTheme(state);\n    let channels = null;\n    let kernelStatus = \"not connected\";\n\n    // Bring all changes to the options based on cell type\n    let codeMirrorMode = rawMode;\n\n    let lineWrapping = false;\n\n    switch (cell.cell_type) {\n      case \"markdown\":\n        lineWrapping = true;\n        codeMirrorMode = markdownMode;\n        break;\n      case \"raw\":\n        lineWrapping = true;\n        codeMirrorMode = rawMode;\n        break;\n      case \"code\": {\n        const kernelRef = model.kernelRef;\n        const kernel = kernelRef\n          ? state.core.entities.kernels.byRef.get(kernelRef)\n          : null;\n\n        channels = kernel ? kernel.channels : null;\n\n        if (kernel) {\n          kernelStatus = kernel.status || \"not connected\";\n        }\n\n        // otherwise assume we can use what's in the document\n        codeMirrorMode =\n          kernel && kernel.info\n            ? kernel.info.codemirrorMode\n            : selectors.notebook.codeMirrorMode(model);\n      }\n    }\n\n    return {\n      tip: true,\n      completion: true,\n      editorFocused,\n      focusAbove,\n      focusBelow,\n      theme,\n      value: cell.source,\n      channels,\n      kernelStatus,\n      cursorBlinkRate: state.config.get(\"cursorBlinkRate\", 530),\n      mode: codeMirrorMode,\n      lineWrapping\n    };\n  }\n  return mapStateToProps;\n};\n\nconst makeMapDispatchToProps = (\n  initialDispatch: Dispatch,\n  initialProps: InitialProps\n) => {\n  const { id, contentRef } = initialProps;\n  const mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n      onChange: (text: string) => {\n        dispatch(actions.updateCellSource({ id, value: text, contentRef }));\n      },\n\n      onFocusChange(focused: boolean): void {\n        if (focused) {\n          dispatch(actions.focusCellEditor({ id, contentRef }));\n          // Assume we can focus the cell if now focusing the editor\n          // If this doesn't work, we need to go back to checking !cellFocused\n          dispatch(actions.focusCell({ id, contentRef }));\n        }\n      }\n    };\n  };\n  return mapDispatchToProps;\n};\n\nexport default connect(\n  makeMapStateToProps,\n  makeMapDispatchToProps\n)(EditorView);\n","/* eslint jsx-a11y/no-static-element-interactions: 0 */\n/* eslint jsx-a11y/click-events-have-key-events: 0 */\n\n// react-hot-loader uses proxies to the original elements so we need to use\n// their comparison function in case a consumer of these components is\n// using hot module reloading\nimport * as React from \"react\";\nimport { areComponentsEqual } from \"react-hot-loader\";\nimport styled from \"styled-components\";\n\ninterface DropdownMenuProps {\n  children: React.ReactNode;\n}\n\ninterface DropdownMenuState {\n  menuHidden: boolean;\n}\n\nconst DropdownDiv = styled.div`\n  z-index: 10000;\n  display: inline-block;\n`;\n\nDropdownDiv.displayName = \"DropdownDiv\";\n\nexport class DropdownMenu extends React.PureComponent<\n  DropdownMenuProps,\n  DropdownMenuState\n> {\n  constructor(props: DropdownMenuProps) {\n    super(props);\n    this.state = {\n      menuHidden: true\n    };\n  }\n\n  render() {\n    return (\n      <DropdownDiv>\n        {React.Children.map(this.props.children, child => {\n          const childElement = child as React.ReactElement<any>;\n          if (\n            areComponentsEqual(\n              childElement.type as React.ComponentType<any>,\n              DropdownTrigger\n            )\n          ) {\n            return React.cloneElement(childElement, {\n              onClick: () => {\n                this.setState({ menuHidden: !this.state.menuHidden });\n              }\n            });\n          } else if (\n            areComponentsEqual(\n              childElement.type as React.ComponentType<any>,\n              DropdownContent\n            )\n          ) {\n            if (this.state.menuHidden) {\n              return null;\n            } else {\n              // DropdownContent child will pass down an onItemClick so that\n              // the menu will collapse\n              return React.cloneElement(childElement, {\n                onItemClick: () => {\n                  this.setState({ menuHidden: true });\n                }\n              });\n            }\n          } else {\n            // fallback\n            return child;\n          }\n        })}\n      </DropdownDiv>\n    );\n  }\n}\n\nconst DropdownTriggerDiv = styled.div`\n  user-select: none;\n  margin: 0px;\n  padding: 0px;\n`;\n\nDropdownTriggerDiv.displayName = \"DropdownTriggerDiv\";\n\n// tslint:disable max-classes-per-file\nexport class DropdownTrigger extends React.PureComponent<{\n  children: React.ReactNode;\n  onClick?: (ev: React.MouseEvent<HTMLElement>) => void;\n}> {\n  render() {\n    return (\n      <DropdownTriggerDiv onClick={this.props.onClick}>\n        {this.props.children}\n      </DropdownTriggerDiv>\n    );\n  }\n}\n\nconst DropdownContentDiv = styled.div`\n  user-select: none;\n  margin: 0px;\n  padding: 0px;\n\n  width: 200px;\n\n  opacity: 1;\n  position: absolute;\n  top: 0.2em;\n  right: 0;\n  border-style: none;\n  padding: 0;\n  font-family: var(--nt-font-family-normal);\n  font-size: var(--nt-font-size-m);\n  line-height: 1.5;\n  margin: 20px 0;\n  background-color: var(--theme-cell-menu-bg);\n\n  ul {\n    list-style: none;\n    text-align: left;\n    padding: 0;\n    margin: 0;\n    opacity: 1;\n  }\n\n  ul li {\n    padding: 0.5rem;\n  }\n\n  ul li:hover {\n    background-color: var(--theme-cell-menu-bg-hover, #e2dfe3);\n    cursor: pointer;\n  }\n`;\n\nDropdownContentDiv.displayName = \"DropdownContentDiv\";\n\nexport class DropdownContent extends React.PureComponent<{\n  children: React.ReactNode;\n  onItemClick: (ev: React.MouseEvent<HTMLElement>) => void;\n}> {\n  static defaultProps = {\n    // Completely silly standalone, because DropdownMenu injects the onItemClick handler\n    onItemClick: () => {}\n  };\n\n  render() {\n    return (\n      <DropdownContentDiv>\n        <ul>\n          {React.Children.map(this.props.children, child => {\n            const childElement = child as React.ReactElement<any>;\n            return React.cloneElement(childElement, {\n              onClick: (ev: React.MouseEvent<HTMLElement>) => {\n                childElement.props.onClick(ev);\n                // Hide the menu\n                this.props.onItemClick(ev);\n              }\n            });\n          })}\n        </ul>\n      </DropdownContentDiv>\n    );\n  }\n}\n","/* eslint jsx-a11y/no-static-element-interactions: 0 */\n/* eslint jsx-a11y/click-events-have-key-events: 0 */\n/* eslint jsx-a11y/anchor-is-valid: 0 */\n\n// TODO: Fix up a11y eslint here\n// TODO: All the `<li>` below that have role button should just be `<button>` with proper styling\n\nimport {\n  DropdownContent,\n  DropdownMenu,\n  DropdownTrigger\n} from \"@nteract/dropdown-menu\";\nimport {\n  ChevronDownOcticon,\n  TrashOcticon,\n  TriangleRightOcticon\n} from \"@nteract/octicons\";\nimport { ContentRef } from \"@nteract/types\";\nimport * as React from \"react\";\n\nimport styled, { StyledComponent } from \"styled-components\";\n\nimport { CellType } from \"@nteract/commutable\";\n\nexport interface PureToolbarProps {\n  type: CellType;\n  executeCell: () => void;\n  deleteCell: () => void;\n  clearOutputs: () => void;\n  toggleParameterCell: () => void;\n  toggleCellInputVisibility: () => void;\n  toggleCellOutputVisibility: () => void;\n  toggleOutputExpansion: () => void;\n  changeCellType: () => void;\n  cellFocused: boolean;\n  sourceHidden: boolean;\n}\n\nexport const CellToolbar = styled.div`\n  background-color: var(--theme-cell-toolbar-bg);\n  opacity: 0.4;\n  transition: opacity 0.4s;\n\n  & > div {\n    display: inline-block;\n  }\n\n  :hover {\n    opacity: 1;\n  }\n\n  @media print {\n    display: none ;\n  }\n\n  button {\n    display: inline-block;\n\n    width: 22px;\n    height: 20px;\n    padding: 0px 4px;\n\n    text-align: center;\n\n    border: none;\n    outline: none;\n    background: none;\n  }\n\n  span {\n    font-size: 15px;\n    line-height: 1;\n    color: var(--theme-cell-toolbar-fg);\n  }\n\n  button span:hover {\n    color: var(--theme-cell-toolbar-fg-hover);\n  }\n\n  .octicon {\n    transition: color 0.5s;\n  }\n\n  span.spacer {\n    display: inline-block;\n    vertical-align: middle;\n    margin: 1px 5px 3px 5px;\n    height: 11px;\n  }\n`;\n\ninterface CellToolbarMaskProps {\n  sourceHidden: boolean;\n  cellFocused: boolean;\n}\n\nexport const CellToolbarMask = styled.div.attrs<CellToolbarMaskProps>(\n  props => ({\n    style: {\n      display: props.cellFocused\n        ? \"block\"\n        : props.sourceHidden\n        ? \"block\"\n        : \"none\"\n    }\n  })\n)`\n  z-index: 9999;\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  height: 34px;\n\n  /* Set the left padding to 50px to give users extra room to move their\n              mouse to the toolbar without causing the cell to go out of focus and thus\n              hide the toolbar before they get there. */\n  padding: 0px 0px 0px 50px;\n` as StyledComponent<\"div\", any, CellToolbarMaskProps, never>;\n\nexport class PureToolbar extends React.PureComponent<PureToolbarProps> {\n  static defaultProps: Partial<PureToolbarProps> = {\n    type: \"code\"\n  };\n\n  render() {\n    const { executeCell, deleteCell, sourceHidden } = this.props;\n\n    return (\n      <CellToolbarMask\n        sourceHidden={sourceHidden}\n        cellFocused={this.props.cellFocused}\n      >\n        <CellToolbar>\n          {this.props.type !== \"markdown\" && (\n            <button\n              onClick={executeCell}\n              title=\"execute cell\"\n              className=\"executeButton\"\n            >\n              <span className=\"octicon\">\n                <TriangleRightOcticon />\n              </span>\n            </button>\n          )}\n          <DropdownMenu>\n            <DropdownTrigger>\n              <button title=\"show additional actions\">\n                <span className=\"octicon toggle-menu\">\n                  <ChevronDownOcticon />\n                </span>\n              </button>\n            </DropdownTrigger>\n            {this.props.type === \"code\" ? (\n              <DropdownContent>\n                <li\n                  onClick={this.props.clearOutputs}\n                  className=\"clearOutput\"\n                  role=\"option\"\n                  aria-selected=\"false\"\n                  tabIndex={0}\n                >\n                  <a>Clear Cell Output</a>\n                </li>\n                <li\n                  onClick={this.props.toggleCellInputVisibility}\n                  className=\"inputVisibility\"\n                  role=\"option\"\n                  aria-selected=\"false\"\n                  tabIndex={0}\n                >\n                  <a>Toggle Input Visibility</a>\n                </li>\n                <li\n                  onClick={this.props.toggleCellOutputVisibility}\n                  className=\"outputVisibility\"\n                  role=\"option\"\n                  aria-selected=\"false\"\n                  tabIndex={0}\n                >\n                  <a>Toggle Output Visibility</a>\n                </li>\n                <li\n                  onClick={this.props.toggleOutputExpansion}\n                  className=\"outputExpanded\"\n                  role=\"option\"\n                  aria-selected=\"false\"\n                  tabIndex={0}\n                >\n                  <a>Toggle Expanded Output</a>\n                </li>\n                <li\n                  onClick={this.props.toggleParameterCell}\n                  role=\"option\"\n                  aria-selected=\"false\"\n                  tabIndex={0}\n                >\n                  <a>Toggle Parameter Cell</a>\n                </li>\n\n                <li\n                  onClick={this.props.changeCellType}\n                  className=\"changeType\"\n                  role=\"option\"\n                  aria-selected=\"false\"\n                  tabIndex={0}\n                >\n                  <a>Convert to Markdown Cell</a>\n                </li>\n              </DropdownContent>\n            ) : (\n              <DropdownContent>\n                <li\n                  onClick={this.props.changeCellType}\n                  className=\"changeType\"\n                  role=\"option\"\n                  aria-selected=\"false\"\n                  tabIndex={0}\n                >\n                  <a>Convert to Code Cell</a>\n                </li>\n              </DropdownContent>\n            )}\n          </DropdownMenu>\n          <span className=\"spacer\" />\n          <button\n            onClick={deleteCell}\n            title=\"delete cell\"\n            className=\"deleteButton\"\n          >\n            <span className=\"octicon\">\n              <TrashOcticon />\n            </span>\n          </button>\n        </CellToolbar>\n      </CellToolbarMask>\n    );\n  }\n}\n\nexport default PureToolbar;\n","import NotebookApp from \"./notebook-app\";\n\nexport default NotebookApp;\n","import * as React from \"react\";\n\nimport styled from \"styled-components\";\n\ninterface PromptProps {\n  /**\n   * Typically used to show what execution count the user is on. When working at\n   * the `IPython` or `jupyter console` for example, it's the number between the\n   * `[ ]`:\n   *\n   * ```\n   * In [1]: 2 + 2\n   * Out[1]: 4\n   *\n   * In [2]: \"woohoo\"\n   * Out[2]: 'woohoo'\n   * ```\n   *\n   */\n  counter?: number | null;\n  /**\n   * Show that execution is currently happening related to this prompt\n   */\n  running?: boolean;\n  /**\n   * Show that execution is queued up\n   */\n  queued?: boolean;\n  /**\n   * Create a prompt without the `[]`. Used with markdown cells.\n   */\n  blank?: boolean;\n\n  className?: string;\n}\n\n/**\n * Generate what text goes inside the prompt based on the props to the prompt\n */\nfunction promptText(props: PromptProps): string {\n  if (props.running) {\n    return \"[*]\";\n  }\n  if (props.queued) {\n    return \"[…]\";\n  }\n  if (typeof props.counter === \"number\") {\n    return `[${props.counter}]`;\n  }\n  if (props.blank) {\n    return \"\";\n  }\n  return \"[ ]\";\n}\n\nconst BarePrompt = (props: PromptProps) => {\n  return <div className={props.className}>{promptText(props)}</div>;\n};\n\nexport const Prompt = styled(BarePrompt)`\n  font-family: monospace;\n  font-size: 12px;\n  line-height: 22px;\n  /* For creating a buffer area for <Prompt blank /> */\n  min-height: 22px;\n\n  width: var(--prompt-width, 50px);\n  padding: 9px 0;\n\n  text-align: center;\n\n  color: var(--theme-cell-prompt-fg, black);\n  background-color: var(--theme-cell-prompt-bg, #fafafa);\n`;\n\nPrompt.defaultProps = {\n  counter: null,\n  running: false,\n  queued: false,\n  blank: false\n};\n\nPrompt.displayName = \"Prompt\";\n\nexport const PromptBuffer = styled(Prompt)``;\nPromptBuffer.defaultProps = {\n  blank: true\n};\n\nexport default Prompt;\n","import * as React from \"react\";\n\nimport styled, { StyledComponent } from \"styled-components\";\n\nimport { Prompt } from \"./prompt\";\n\ninterface CellProps {\n  /**\n   * Indicates if a cell is selected\n   */\n  isSelected?: boolean;\n  /**\n   * Indicates if hovering over a cell\n   */\n  _hovered?: boolean;\n  /**\n   * Style children when a cell is selected or hovered over\n   */\n  children?: React.ReactNode;\n}\n\nconst shadowLevels = {\n  FLAT: \"none\",\n  HOVERED: `var(\n    --theme-cell-shadow-hover,\n    1px 1px 3px rgba(0, 0, 0, 0.12),\n    -1px -1px 3px rgba(0, 0, 0, 0.12)\n  )`,\n  SELECTED: `var(\n    --theme-cell-shadow-focus,\n    3px 3px 9px rgba(0, 0, 0, 0.12),\n    -3px -3px 9px rgba(0, 0, 0, 0.12)\n  )`\n};\n\nfunction cellShadowLevel(props: CellProps): string {\n  if (props.isSelected) {\n    return shadowLevels.SELECTED;\n  }\n  if (props._hovered) {\n    return shadowLevels.HOVERED;\n  }\n\n  return shadowLevels.FLAT;\n}\n\nexport const Cell = styled.div.attrs<CellProps>(props => ({\n  className: props.isSelected ? \"selected\" : \"\",\n  style: {\n    boxShadow: cellShadowLevel(props)\n  }\n}))`\n  & {\n    position: relative;\n    background: var(--theme-cell-bg, white);\n    transition: all 0.1s ease-in-out;\n  }\n\n  /* The box shadow for hovered should only apply when not already selected */\n  &:hover:not(.selected) {\n    box-shadow: ${shadowLevels.HOVERED};\n  }\n\n  /*\n  Our cells conditionally style the prompt contained within based on if the cell is\n  selected or hovered. To do this with styled-components we use their method of\n  referring to other components:\n\n  https://www.styled-components.com/docs/advanced#referring-to-other-components\n\n  */\n  & ${Prompt} {\n    /* We change nothing when the cell is not selected, focused, or hovered */\n  }\n  &.selected ${Prompt} {\n    background-color: var(--theme-cell-prompt-bg-focus, hsl(0, 0%, 90%));\n    color: var(--theme-cell-prompt-fg-focus, hsl(0, 0%, 51%));\n  }\n\n  &:hover:not(.selected) ${Prompt}, &:active:not(.selected) ${Prompt} {\n    background-color: var(--theme-cell-prompt-bg-hover, hsl(0, 0%, 94%));\n    color: var(--theme-cell-prompt-fg-hover, hsl(0, 0%, 15%));\n  }\n\n  &:focus ${Prompt} {\n    background-color: var(--theme-cell-prompt-bg-focus, hsl(0, 0%, 90%));\n    color: var(--theme-cell-prompt-fg-focus, hsl(0, 0%, 51%));\n  }\n  @media print{\n    /* make sure all cells look the same in print regarless of focus */\n    & ${Prompt}, &.selected ${Prompt}, &:focus ${Prompt}, &:hover:not(.selected) ${Prompt} {\n      background-color: var(--theme-cell-prompt-bg, white);\n      color: var(--theme-cell-prompt-fg, black);\n    }\n  }\n` as StyledComponent<\"div\", any, CellProps, never>;\n\nCell.displayName = \"Cell\";\n\nCell.defaultProps = {\n  isSelected: false,\n  _hovered: false,\n  children: null\n};\n\nexport default Cell;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Cells = styled.div`\n  & > * {\n    margin: 20px 0;\n  }\n\n  & {\n    font-family: \"Source Sans Pro\", Helvetica Neue, Helvetica, sans-serif;\n    font-size: 16px;\n    background-color: var(--theme-app-bg);\n    color: var(--theme-app-fg);\n\n    padding-bottom: 10px;\n  }\n`;\n\nCells.displayName = \"Cells\";\n\nexport default Cells;\n","import * as React from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter/prism\";\nimport {\n  vs as lightTheme,\n  xonokai as darkTheme\n} from \"react-syntax-highlighter/styles/prism\";\n\n// import syntax from \"./theme\";\n\ninterface HighlighterProps {\n  language: string;\n  className: string;\n  children?: React.ReactNode;\n  theme?: \"light\" | \"dark\";\n}\n\nconst Highlighter = (props: HighlighterProps) => {\n  let language = props.language;\n  if (language === \"ipython\") {\n    language = \"python\";\n  } else if (language === \"text/x-scala\") {\n    // Adjust for the scala codemirror type\n    language = \"scala\";\n  } else if (language.startsWith(\"text/x-\")) {\n    // Strip off the language from the mimetype\n    language = language.slice(\"text/x-\".length);\n  }\n  return (\n    <SyntaxHighlighter\n      style={props.theme === \"light\" ? lightTheme : darkTheme}\n      language={language}\n      className={props.className}\n      customStyle={{\n        padding: \"10px 0px 10px 10px\",\n        margin: \"0px\",\n        backgroundColor: \"var(--cm-background, #fafafa)\",\n        border: \"none\"\n      }}\n    >\n      {props.children}\n    </SyntaxHighlighter>\n  );\n};\n\nHighlighter.defaultProps = {\n  theme: \"light\",\n  language: \"text\",\n  children: \"\",\n  className: \"input\"\n};\n\nexport default Highlighter;\n","import * as React from \"react\";\n\nimport styled from \"styled-components\";\nimport Highlighter from \"../syntax-highlighter\";\n\nexport interface SourceProps {\n  language?: string;\n  children?: React.ReactNode;\n  className?: string;\n  theme?: \"light\" | \"dark\";\n}\n\nclass BareSource extends React.Component<SourceProps> {\n  static defaultProps = {\n    children: \"\",\n    language: \"text\",\n    className: \"input\",\n    theme: \"light\"\n  };\n\n  render() {\n    // Build in a default renderer when they pass a plain string\n    // This is primarily for use with non-editable contexts (notebook-preview)\n    // to make rendering much faster (compared to codemirror)\n    // Ref: https://github.com/nteract/notebook-preview/issues/20\n    if (typeof this.props.children === \"string\") {\n      return (\n        <Highlighter\n          // NOTE: To get around styled-components & defaultProps not lining up,\n          // this defaults to \"text\" for us https://github.com/DefinitelyTyped/DefinitelyTyped/issues/29540\n          language={this.props.language || \"text\"}\n          className={this.props.className || \"input\"}\n        >\n          {this.props.children}\n        </Highlighter>\n      );\n    }\n    // Otherwise assume they have their own editor component\n    return <div className={this.props.className}>{this.props.children}</div>;\n  }\n}\n\nexport const Source = styled(BareSource)<SourceProps>``;\n\nSource.defaultProps = {\n  children: \"\",\n  language: \"text\",\n  className: \"input\",\n  theme: \"light\"\n};\n\nSource.displayName = \"Source\";\n\nexport default Source;\n","import * as React from \"react\";\n\nimport styled from \"styled-components\";\nimport { Prompt } from \"./prompt\";\nimport { Source } from \"./source\";\n\ninterface InputProps {\n  children: React.ReactNode;\n  /**\n   * Whether or not to render the children.\n   */\n  hidden?: boolean;\n  className?: string;\n}\n\nclass BareInput extends React.Component<InputProps> {\n  static defaultProps = {\n    children: null,\n    hidden: false\n  };\n\n  render() {\n    if (this.props.hidden) {\n      return null;\n    }\n\n    return <div className={this.props.className}>{this.props.children}</div>;\n  }\n}\n\nexport const Input = styled(BareInput)`\n  & {\n    display: flex;\n    flex-direction: row;\n  }\n\n  &.invisible {\n    height: 34px;\n  }\n\n  & ${Prompt} {\n    flex: 0 0 auto;\n  }\n\n  & ${Source} {\n    flex: 1 1 auto;\n    overflow: auto;\n    background-color: var(--theme-cell-input-bg, #fafafa);\n  }\n`;\n\nInput.displayName = \"Input\";\n\nexport default Input;\n","import * as React from \"react\";\n\nimport styled, { StyledComponent } from \"styled-components\";\n\ninterface OutputsProps {\n  className?: string;\n  children?: React.ReactNode;\n  /**\n   * Whether or not to collapse the children of the component.\n   */\n  expanded?: boolean;\n  /**\n   * Whether or not to show the children of the component.\n   */\n  hidden?: boolean;\n}\n\ninterface OutputWrapperProps {\n  expanded?: boolean;\n}\n\nconst OutputWrapper = styled.div.attrs<OutputWrapperProps>(props => ({\n  style: {\n    maxHeight: props.expanded ? \"100%\" : null\n  }\n}))`\n  padding: 10px 10px 10px calc(var(--prompt-width, 50px) + 10px);\n  word-wrap: break-word;\n  overflow-y: hidden;\n  outline: none;\n  /* When expanded, this is overtaken to 100% */\n  text-overflow: ellipsis;\n\n  &:empty {\n    display: none;\n  }\n\n  /* NOTE: All these styles should get moved into some sort of\n           \"Default Output Style\" that an output type can opt in to,\n           like with HTML, Markdown, VDOM\n           */\n  & a {\n    color: var(--link-color-unvisited, blue);\n  }\n\n  & a:visited {\n    color: var(--link-color-visited, blue);\n  }\n\n  & code {\n    font-family: \"Source Code Pro\";\n    white-space: pre-wrap;\n    font-size: 14px;\n  }\n\n  & pre {\n    white-space: pre-wrap;\n    font-size: 14px;\n    word-wrap: break-word;\n  }\n\n  & img {\n    display: block;\n    max-width: 100%;\n  }\n\n  & kbd {\n    display: inline-block;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    padding: 0.1em 0.5em;\n    margin: 0 0.2em;\n    box-shadow: 0 1px 0px rgba(0, 0, 0, 0.2), 0 0 0 2px #fff inset;\n    background-color: #f7f7f7;\n  }\n\n  & table {\n    border-collapse: collapse;\n  }\n\n  & th,\n  & td,\n  /* for legacy output handling */\n  & .th,\n  & .td {\n    padding: 0.5em 1em;\n    border: 1px solid var(--theme-app-border, #cbcbcb);\n  }\n\n  & th {\n    text-align: left;\n  }\n\n  & blockquote {\n    padding: 0.75em 0.5em 0.75em 1em;\n    background: var(--theme-cell-output-bg, white);\n    border-left: 0.5em solid #ddd;\n  }\n\n  & blockquote::before {\n    display: block;\n    height: 0;\n    content: \"“\";\n    margin-left: -0.95em;\n    font: italic 400%/1 Open Serif, Georgia, \"Times New Roman\", serif;\n    color: solid var(--theme-app-border, #cbcbcb);\n  }\n\n  /* for nested paragraphs in block quotes */\n  & blockquote p {\n    display: inline;\n  }\n\n  & dd {\n    display: block;\n    -webkit-margin-start: 40px;\n  }\n  & dl {\n    display: block;\n    -webkit-margin-before: 1__qem;\n    -webkit-margin-after: 1em;\n    -webkit-margin-start: 0;\n    -webkit-margin-end: 0;\n  }\n\n  & dt {\n    display: block;\n  }\n\n  & dl {\n    width: 100%;\n    overflow: hidden;\n    padding: 0;\n    margin: 0;\n  }\n\n  & dt {\n    font-weight: bold;\n    float: left;\n    width: 20%;\n    /* adjust the width; make sure the total of both is 100% */\n    padding: 0;\n    margin: 0;\n  }\n\n  & dd {\n    float: left;\n    width: 80%;\n    /* adjust the width; make sure the total of both is 100% */\n    padding: 0;\n    margin: 0;\n  }\n\n  /** Adaptation for the R kernel's inline lists **/\n  & .list-inline li {\n    display: inline;\n    padding-right: 20px;\n    text-align: center;\n  }\n` as StyledComponent<\"div\", any, OutputWrapperProps, never>;\n\nexport class Outputs extends React.PureComponent<OutputsProps> {\n  static defaultProps = {\n    children: null,\n    className: \"nteract-outputs\",\n    hidden: false,\n    expanded: false\n  };\n\n  render() {\n    if (this.props.hidden) {\n      return null;\n    }\n\n    if (this.props.children) {\n      return (\n        <OutputWrapper\n          expanded={this.props.expanded}\n          className={this.props.className}\n        >\n          {this.props.children}\n        </OutputWrapper>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default Outputs;\n","import * as React from \"react\";\n\nimport styled from \"styled-components\";\nimport { Outputs } from \"./outputs\";\n/**\n * Description\n */\n\ninterface PagersProps {\n  children?: React.ReactNode;\n  hidden?: boolean;\n}\n\nexport const Pagers = styled(Outputs)`\n  background-color: var(--theme-pager-bg, #fafafa);\n`;\n\nPagers.displayName = \"Pagers\";\n\nexport default Pagers;\n","import { createGlobalStyle } from \"styled-components\";\n\n// All the CSS variables used in nteract apps\nconst GlobalCSSVariables = createGlobalStyle`\n:root {\n  --nt-color-alabaster-darkest: var(--nt-color-alabaster-darker);\n  --nt-color-alabaster-darker: var(--nt-color-alabaster-dark);\n  --nt-color-alabaster-dark: var(--nt-color-alabaster);\n  --nt-color-alabaster: hsl(0, 0%, 97%);\n  --nt-color-alabaster-light: var(--nt-color-alabaster);\n  --nt-color-alabaster-lighter: var(--nt-color-alabaster-light);\n  --nt-color-alabaster-lightest: var(--nt-color-alabaster-lighter);\n  --nt-color-asparagus-darkest: var(--nt-color-asparagus-darker);\n  --nt-color-asparagus-darker: var(--nt-color-asparagus-dark);\n  --nt-color-asparagus-dark: hsl(91, 28%, 37%);\n  --nt-color-asparagus: hsl(91, 28%, 55%);\n  --nt-color-asparagus-light: hsl(91, 28%, 73%);\n  --nt-color-asparagus-lighter: hsl(91, 28%, 88%);\n  --nt-color-asparagus-lightest: hsl(91, 28%, 98%);\n  --nt-color-danube-darkest: var(--nt-color-danube-darker);\n  --nt-color-danube-darker: var(--nt-color-danube-dark);\n  --nt-color-danube-dark: hsl(208, 54%, 35%);\n  --nt-color-danube: hsl(208, 54%, 53%);\n  --nt-color-danube-light: hsl(208, 54%, 71%);\n  --nt-color-danube-lighter: hsl(208, 54%, 86%);\n  --nt-color-danube-lightest: hsl(208, 54%, 98%);\n  --nt-color-gold-darkest: var(--nt-color-gold-darker);\n  --nt-color-gold-darker: var(--nt-color-gold-dark);\n  --nt-color-gold-dark: hsl(41, 89%, 35%);\n  --nt-color-gold: hsl(41, 89%, 53%);\n  --nt-color-gold-light: hsl(41, 89%, 71%);\n  --nt-color-gold-lighter: hsl(41, 89%, 86%);\n  --nt-color-gold-lightest: hsl(41, 89%, 98%);\n  --nt-color-nteract-darkest: var(--nt-color-nteract-darker);\n  --nt-color-nteract-darker: var(--nt-color-nteract-dark);\n  --nt-color-nteract-dark: var(--nt-color-nteract);\n  --nt-color-nteract: #8518f2;\n  --nt-color-nteract-light: #af8afa;\n  --nt-color-nteract-lighter: #ccb3ff;\n  --nt-color-nteract-lightest: var(--nt-color-nteract-lighter);\n  --nt-color-red-darkest: var(--nt-color-red-darker);\n  --nt-color-red-darker: var(--nt-color-red-dark);\n  --nt-color-red-dark: hsl(0, 67%, 25%);\n  --nt-color-red: hsl(0, 67%, 43%);\n  --nt-color-red-light: hsl(0, 67%, 61%);\n  --nt-color-red-lighter: hsl(0, 67%, 76%);\n  --nt-color-red-lightest: hsl(0, 67%, 88%);\n  --nt-color-grey-darkest: hsl(0, 0%, 10%);\n  --nt-color-grey-darker: hsl(0, 0%, 17%);\n  --nt-color-grey-dark: hsl(0, 0%, 40%);\n  --nt-color-grey: hsl(0, 0%, 63%);\n  --nt-color-grey-light: hsl(0, 0%, 90%);\n  --nt-color-grey-lighter: hsl(0, 0%, 94%);\n  --nt-color-grey-lightest: hsl(0, 0%, 98%);\n  --nt-color-midnight-darkest: hsl(0, 0%, 0%);\n  --nt-color-midnight-darker: hsl(0, 0%, 5%);\n  --nt-color-midnight-dark: hsl(0, 0%, 10%);\n  --nt-color-midnight: hsl(0, 0%, 15%);\n  --nt-color-midnight-light: hsl(0, 0%, 51%);\n  --nt-color-midnight-lighter: hsl(0, 0%, 75%);\n  --nt-color-midnight-lightest: hsl(0, 0%, 85%);\n  --nt-color-sky-darkest: var(--nt-color-sky-darker);\n  --nt-color-sky-darker: var(--nt-color-sky-dark);\n  --nt-color-sky-dark: hsl(208, 54%, 35%);\n  --nt-color-sky: hsl(208, 54%, 53%);\n  --nt-color-sky-light: hsl(208, 54%, 71%);\n  --nt-color-sky-lighter: hsl(208, 54%, 86%);\n  --nt-color-sky-lightest: hsl(208, 54%, 98%);\n  --nt-color-slate-darkest: var(--nt-color-slate-darker);\n  --nt-color-slate-darker: var(--nt-color-slate-dark);\n  --nt-color-slate-dark: hsl(207, 29%, 14%);\n  --nt-color-slate: hsl(207, 29%, 32%);\n  --nt-color-slate-light: hsl(207, 29%, 50%);\n  --nt-color-slate-lighter: hsl(207, 29%, 65%);\n  --nt-color-slate-lightest: hsl(207, 29%, 77%);\n  --nt-color-clementine-darkest: var(--nt-color-clementine-darker);\n  --nt-color-clementine-darker: var(--nt-color-clementine-dark);\n  --nt-color-clementine-dark: hsl(33, 75%, 34%);\n  --nt-color-clementine: hsl(33, 75%, 52%);\n  --nt-color-clementine-light: hsl(33, 75%, 70%);\n  --nt-color-clementine-lighter: hsl(33, 75%, 85%);\n  --nt-color-clementine-lightest: hsl(33, 75%, 97%);\n  --nt-border-radius-none: 0;\n  --nt-border-radius-s: 1px;\n  --nt-border-radius-m: 2px;\n  --nt-border-radius-l: 4px;\n  --nt-border-width-none: 0;\n  --nt-border-width-xs: 1px;\n  --nt-border-width-s: 2px;\n  --nt-border-width-m: 3px;\n  --nt-border-width-l: 5px;\n  --nt-font-size-none: 0;\n  --nt-font-size-xxs: 10px;\n  --nt-font-size-xs: 10px;\n  --nt-font-size-s: 12px;\n  --nt-font-size-m: 14px;\n  --nt-font-size-l: 20px;\n  --nt-font-size-xl: 25px;\n  --nt-font-size-xxl: 30px;\n  --nt-font-weight-light: 300;\n  --nt-font-weight-normal: 400;\n  --nt-font-weight-bold: 600;\n  --nt-font-weight-bolder: 700;\n  --nt-font-family-normal: 'Source Sans Pro', sans-serif;\n  --nt-font-family-mono: 'Source Code Pro', courier;\n  --nt-opacity-disabled: 0.4;\n  --nt-opacity-faded: 0.3;\n  --nt-spacing-none: 0;\n  --nt-spacing-xxs: 1px;\n  --nt-spacing-xs: 3px;\n  --nt-spacing-s: 5px;\n  --nt-spacing-m: 10px;\n  --nt-spacing-l: 15px;\n  --nt-spacing-xl: 20px;\n  --nt-spacing-xxl: 25px;\n  --nt-transition-duration-normal: 250ms;\n  --nt-z-index-menu: 100;\n  --nt-z-index-notification: 200;\n  --nt-z-index-modal: 300;\n  --nt-color-actionable-darkest: var(--nt-color-danube-darkest);\n  --nt-color-actionable-darker: var(--nt-color-danube-darker);\n  --nt-color-actionable-dark: var(--nt-color-danube-dark);\n  --nt-color-actionable: var(--nt-color-danube);\n  --nt-color-actionable-light: var(--nt-color-danube-light);\n  --nt-color-actionable-lighter: var(--nt-color-danube-lighter);\n  --nt-color-actionable-lightest: var(--nt-color-danube-lightest);\n  --nt-color-brand-darkest: var(--nt-color-nteract-darkest);\n  --nt-color-brand-darker: var(--nt-color-nteract-darker);\n  --nt-color-brand-dark: var(--nt-color-nteract-dark);\n  --nt-color-brand: var(--nt-color-nteract);\n  --nt-color-brand-light: var(--nt-color-nteract-light);\n  --nt-color-brand-lighter: var(--nt-color-nteract-lighter);\n  --nt-color-brand-lightest: var(--nt-color-nteract-lightest);\n  --nt-color-danger-darkest: var(--nt-color-red-darkest);\n  --nt-color-danger-darker: var(--nt-color-red-darker);\n  --nt-color-danger-dark: var(--nt-color-red-dark);\n  --nt-color-danger: var(--nt-color-red);\n  --nt-color-danger-light: var(--nt-color-red-light);\n  --nt-color-danger-lighter: var(--nt-color-red-lighter);\n  --nt-color-danger-lightest: var(--nt-color-red-lightest);\n  --nt-color-info-darkest: var(--nt-color-danube-darkest);\n  --nt-color-info-darker: var(--nt-color-danube-darker);\n  --nt-color-info-dark: var(--nt-color-danube-dark);\n  --nt-color-info: var(--nt-color-danube);\n  --nt-color-info-light: var(--nt-color-danube-light);\n  --nt-color-info-lighter: var(--nt-color-danube-lighter);\n  --nt-color-info-lightest: var(--nt-color-danube-lightest);\n  --nt-color-nav-darkest: var(--nt-color-slate-darkest);\n  --nt-color-nav-darker: var(--nt-color-slate-darker);\n  --nt-color-nav-dark: var(--nt-color-slate-dark);\n  --nt-color-nav: var(--nt-color-slate);\n  --nt-color-nav-light: var(--nt-color-slate-light);\n  --nt-color-nav-lighter: var(--nt-color-slate-lighter);\n  --nt-color-nav-lightest: var(--nt-color-slate-lightest);\n  --nt-color-selected-darkest: var(--nt-color-sky-darkest);\n  --nt-color-selected-darker: var(--nt-color-sky-darker);\n  --nt-color-selected-dark: var(--nt-color-sky-dark);\n  --nt-color-selected: var(--nt-color-sky);\n  --nt-color-selected-light: var(--nt-color-sky-light);\n  --nt-color-selected-lighter: var(--nt-color-sky-lighter);\n  --nt-color-selected-lightest: var(--nt-color-sky-lightest);\n  --nt-color-success-darkest: var(--nt-color-asparagus-darkest);\n  --nt-color-success-darker: var(--nt-color-asparagus-darker);\n  --nt-color-success-dark: var(--nt-color-asparagus-dark);\n  --nt-color-success: var(--nt-color-asparagus);\n  --nt-color-success-light: var(--nt-color-asparagus-light);\n  --nt-color-success-lighter: var(--nt-color-asparagus-lighter);\n  --nt-color-success-lightest: var(--nt-color-asparagus-lightest);\n  --nt-color-textcontrast-darkest: var(--nt-color-alabaster-darkest);\n  --nt-color-textcontrast-darker: var(--nt-color-alabaster-darker);\n  --nt-color-textcontrast-dark: var(--nt-color-alabaster-dark);\n  --nt-color-textcontrast: var(--nt-color-alabaster);\n  --nt-color-textcontrast-light: var(--nt-color-alabaster-light);\n  --nt-color-textcontrast-lighter: var(--nt-color-alabaster-lighter);\n  --nt-color-textcontrast-lightest: var(--nt-color-alabaster-lightest);\n  --nt-color-text-darkest: var(--nt-color-midnight-darkest);\n  --nt-color-text-darker: var(--nt-color-midnight-darker);\n  --nt-color-text-dark: var(--nt-color-midnight-dark);\n  --nt-color-text: var(--nt-color-midnight);\n  --nt-color-text-light: var(--nt-color-midnight-light);\n  --nt-color-text-lighter: var(--nt-color-midnight-lighter);\n  --nt-color-text-lightest: var(--nt-color-midnight-lightest);\n  --nt-color-warning-darkest: var(--nt-color-clementine-darkest);\n  --nt-color-warning-darker: var(--nt-color-clementine-darker);\n  --nt-color-warning-dark: var(--nt-color-clementine-dark);\n  --nt-color-warning: var(--nt-color-clementine);\n  --nt-color-warning-light: var(--nt-color-clementine-light);\n  --nt-color-warning-lighter: var(--nt-color-clementine-lighter);\n  --nt-color-warning-lightest: var(--nt-color-clementine-lightest);\n}\n`;\n\nconst DarkTheme = createGlobalStyle`\n:root {\n  --theme-app-bg: #2b2b2b;\n  --theme-app-fg: var(--nt-color-midnight-lightest);\n  --theme-app-border: var(--nt-color-midnight-light);\n\n  --theme-primary-bg: var(--nt-color-midnight);\n  --theme-primary-bg-hover: var(--nt-color-midnight);\n  --theme-primary-bg-focus: var(--nt-color-midnight-light);\n\n  --theme-primary-fg: var(--nt-color-midnight-light);\n  --theme-primary-fg-hover: var(--nt-color-midnight-lighter);\n  --theme-primary-fg-focus: var(--theme-app-fg);\n\n  --theme-secondary-bg: var(--theme-primary-bg);\n  --theme-secondary-bg-hover: var(--theme-primary-bg-hover);\n  --theme-secondary-bg-focus: var(--theme-primary-bg-focus);\n\n  --theme-secondary-fg: var(--nt-color-midnight-light);\n  --theme-secondary-fg-hover: var(--nt-color-midnight-lighter);\n  --theme-secondary-fg-focus: var(--theme-primary-fg);\n\n  --theme-primary-shadow-hover: 1px  1px 3px rgba(255, 255, 255, 0.12), -1px -1px 3px rgba(255, 255, 255, 0.12);\n  --theme-primary-shadow-focus: 3px  3px 9px rgba(255, 255, 255, 0.12), -3px -3px 9px rgba(255, 255, 255, 0.12);\n\n  --theme-title-bar-bg: var(--nt-color-midnight-darkest);\n\n  --theme-menu-bg: var(--theme-primary-bg);\n  --theme-menu-bg-hover: var(--theme-primary-bg-hover);\n  --theme-menu-bg-focus: var(--theme-primary-bg-focus);\n  --theme-menu-shadow: var(--theme-primary-shadow-hover);\n\n  --theme-menu-fg: var(--theme-app-fg);\n  --theme-menu-fg-hover: var(--theme-app-fg);\n  --theme-menu-fg-focus: var(--theme-app-fg);\n\n  --theme-cell-bg: var(--theme-app-bg);\n  --theme-cell-shadow-hover: var(--theme-primary-shadow-hover);\n  --theme-cell-shadow-focus: var(--theme-primary-shadow-focus);\n\n  --theme-cell-prompt-bg: var(--theme-primary-bg);\n  --theme-cell-prompt-bg-hover: var(--theme-primary-bg);\n  --theme-cell-prompt-bg-focus: var(--theme-primary-bg);\n\n  --theme-cell-prompt-fg: var(--theme-primary-fg);\n  --theme-cell-prompt-fg-hover: var(--theme-primary-fg-hover);\n  --theme-cell-prompt-fg-focus: var(--theme-primary-fg-focus);\n\n  --theme-cell-toolbar-bg: var(--theme-primary-bg);\n  --theme-cell-toolbar-bg-hover: var(--theme-primary-bg-hover);\n  --theme-cell-toolbar-bg-focus: var(--theme-primary-bg-focus);\n\n  --theme-cell-toolbar-fg: var(--theme-secondary-fg);\n  --theme-cell-toolbar-fg-hover: var(--theme-secondary-fg-hover);\n  --theme-cell-toolbar-fg-focus: var(--theme-secondary-fg-focus);\n\n  --theme-cell-menu-bg: var(--theme-primary-bg);\n  --theme-cell-menu-bg-hover: var(--theme-primary-bg-hover);\n  --theme-cell-menu-bg-focus: var(--theme-primary-bg-focus);\n\n  --theme-cell-menu-fg: var(--theme-primary-fg);\n  --theme-cell-menu-fg-hover: var(--theme-primary-fg-hover);\n  --theme-cell-menu-fg-focus: var(--theme-primary-fg-focus);\n\n  --theme-cell-input-bg: var(--theme-secondary-bg);\n  --theme-cell-input-fg: var(--theme-app-fg);\n\n  --theme-cell-output-bg: var(--theme-app-bg);\n  --theme-cell-output-fg: var(--theme-primary-fg);\n\n  --theme-cell-creator-bg: var(--theme-app-bg);\n\n  --theme-cell-creator-fg: var(--theme-secondary-fg);\n  --theme-cell-creator-fg-hover: var(--theme-secondary-fg-hover);\n  --theme-cell-creator-fg-focus: var(--theme-secondary-fg-focus);\n\n  --theme-pager-bg: #111;\n\n  --cm-background: #111;\n  --cm-color: #ecf0f1;\n\n  --cm-gutter-bg: #777;\n\n  --cm-comment: #777;\n  --cm-keyword: #3498db;\n  --cm-string: #f1c40f;\n  --cm-builtin: #16a085;\n  --cm-special: #1abc9c;\n  --cm-variable: #ecf0f1;\n  --cm-number: #2ecc71;\n  --cm-meta: #95a5a6;\n  --cm-link: #2ecc71;\n  --cm-operator: #ecf0f1;\n  --cm-def: #ecf0f1;\n\n  --cm-activeline-bg: #e8f2ff;\n  --cm-matchingbracket-outline: grey;\n  --cm-matchingbracket-color: white;\n\n  --cm-hint-color: var(--theme-app-fg);\n  --cm-hint-color-active: var(--cm-color);\n  --cm-hint-bg: var(--theme-app-bg);\n  --cm-hint-bg-active: #111;\n\n  --status-bar: #111;\n}\n`;\n\nconst LightTheme = createGlobalStyle`\n:root {\n  --theme-app-bg: white;\n  --theme-app-fg: var(--nt-color-midnight);\n  --theme-app-border: var(--nt-color-grey-light);\n\n  --theme-primary-bg: var(--nt-color-grey-lightest);\n  --theme-primary-bg-hover: var(--nt-color-grey-lighter);\n  --theme-primary-bg-focus: var(--nt-color-grey-light);\n\n  --theme-primary-fg: var(--nt-color-midnight-light);\n  --theme-primary-fg-hover: var(--nt-color-midnight);\n  --theme-primary-fg-focus: var(--theme-app-fg);\n\n  --theme-secondary-bg: var(--theme-primary-bg);\n  --theme-secondary-bg-hover: var(--theme-primary-bg-hover);\n  --theme-secondary-bg-focus: var(--theme-primary-bg-focus);\n\n  --theme-secondary-fg: var(--nt-color-midnight-lighter);\n  --theme-secondary-fg-hover: var(--nt-color-midnight-light);\n  --theme-secondary-fg-focus: var(--theme-primary-fg);\n\n  --theme-primary-shadow-hover: 1px  1px 3px rgba(0, 0, 0, 0.12), -1px -1px 3px rgba(0, 0, 0, 0.12);\n  --theme-primary-shadow-focus: 3px  3px 9px rgba(0, 0, 0, 0.12), -3px -3px 9px rgba(0, 0, 0, 0.12);\n\n  --theme-title-bar-bg: var(--theme-primary-bg-hover);\n\n  --theme-menu-bg: var(--theme-primary-bg);\n  --theme-menu-bg-hover: var(--theme-primary-bg-hover);\n  --theme-menu-bg-focus: var(--theme-primary-bg-focus);\n  --theme-menu-shadow: var(--theme-primary-shadow-hover);\n\n  --theme-menu-fg: var(--theme-app-fg);\n  --theme-menu-fg-hover: var(--theme-app-fg);\n  --theme-menu-fg-focus: var(--theme-app-fg);\n\n  --theme-cell-bg: var(--theme-app-bg);\n  --theme-cell-shadow-hover: var(--theme-primary-shadow-hover);\n  --theme-cell-shadow-focus: var(--theme-primary-shadow-focus);\n\n  --theme-cell-prompt-bg: var(--theme-primary-bg);\n  --theme-cell-prompt-bg-hover: var(--theme-primary-bg-hover);\n  --theme-cell-prompt-bg-focus: var(--theme-primary-bg-focus);\n\n  --theme-cell-prompt-fg: var(--theme-secondary-fg);\n  --theme-cell-prompt-fg-hover: var(--theme-secondary-fg-hover);\n  --theme-cell-prompt-fg-focus: var(--theme-secondary-fg-focus);\n\n  --theme-cell-toolbar-bg: var(--theme-primary-bg);\n  --theme-cell-toolbar-bg-hover: var(--theme-primary-bg-hover);\n  --theme-cell-toolbar-bg-focus: var(--theme-primary-bg-focus);\n\n  --theme-cell-toolbar-fg: var(--theme-secondary-fg);\n  --theme-cell-toolbar-fg-hover: var(--theme-secondary-fg-hover);\n  --theme-cell-toolbar-fg-focus: var(--theme-secondary-fg-focus);\n\n  --theme-cell-menu-bg: var(--theme-primary-bg);\n  --theme-cell-menu-bg-hover: var(--theme-primary-bg-hover);\n  --theme-cell-menu-bg-focus: var(--theme-primary-bg-focus);\n\n  --theme-cell-menu-fg: var(--theme-primary-fg);\n  --theme-cell-menu-fg-hover: var(--theme-primary-fg-hover);\n  --theme-cell-menu-fg-focus: var(--theme-primary-fg-focus);\n\n  --theme-cell-input-bg: var(--theme-secondary-bg);\n  --theme-cell-input-fg: var(--theme-app-fg);\n\n  --theme-cell-output-bg: var(--theme-app-bg);\n  --theme-cell-output-fg: var(--theme-primary-fg);\n\n  --theme-cell-creator-bg: var(--theme-app-bg);\n\n  --theme-cell-creator-fg: var(--theme-secondary-fg);\n  --theme-cell-creator-fg-hover: var(--theme-secondary-fg-hover);\n  --theme-cell-creator-fg-focus: var(--theme-secondary-fg-focus);\n\n  --theme-pager-bg: #fafafa;\n\n  --cm-background: #fafafa;\n  --cm-color: black;\n\n  --cm-gutter-bg: white;\n\n  --cm-comment: #a86;\n  --cm-keyword: blue;\n  --cm-string: #a22;\n  --cm-builtin: #077;\n  --cm-special: #0aa;\n  --cm-variable: black;\n  --cm-number: #3a3;\n  --cm-meta: #555;\n  --cm-link: #3a3;\n  --cm-operator: black;\n  --cm-def: black;\n\n  --cm-activeline-bg: #e8f2ff;\n  --cm-matchingbracket-outline: grey;\n  --cm-matchingbracket-color: black;\n\n  --cm-hint-color: var(--cm-color);\n  --cm-hint-color-active: var(--cm-color);\n  --cm-hint-bg: var(--theme-app-bg);\n  --cm-hint-bg-active: #abd1ff;\n\n  --status-bar: #eeedee;\n}\n`;\n\nexport { GlobalCSSVariables, DarkTheme, LightTheme };\n","import { Cell } from \"./components/cell\";\nimport { Cells } from \"./components/cells\";\nimport { Input } from \"./components/input\";\nimport { Outputs } from \"./components/outputs\";\nimport { Pagers } from \"./components/pagers\";\nimport { Prompt, PromptBuffer } from \"./components/prompt\";\nimport { Source } from \"./components/source\";\n\nexport * from \"./styles\";\n\nexport { Input, Outputs, Pagers, Prompt, PromptBuffer, Source, Cell, Cells };\n","/* eslint-disable no-return-assign */\nimport {\n  CellId,\n  CellType,\n  ExecutionCount,\n  ImmutableCodeCell,\n  JSONObject\n} from \"@nteract/commutable\";\nimport { actions, selectors } from \"@nteract/core\";\nimport {\n  KernelOutputError,\n  Media,\n  Output,\n  RichMedia,\n  StreamText\n} from \"@nteract/outputs\";\nimport {\n  Cell as PlainCell,\n  DarkTheme,\n  Input,\n  LightTheme,\n  Outputs,\n  Pagers,\n  Prompt,\n  Source\n} from \"@nteract/presentational-components\";\nimport { AppState, ContentRef, KernelRef } from \"@nteract/types\";\nimport * as Immutable from \"immutable\";\nimport * as React from \"react\";\nimport { DragDropContext as dragDropContext } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { Subject } from \"rxjs\";\n\nimport CellCreator from \"./cell-creator\";\nimport DraggableCell from \"./draggable-cell\";\nimport Editor from \"./editor\";\nimport { HijackScroll } from \"./hijack-scroll\";\nimport MarkdownPreviewer from \"./markdown-preview\";\nimport NotebookHelmet from \"./notebook-helmet\";\nimport StatusBar from \"./status-bar\";\nimport Toolbar, { CellToolbarMask } from \"./toolbar\";\nimport TransformMedia from \"./transform-media\";\n\nimport styled from \"styled-components\";\n\nfunction getTheme(theme: string) {\n  switch (theme) {\n    case \"dark\":\n      return <DarkTheme />;\n    case \"light\":\n    default:\n      return <LightTheme />;\n  }\n}\n\nconst emptyList = Immutable.List();\nconst emptySet = Immutable.Set();\n\nconst Cell = styled(PlainCell).attrs((props: { isSelected: boolean }) => ({\n  className: props.isSelected ? \"selected\" : \"\"\n}))`\n  /*\n   * Show the cell-toolbar-mask if hovering on cell,\n   * cell was the last clicked\n   */\n  &:hover ${CellToolbarMask}, &.selected ${CellToolbarMask} {\n    display: block;\n  }\n`;\n\nCell.displayName = \"Cell\";\n\ninterface AnyCellProps {\n  id: string;\n  tags: Immutable.Set<string>;\n  contentRef: ContentRef;\n  channels?: Subject<any>;\n  cellType: \"markdown\" | \"code\" | \"raw\";\n  theme: string;\n  source: string;\n  executionCount: ExecutionCount;\n  outputs: Immutable.List<any>;\n  pager: Immutable.List<any>;\n  cellStatus: string;\n  cellFocused: boolean; // not the ID of which is focused\n  editorFocused: boolean;\n  sourceHidden: boolean;\n  executeCell: () => void;\n  deleteCell: () => void;\n  clearOutputs: () => void;\n  toggleParameterCell: () => void;\n  toggleCellInputVisibility: () => void;\n  toggleCellOutputVisibility: () => void;\n  toggleOutputExpansion: () => void;\n  changeCellType: (to: CellType) => void;\n  outputHidden: boolean;\n  outputExpanded: boolean;\n  selectCell: () => void;\n  focusEditor: () => void;\n  unfocusEditor: () => void;\n  focusAboveCell: () => void;\n  focusBelowCell: () => void;\n  updateOutputMetadata: (\n    index: number,\n    metadata: JSONObject,\n    mediaType: string\n  ) => void;\n}\n\nconst makeMapStateToCellProps = (\n  initialState: AppState,\n  { id, contentRef }: { id: string; contentRef: ContentRef }\n) => {\n  const mapStateToCellProps = (state: AppState) => {\n    const model = selectors.model(state, { contentRef });\n    if (!model || model.type !== \"notebook\") {\n      throw new Error(\n        \"Cell components should not be used with non-notebook models\"\n      );\n    }\n\n    const kernelRef = model.kernelRef;\n\n    const cell = selectors.notebook.cellById(model, { id });\n    if (!cell) {\n      throw new Error(\"cell not found inside cell map\");\n    }\n\n    const cellType = cell.cell_type;\n    const outputs = cell.get(\"outputs\", emptyList);\n\n    const sourceHidden =\n      (cellType === \"code\" &&\n        (cell.getIn([\"metadata\", \"inputHidden\"]) ||\n          cell.getIn([\"metadata\", \"hide_input\"]))) ||\n      false;\n\n    const outputHidden =\n      cellType === \"code\" &&\n      (outputs.size === 0 || cell.getIn([\"metadata\", \"outputHidden\"]));\n\n    const outputExpanded =\n      cellType === \"code\" && cell.getIn([\"metadata\", \"outputExpanded\"]);\n\n    const tags = cell.getIn([\"metadata\", \"tags\"]) || emptySet;\n\n    const pager = model.getIn([\"cellPagers\", id]) || emptyList;\n\n    let channels: Subject<any> | undefined;\n    if (kernelRef) {\n      const kernel = selectors.kernel(state, { kernelRef });\n      if (kernel) {\n        channels = kernel.channels;\n      }\n    }\n\n    return {\n      cellFocused: model.cellFocused === id,\n      cellStatus: model.transient.getIn([\"cellMap\", id, \"status\"]),\n      cellType,\n      channels,\n      contentRef,\n      editorFocused: model.editorFocused === id,\n      executionCount: (cell as ImmutableCodeCell).get(\"execution_count\", null),\n      outputExpanded,\n      outputHidden,\n      outputs,\n      pager,\n      source: cell.get(\"source\", \"\"),\n      sourceHidden,\n      tags,\n      theme: selectors.userTheme(state)\n    };\n  };\n  return mapStateToCellProps;\n};\n\nconst makeMapDispatchToCellProps = (\n  initialDispatch: Dispatch,\n  { id, contentRef }: { id: string; contentRef: ContentRef }\n) => {\n  const mapDispatchToCellProps = (dispatch: Dispatch) => ({\n    focusAboveCell: () => {\n      dispatch(actions.focusPreviousCell({ id, contentRef }));\n      dispatch(actions.focusPreviousCellEditor({ id, contentRef }));\n    },\n    focusBelowCell: () => {\n      dispatch(\n        actions.focusNextCell({ id, createCellIfUndefined: true, contentRef })\n      );\n      dispatch(actions.focusNextCellEditor({ id, contentRef }));\n    },\n    focusEditor: () => dispatch(actions.focusCellEditor({ id, contentRef })),\n    selectCell: () => dispatch(actions.focusCell({ id, contentRef })),\n    unfocusEditor: () =>\n      dispatch(actions.focusCellEditor({ id: undefined, contentRef })),\n\n    changeCellType: (to: CellType) =>\n      dispatch(\n        actions.changeCellType({\n          contentRef,\n          id,\n          to\n        })\n      ),\n    clearOutputs: () => dispatch(actions.clearOutputs({ id, contentRef })),\n    deleteCell: () => dispatch(actions.deleteCell({ id, contentRef })),\n    executeCell: () => dispatch(actions.executeCell({ id, contentRef })),\n    toggleCellInputVisibility: () =>\n      dispatch(actions.toggleCellInputVisibility({ id, contentRef })),\n    toggleCellOutputVisibility: () =>\n      dispatch(actions.toggleCellOutputVisibility({ id, contentRef })),\n    toggleOutputExpansion: () =>\n      dispatch(actions.toggleOutputExpansion({ id, contentRef })),\n    toggleParameterCell: () =>\n      dispatch(actions.toggleParameterCell({ id, contentRef })),\n\n    updateOutputMetadata: (\n      index: number,\n      metadata: JSONObject,\n      mediaType: string\n    ) => {\n      dispatch(\n        actions.updateOutputMetadata({\n          id,\n          contentRef,\n          metadata,\n          index,\n          mediaType\n        })\n      );\n    }\n  });\n  return mapDispatchToCellProps;\n};\n\nconst CellBanner = styled.div`\n  background-color: darkblue;\n  color: ghostwhite;\n  padding: 9px 16px;\n\n  font-size: 12px;\n  line-height: 20px;\n`;\n\nCellBanner.displayName = \"CellBanner\";\n\nclass AnyCell extends React.PureComponent<AnyCellProps> {\n  toggleCellType = () => {\n    this.props.changeCellType(\n      this.props.cellType === \"markdown\" ? \"code\" : \"markdown\"\n    );\n  };\n\n  render() {\n    const {\n      executeCell,\n      deleteCell,\n      clearOutputs,\n      toggleParameterCell,\n      toggleCellInputVisibility,\n      toggleCellOutputVisibility,\n      toggleOutputExpansion,\n      changeCellType,\n      cellFocused,\n      cellStatus,\n      cellType,\n      editorFocused,\n      focusAboveCell,\n      focusBelowCell,\n      focusEditor,\n      id,\n      tags,\n      theme,\n      selectCell,\n      unfocusEditor,\n      contentRef,\n      sourceHidden\n    } = this.props;\n    const running = cellStatus === \"busy\";\n    const queued = cellStatus === \"queued\";\n    let element = null;\n\n    switch (cellType) {\n      case \"code\":\n        element = (\n          <React.Fragment>\n            <Input hidden={this.props.sourceHidden}>\n              <Prompt\n                counter={this.props.executionCount}\n                running={running}\n                queued={queued}\n              />\n              <Source>\n                <Editor\n                  id={id}\n                  contentRef={contentRef}\n                  focusAbove={focusAboveCell}\n                  focusBelow={focusBelowCell}\n                />\n              </Source>\n            </Input>\n            <Pagers>\n              {this.props.pager.map((pager, key) => (\n                <RichMedia data={pager.data} metadata={pager.metadata}>\n                  <Media.Json />\n                  <Media.JavaScript />\n                  <Media.HTML />\n                  <Media.Markdown />\n                  <Media.LaTeX />\n                  <Media.SVG />\n                  <Media.Image />\n                  <Media.Plain />\n                </RichMedia>\n              ))}\n            </Pagers>\n            <Outputs\n              hidden={this.props.outputHidden}\n              expanded={this.props.outputExpanded}\n            >\n              {this.props.outputs.map((output, index) => (\n                <Output output={output} key={index}>\n                  <TransformMedia\n                    output_type={\"display_data\"}\n                    cellId={id}\n                    contentRef={contentRef}\n                    index={index}\n                  />\n                  <TransformMedia\n                    output_type={\"execute_result\"}\n                    cellId={id}\n                    contentRef={contentRef}\n                    index={index}\n                  />\n                  <KernelOutputError />\n                  <StreamText />\n                </Output>\n              ))}\n            </Outputs>\n          </React.Fragment>\n        );\n\n        break;\n      case \"markdown\":\n        element = (\n          <MarkdownPreviewer\n            focusAbove={focusAboveCell}\n            focusBelow={focusBelowCell}\n            focusEditor={focusEditor}\n            cellFocused={cellFocused}\n            editorFocused={editorFocused}\n            unfocusEditor={unfocusEditor}\n            source={this.props.source}\n          >\n            <Source>\n              <Editor\n                id={id}\n                contentRef={contentRef}\n                focusAbove={focusAboveCell}\n                focusBelow={focusBelowCell}\n              />\n            </Source>\n          </MarkdownPreviewer>\n        );\n        break;\n\n      case \"raw\":\n        element = (\n          <Source>\n            <Editor\n              id={id}\n              contentRef={contentRef}\n              focusAbove={focusAboveCell}\n              focusBelow={focusBelowCell}\n            />\n          </Source>\n        );\n        break;\n      default:\n        element = <pre>{this.props.source}</pre>;\n        break;\n    }\n\n    return (\n      <HijackScroll focused={cellFocused} onClick={selectCell}>\n        <Cell isSelected={cellFocused}>\n          {/* The following banners come from when papermill's acknowledged\n              cell.metadata.tags are set\n          */}\n          {tags.has(\"parameters\") ? (\n            <CellBanner>Papermill - Parametrized</CellBanner>\n          ) : null}\n          {tags.has(\"default parameters\") ? (\n            <CellBanner>Papermill - Default Parameters</CellBanner>\n          ) : null}\n          <Toolbar\n            type={cellType}\n            cellFocused={cellFocused}\n            executeCell={executeCell}\n            deleteCell={deleteCell}\n            clearOutputs={clearOutputs}\n            toggleParameterCell={toggleParameterCell}\n            toggleCellInputVisibility={toggleCellInputVisibility}\n            toggleCellOutputVisibility={toggleCellOutputVisibility}\n            toggleOutputExpansion={toggleOutputExpansion}\n            changeCellType={this.toggleCellType}\n            sourceHidden={sourceHidden}\n          />\n          {element}\n        </Cell>\n      </HijackScroll>\n    );\n  }\n}\n\nexport const ConnectedCell = connect(\n  makeMapStateToCellProps,\n  makeMapDispatchToCellProps\n)(AnyCell);\n\ntype NotebookProps = NotebookStateProps & NotebookDispatchProps;\n\ninterface NotebookStateProps {\n  cellOrder: Immutable.List<any>;\n  theme: string;\n  contentRef: ContentRef;\n}\n\ninterface NotebookDispatchProps {\n  moveCell: (payload: {\n    id: CellId;\n    destinationId: CellId;\n    above: boolean;\n    contentRef: ContentRef;\n  }) => void;\n  focusCell: (payload: { id: CellId; contentRef: ContentRef }) => void;\n  executeFocusedCell: (payload: { contentRef: ContentRef }) => void;\n  focusNextCell: (payload: {\n    id?: CellId;\n    createCellIfUndefined: boolean;\n    contentRef: ContentRef;\n  }) => void;\n  focusNextCellEditor: (payload: {\n    id?: CellId;\n    contentRef: ContentRef;\n  }) => void;\n  updateOutputMetadata: (payload: {\n    id: CellId;\n    metadata: JSONObject;\n    contentRef: ContentRef;\n    index: number;\n    mediaType: string;\n  }) => void;\n}\n\nconst makeMapStateToProps = (\n  initialState: AppState,\n  initialProps: { contentRef: ContentRef }\n) => {\n  const { contentRef } = initialProps;\n  if (!contentRef) {\n    throw new Error(\"<Notebook /> has to have a contentRef\");\n  }\n\n  const mapStateToProps = (state: AppState): NotebookStateProps => {\n    const content = selectors.content(state, { contentRef });\n    const model = selectors.model(state, { contentRef });\n\n    if (!model || !content) {\n      throw new Error(\n        \"<Notebook /> has to have content & model that are notebook types\"\n      );\n    }\n    const theme = selectors.userTheme(state);\n\n    if (model.type !== \"notebook\") {\n      return {\n        cellOrder: Immutable.List(),\n        contentRef,\n        theme\n      };\n    }\n\n    if (model.type !== \"notebook\") {\n      throw new Error(\n        \"<Notebook /> has to have content & model that are notebook types\"\n      );\n    }\n\n    return {\n      cellOrder: model.notebook.cellOrder,\n      contentRef,\n      theme\n    };\n  };\n  return mapStateToProps;\n};\n\nconst Cells = styled.div`\n  padding-top: var(--nt-spacing-m, 10px);\n  padding-left: var(--nt-spacing-m, 10px);\n  padding-right: var(--nt-spacing-m, 10px);\n`;\n\nconst mapDispatchToProps = (dispatch: Dispatch): NotebookDispatchProps => ({\n  executeFocusedCell: (payload: { contentRef: ContentRef }) =>\n    dispatch(actions.executeFocusedCell(payload)),\n  focusCell: (payload: { id: CellId; contentRef: ContentRef }) =>\n    dispatch(actions.focusCell(payload)),\n  focusNextCell: (payload: {\n    id?: CellId;\n    createCellIfUndefined: boolean;\n    contentRef: ContentRef;\n  }) => dispatch(actions.focusNextCell(payload)),\n  focusNextCellEditor: (payload: { id?: CellId; contentRef: ContentRef }) =>\n    dispatch(actions.focusNextCellEditor(payload)),\n  moveCell: (payload: {\n    id: CellId;\n    destinationId: CellId;\n    above: boolean;\n    contentRef: ContentRef;\n  }) => dispatch(actions.moveCell(payload)),\n  updateOutputMetadata: (payload: {\n    id: CellId;\n    contentRef: ContentRef;\n    metadata: JSONObject;\n    index: number;\n    mediaType: string;\n  }) => dispatch(actions.updateOutputMetadata(payload))\n});\n\n// tslint:disable max-classes-per-file\nexport class NotebookApp extends React.PureComponent<NotebookProps> {\n  static defaultProps = {\n    theme: \"light\"\n  };\n\n  constructor(props: NotebookProps) {\n    super(props);\n    this.keyDown = this.keyDown.bind(this);\n  }\n\n  componentDidMount(): void {\n    document.addEventListener(\"keydown\", this.keyDown);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener(\"keydown\", this.keyDown);\n  }\n\n  keyDown(e: KeyboardEvent): void {\n    // If enter is not pressed, do nothing\n    if (e.keyCode !== 13) {\n      return;\n    }\n\n    const {\n      executeFocusedCell,\n      focusNextCell,\n      focusNextCellEditor,\n      contentRef\n    } = this.props;\n\n    let ctrlKeyPressed = e.ctrlKey;\n    // Allow cmd + enter (macOS) to operate like ctrl + enter\n    if (process.platform === \"darwin\") {\n      ctrlKeyPressed = (e.metaKey || e.ctrlKey) && !(e.metaKey && e.ctrlKey);\n    }\n\n    const shiftXORctrl =\n      (e.shiftKey || ctrlKeyPressed) && !(e.shiftKey && ctrlKeyPressed);\n    if (!shiftXORctrl) {\n      return;\n    }\n\n    e.preventDefault();\n\n    // NOTE: Order matters here because we need it to execute _before_ we\n    // focus the next cell\n    executeFocusedCell({ contentRef });\n\n    if (e.shiftKey) {\n      // Couldn't focusNextCell just do focusing of both?\n      focusNextCell({ id: undefined, createCellIfUndefined: true, contentRef });\n      focusNextCellEditor({ id: undefined, contentRef });\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        <NotebookHelmet contentRef={this.props.contentRef} />\n        <Cells>\n          <CellCreator\n            id={this.props.cellOrder.get(0)}\n            above\n            contentRef={this.props.contentRef}\n          />\n          {this.props.cellOrder.map(cellID => (\n            <div className=\"cell-container\" key={`cell-container-${cellID}`}>\n              <DraggableCell\n                moveCell={this.props.moveCell}\n                id={cellID}\n                focusCell={this.props.focusCell}\n                contentRef={this.props.contentRef}\n              >\n                <ConnectedCell id={cellID} contentRef={this.props.contentRef} />\n              </DraggableCell>\n              <CellCreator\n                key={`creator-${cellID}`}\n                id={cellID}\n                above={false}\n                contentRef={this.props.contentRef}\n              />\n            </div>\n          ))}\n        </Cells>\n        <StatusBar contentRef={this.props.contentRef} />\n        {getTheme(this.props.theme)}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const ConnectedNotebook = dragDropContext(HTML5Backend)(NotebookApp);\nexport default connect(\n  makeMapStateToProps,\n  mapDispatchToProps\n)(ConnectedNotebook);\n"],"sourceRoot":""}