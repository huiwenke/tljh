{"version":3,"sources":["webpack:////Users/captainsafia/github.com/nteract/nteract/packages/selectors/src/notebook.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/selectors/src/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/actions/src/actionTypes/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/actions/src/actionTypes/cells.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/actions/src/actionTypes/contents.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/actions/src/actionTypes/kernels.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/actions/src/actionTypes/kernelspecs.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/messaging/src/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/transform-vdom/src/event-to-object.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/transform-vdom/src/object-to-react.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/transform-vdom/src/index.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/connected-components/src/new-notebook-navigation/logos.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/connected-components/src/new-notebook-navigation/index.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/connected-components/src/header-editor.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/connected-components/src/modal-controller/about-modal.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/connected-components/src/modal-controller/constants.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/connected-components/src/modal-controller/index.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/connected-components/src/notebook-menu/constants.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/connected-components/src/notebook-menu/index.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/connected-components/src/notebook-menu/styles.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/directory-listing/src/components/icon.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/directory-listing/src/components/entry.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/directory-listing/src/components/lastsaved.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/directory-listing/src/components/listing.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/directory-listing/src/components/name.tsx","webpack:///./app/contents/directory.tsx","webpack:///./app/triggers/open-notebook.ts","webpack:///./app/contents/notebook.tsx","webpack:///./app/contents/file/text-file.tsx","webpack:///./app/contents/file/index.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/iron-icons/src/index.tsx","webpack:///./app/components/editable-title-overlay.tsx","webpack:///./app/components/last-saved.tsx","webpack:///./app/components/nav.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/logos/src/wide.tsx","webpack:///./app/components/themed-logo.tsx","webpack:///./app/contents/headers.tsx","webpack:///./app/contents/index.tsx","webpack:///./app/app.tsx","webpack:///./app/store.ts","webpack:///./app/bootstrap.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/octicons/src/index.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/commutable/src/primitives.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/commutable/src/cells.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/commutable/src/outputs.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/commutable/src/v3.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/commutable/src/v4.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/commutable/src/notebook.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/commutable/src/structures.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/commutable/src/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/rx-jupyter/src/base.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/rx-jupyter/src/contents.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/rx-jupyter/src/kernels.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/rx-jupyter/src/kernelspecs.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/rx-jupyter/src/sessions.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/rx-jupyter/src/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/messaging/src/messages.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/components/rich-media.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/components/output.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/ansi-to-react/src/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/components/kernel-output-error.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/components/display-data.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/components/execute-result.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/components/stream-text.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/components/media/html.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/components/outputStyle.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/components/media/json.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/components/media/svg.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/components/media/plain.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/components/media/markdown.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/components/media/latex.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/components/media/image.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/index.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/actions/src/actions/contents.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/core/src/middlewares.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/outputs/src/components/media/javascript.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/actions/src/actions/cells.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/actions/src/actions/kernels.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/actions/src/actions/kernelspecs.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/actions/src/actions/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/actions/src/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/mathjax/src/context.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/mathjax/src/load-script.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/mathjax/src/provider.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/mathjax/src/node.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/mathjax/src/text.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/mathjax/src/index.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/markdown/src/remark-math/block.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/markdown/src/remark-math/inline.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/markdown/src/remark-math/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/markdown/src/index.tsx","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/epics/src/comm.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/epics/src/contents.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/epics/src/execute.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/types/src/entities/contents/notebook.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/types/src/entities/contents/directory.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/types/src/entities/contents/dummy.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/types/src/entities/contents/file.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/types/src/entities/contents/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/types/src/entities/hosts.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/types/src/entities/kernels.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/types/src/entities/kernelspecs.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/types/src/entities/modals.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/types/src/entities/transforms.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/types/src/entities/kernel-info.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/types/src/entities/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/types/src/refs.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/types/src/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/epics/src/kernel-lifecycle.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/epics/src/kernelspecs.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/epics/src/websocket-kernel.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/types/src/ids.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/epics/src/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/reducers/src/app.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/reducers/src/comms.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/reducers/src/config.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/reducers/src/core/entities/contents/notebook.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/reducers/src/core/entities/contents/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/reducers/src/core/entities/contents/file.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/reducers/src/core/entities/hosts.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/reducers/src/core/entities/kernels.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/reducers/src/core/entities/kernelspecs.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/reducers/src/core/entities/modals.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/reducers/src/core/entities/transforms.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/reducers/src/core/entities/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/reducers/src/core/index.ts","webpack:////Users/captainsafia/github.com/nteract/nteract/packages/core/src/index.ts"],"names":["notebook_cellMap","model","notebook","get","immutable_es","cellById","id","notebook_cellOrder","notebook_cellFocused","cellFocused","editorFocusedId","editorFocused","codeCellIdsBelow","cellOrder","index","indexOf","skip","filter","getIn","hiddenCellIds","Object","es","cellMap","idsOfHiddenOutputs","CellId","transientCellMap","transient","codeCellIds","metadata","githubUsername","gistId","notebook_notebook","savedNotebook","isDirty","original","disk","asJSON","src","asString","notebookJS","codeMirrorMode","displayName","identity","thing","__webpack_require__","d","__webpack_exports__","serverConfig","userTheme","appVersion","currentHost","contentByRef","content","transformsById","displayOrder","transform","src_model","kernelRefByContentRef","currentKernelspecsRef","kernelspecsByRef","currentKernelspecs","kernelsByRef","kernel","currentKernelRef","currentKernel","currentKernelType","currentKernelStatus","currentHostType","isCurrentKernelZeroMQ","isCurrentHostJupyter","isCurrentKernelJupyterWebsocket","comms","models","filepath","modalType","currentTheme","notificationSystem","notebook_namespaceObject","host","endpoint","origin","basePath","crossDomain","undefined","token","ajaxOptions","wsProtocol","state","config","app","version","core","entities","contents","byRef","contentRef","transforms","byId","ownProps","c","type","kernelRef","kernelspecs","ref","kernels","status","hostType","kernelType","modals","OPEN_MODAL","CLOSE_MODAL","ADD_HOST","REMOVE_HOST","SET_APP_HOST","CHANGE_FILENAME","APPEND_OUTPUT","UPDATE_DISPLAY","UPDATE_DISPLAY_FAILED","ACCEPT_PAYLOAD_MESSAGE","SET_LANGUAGE_INFO","OVERWRITE_METADATA_FIELD","DELETE_METADATA_FIELD","REGISTER_COMM_TARGET","COMM_OPEN","COMM_MESSAGE","SET_CONFIG_AT_KEY","MERGE_CONFIG","LOAD_CONFIG","SAVE_CONFIG","DONE_SAVING_CONFIG","TOGGLE_OUTPUT_EXPANSION","SET_EXECUTION_STATE","SET_NOTIFICATION_SYSTEM","SET_GITHUB_TOKEN","PUBLISH_GIST","ADD_TRANSFORM","REMOVE_TRANSFORM","ERROR","process","createMessage","createExecuteRequest","childOf","ofMessageType","outputs","payloads","executionCounts","kernelStatuses","rxjs__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_1__","rxjs_operators__WEBPACK_IMPORTED_MODULE_2__","rxjs_operators__WEBPACK_IMPORTED_MODULE_3__","rxjs_operators__WEBPACK_IMPORTED_MODULE_4__","_messages__WEBPACK_IMPORTED_MODULE_5__","_types__WEBPACK_IMPORTED_MODULE_6__","msg_type","fields","assign","code","parentMessage","source","parentMessageID","header","msg_id","create","subscriber","subscribe","msg","parent_header","next","env","DEBUG","console","warn","err","error","complete","o","messageTypes","length","Array","isArray","Error","convertOutputMessageToNotebookFormat","output_type","pipe","entry","payload","Boolean","p","execution_count","execution_state","serializeEvent","event","clipboardData","data","keyboardEvent","altKey","charCode","ctrlKey","key","keyCode","locale","location","metaKey","repeat","shiftKey","which","value","target","mouseEvent","button","buttons","clientX","clientY","pageX","pageY","screenX","screenY","pointerEvent","pointerId","width","height","pressure","tiltX","tiltY","pointerType","isPrimary","touchEvent","detail","wheelEvent","deltaMode","deltaX","deltaY","deltaZ","animationEvent","animationName","pseudoElement","elapsedTime","transitionEvent","propertyName","objectToReactElement","obj","onVDOMEvent","args","tagName","JSON","stringify","attributes","style","dangerouslySetInnerHTML","eventHandlers","eventType","hasOwnProperty","targetName","serializedEvent","children","concat","arrayToReactChildren","arr","result","i","len","item","push","keyedItem","react","apply","src_VDOM","[object Object]","this","props","lodash","backgroundColor","color","fontWeight","display","padding","marginBottom","toString","MIMETYPE","defaultProps","mediaType","log","SVGWrapper","xmlns","viewBox","outerProps","verticalAlign","PythonLogo","marker","overflow","fill","fillOpacity","ScalaLogo","RLogo","x2","y2","gradientUnits","offset","stopColor","fillRule","JSLogo","preserveAspectRatio","PlaceholderLogo","strokeColor","str","hash","charCodeAt","hashCode","pickColor","language","stroke","strokeWidth","cx","cy","r","Logo","toLowerCase","DisplayNameLong","styled_components_browser_esm","NewNotebookDiv","div","LogoBox","TextBox","DisplayNameShort","NewNotebook","tabIndex","onClick","kernelspec","className","title","NotebookCollection","Banner","new_notebook_navigation","initialState","cachedAvailableKernels","previousKernelspecs","availableKernels","flatMap","kss","byName","map","ks","sort","a","b","langCompare","localeCompare","displayCompare","toList","availableNotebooks","an","name","tagStyle","background","marginRight","authorStyle","fontStyle","authorStyleBlack","addTagMessage","addAuthorMessage","header_editor_HeaderEditor","super","editMode","editable","headerData","onChange","onAuthorsRemove","t","evt","authors","onTagsRemove","e","tags","onCancel","setState","html","editableText","placeholder","disabled","newText","tag","large","minimal","onRemove","maxLength","selectAllOnFocus","onConfirm","tooltip","position","RIGHT","usePortal","icon","marginTop","maxLines","minLines","multiline","description","theme","focusOnRender","el","focus","ModalContentDialog","dialog","ModalContentOverlay","about_modal_mapDispatchToProps","closeModal","about_modal","react_default","Component","handleKeyDown","handleOverlayClick","currentTarget","createElement","onKeyDown","MODAL_TYPES","ABOUT","getModal","Modal","MENU_ITEM_ACTIONS","SAVE_NOTEBOOK","DOWNLOAD_NOTEBOOK","EXECUTE_ALL_CELLS","EXECUTE_ALL_CELLS_BELOW","RESTART_KERNEL","RESTART_AND_CLEAR_OUTPUTS","RESTART_AND_RUN_ALL_OUTPUTS","CLEAR_ALL_OUTPUTS","CHANGE_KERNEL","UNHIDE_ALL","CREATE_CODE_CELL","CREATE_MARKDOWN_CELL","SET_CELL_TYPE_CODE","SET_CELL_TYPE_MARKDOWN","COPY_CELL","CUT_CELL","PASTE_CELL","SET_THEME_DARK","SET_THEME_LIGHT","OPEN_ABOUT","KILL_KERNEL","INTERRUPT_KERNEL","MENUS","FILE","EDIT","EDIT_SET_CELL_TYPE","INSERT","CELL","CELL_CREATE_CELL","VIEW","VIEW_THEMES","RUNTIME","RUNTIME_CHANGE_KERNEL","HELP","createActionKey","action","join","parseActionKey","split","StickyMenu","rc_menu_es","notebook_menu","initialProps","currentContentRef","dispatch","saveNotebook","save","downloadNotebook","downloadContent","executeCell","executeAllCells","executeAllCellsBelow","clearAllOutputs","unhideAll","cutCell","copyCell","pasteCell","createCellBelow","changeCellType","setTheme","openAboutModal","openModal","changeKernelByName","restartKernel","restartKernelAndClearOutputs","outputHandling","restartKernelAndRunAllOutputs","killKernel","interruptKernel","handleClick","persistAfterClick","cellType","to","outputHidden","inputHidden","restarting","oldKernelRef","kernelSpecName","openKeys","handleOpenChange","defaultOpenKeys","menuProps","mode","onOpenChange","selectable","href","textDecoration","keySeq","toArray","IconWrapper","span","attrs","icon_Icon","octicons_src","fileType","DirectoryEntry","tr","entry_Entry","child","react_hot_loader","TimeAgoTD","slowDownFormatter","unit","suffix","epochMiliseconds","nextFormatter","lastsaved_LastSaved","lastModified","lib_default","date","formatter","ListingRoot","table","listing_Listing","Name","directory_ListingRoot","ConnectedDirectory","appBase","items","entryRef","row","last_modified","lastSaved","path","assumedType","Date","openNotebook","cells","cell_type","display_name","nteract","nbformat","nbformat_minor","rx_jupyter_src","baseDir","first","mergeMap","response","sessionPayload","forkJoin","_session","message","alert","url","url_join_default","window","open","atRoot","dotdothref","dotdotlink","role","link","NotebookPlaceholder","contents_notebook","initialDispatch","addTransform","component","App","Promise","all","then","bind","module","default","PlotlyNullTransform","WidgetDisplay","VegaLite1","VegaLite2","Vega2","Vega3","loadApp","loadTransforms","EditorContainer","text_file_EditorPlaceholder","text_file","text","mimetype","handleChange","updateFileText","Editor","PaddedContainer","JupyterExtensionContainer","JupyterExtensionChoiceContainer","file","path_browserify","pop","lastSavedStatement","getChoice","choice","startsWith","handles","src_SVGWrapper","SavingIcon","LoadingIcon","ErrorIcon","CloseIcon","icon_icon","editable_title_overlay_EditableTitleOverlay","defaultValue","handleClose","handleSave","onSave","overlay","canEscapeKeyClose","canOutsideClickClose","isOpen","onClose","common","INPUT","minWidth","intent","confirmOnEnterKey","PRIMARY","last_saved","NavUl","ul","NavLi","li","NavSectionUl","NavSectionLi","WrapperDiv","NavSection","Nav","letteringColor","light","dark","WideLogo","requestedHeight","requestedWidth","ThemedLogo","DirectoryHeader","headers_FileHeader","getFileHandlerIcon","saving","loading","getFileExtension","filename","dot","exec","ext","addFileExtension","fileExtension","prevFileExtension","openDialog","isDialogOpen","closeDialog","confirmTitle","changeContentName","prevFilePath","themeLogoLink","ConnectedFileHeader","actions_src","app_contents","contentType","handlers","CHANGE_CELL_TYPE","CREATE_CELL_ABOVE","CREATE_CELL_BELOW","DELETE_CELL","OPEN","SAVE","keyMap","index_es","nextProps","NotificationSystem_default","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","redux","rootReducer","main","rootEl","jupyterHostRecord","defaultKernelName","baseUrl","hostRef","NullTransform","kernelspecsRef","hosts","set","contentsPath","text/vnd.plotly.v1+html","application/vnd.plotly.v1+json","application/geo+json","application/x-nteract-model-debug+json","application/vnd.dataresource+json","application/vnd.jupyter.widget-view+json","application/vnd.vegalite.v1+json","application/vnd.vegalite.v2+json","application/vnd.vega.v2+json","application/vnd.vega.v3+json","application/vdom.v1+json","application/json","outputs_src","Json","application/javascript","JavaScript","text/html","HTML","text/markdown","Markdown","text/latex","LaTeX","image/svg+xml","SVG","image/gif","Image","image/png","image/jpeg","text/plain","Plain","store","rootEpic","combineEpics","allEpics","epicMiddleware","createEpicMiddleware","middlewares","errorMiddleware","run","configureStore","fetchContent","params","fetchKernelspecs","react_dom_default","render","MarkdownOcticon","CodeOcticon","TrashOcticon","TriangleRightOcticon","ChevronDownOcticon","DatabaseOcticon","FileText","Book","FileDirectory","react__WEBPACK_IMPORTED_MODULE_0__","demultiline","s","remultiline","x","isJSONKey","test","deepFreeze","object","propNames","getOwnPropertyNames","freeze","createFrozenMediaBundle","mediaBundle","bundle","createOnDiskMediaBundle","freshBundle","makeCodeCell","collapsed","makeMarkdownCell","makeRawCell","emptyMediaBundle","makeExecuteResult","makeDisplayData","makeStreamOutput","makeErrorOutput","ename","evalue","traceback","createImmutableOutput","output","TypeError","VALID_MIMETYPES","latex","png","jpeg","svg","javascript","json","pdf","createImmutableMediaBundle","keys","v3_createImmutableOutput","prompt_number","stream","createImmutableCell","cell","createImmutableMarkdownCell","input","createImmutableCodeCell","createImmutableRawCell","line","level","createImmutableHeadingCell","isNotebookV3","createImmutableMetadata","v","k","v4_createImmutableCell","v4_createImmutableMarkdownCell","v4_createImmutableCodeCell","v4_createImmutableRawCell","metadataToJS","immMetadata","toJS","outputToJS","cellToJS","immCell","markdownCellToJS","codeCellToJS","rawCellToJS","isNotebookV4","makeNotebookRecord","notebook_fromJS","isRecord","has","starterCellStructure","asMutable","cellStructure","reduce","cellStruct","appendCell","asImmutable","v4_fromJS","worksheets","worksheet","fromJS","notebook_toJS","immnb","minorVersion","plainNotebook","toObject","plainCellOrder","plainCellMap","cellId","stringifyNotebook","createMarkdownCell","emptyCodeCell","emptyMarkdownCell","emptyNotebook","immutableCell","v4_default","insertCellAt","withMutations","nb","setIn","insert","insertCellAfter","priorCellId","deleteCell","removeIn","update","filterNot","normalizeBaseURL","replace","createAJAXSettings","uri","opts","cache","parsed","URL","searchParams","now","xsrfToken","js_cookie_default","headers","X-XSRFToken","Authorization","settings","responseType","createXHR","XMLHttpRequest","formURI","formCheckpointURI","checkpointID","remove","ajax","method","query","querystring_es3_default","body","Content-Type","listCheckpoints","createCheckpoint","deleteCheckpoint","restoreFromCheckpoint","list","kernels_get","start","kill","interrupt","restart","formWebSocketURL","kernelID","sessionID","url_search_params_node_default","append","q","connect","wsSubject","webSocket","protocol","retryWhen","error$","counter","tap","Event","delay","share","Subject","Subscriber","sessionizedMessage","session","kernelspecs_list","kernelspecs_get","sessions_list","sessions_get","destroy","sessions_update","sessions_create","kernels_namespaceObject","kernelspecs_namespaceObject","sessions_namespaceObject","contents_namespaceObject","executeRequest","kernelInfoRequest","uuid_v4__WEBPACK_IMPORTED_MODULE_0__","uuid_v4__WEBPACK_IMPORTED_MODULE_0___default","n","whichChannel","messageType","channel","toISOString","username","buffers","Uint8Array","options","silent","store_history","user_expressions","allow_stdin","stop_on_error","ErrorFallbackDiv","rich_media_RichMedia","choose","chosenOne","forEach","childElement","info","caughtError","renderError","caught","componentStack","output_ErrorFallbackDiv","output_Output","LINK_REGEX","Ansi","useClasses","linkify","use_classes","escape_carriage","lib","remove_empty","ansiToJSON","bg","fg","createStyle","classNames","substring","createClass","words","word","KernelOutputError","joinedTraceback","kernelOutputError","DisplayData","ExecuteResult","stream_text_StreamText","createFragment","document","createRange","createContextualFragment","StyledDiv","html_HTML","firstChild","removeChild","appendChild","__html","defaultTheme","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","darkTheme","json_Json","shouldExpandNode","expanded","react_json_tree_lib_default","invertTheme","hideRoot","svg_SVG","PureComponent","insertAdjacentHTML","markdown_Markdown","latex_LaTeX","mathjax_src","ImageStyle","img","size","alt","media_namespaceObject","changeContentNameFulfilled","changeContentNameFailed","fetchContentFulfilled","fetchContentFailed","changeFilename","downloadContentFailed","downloadContentFulfilled","saveAs","saveFailed","saveFulfilled","newNotebook","_actionTypes__WEBPACK_IMPORTED_MODULE_0__","kernelSpec","cwd","global","logger","immutable__WEBPACK_IMPORTED_MODULE_0__","redux_logger__WEBPACK_IMPORTED_MODULE_1__","_nteract_selectors__WEBPACK_IMPORTED_MODULE_2__","includes","errorText","getState","addNotification","dismissible","stateTransformer","prev","react__WEBPACK_IMPORTED_MODULE_0___default","runCodeHere","element","eval","pre","whiteSpace","stack","textContent","_unused_webpack_default_export","setExecutionState","actionTypes","clearOutputs","moveCell","createCellAbove","removeCell","createCellAfter","createCellBefore","createCellAppend","toggleParameterCell","toggleTagInCell","setInCell","updateCellSource","updateCellExecutionCount","toggleCellOutputVisibility","toggleCellInputVisibility","updateCellStatus","focusCell","focusNextCell","focusNextCellEditor","focusPreviousCell","focusCellEditor","focusPreviousCellEditor","updateOutputMetadata","launchKernelFailed","launchKernelSuccessful","launchKernel","launchKernelByName","kernelRawStdout","kernelRawStderr","killKernelFailed","killKernelSuccessful","interruptKernelSuccessful","interruptKernelFailed","restartKernelFailed","restartKernelSuccessful","sendExecuteRequest","executeFocusedCell","executeCanceled","executeFailed","deleteConnectionFileFailed","deleteConnectionFileSuccessful","shutdownReplySucceeded","shutdownReplyTimedOut","setKernelInfo","fetchKernelspecsFulfilled","fetchKernelspecsFailed","setKernelspecInfo","addHost","removeHost","overwriteMetadataField","deleteMetadataField","setNotificationSystem","setGithubToken","githubToken","setConfigAtKey","setCursorBlink","toggleOutputExpansion","loadConfig","saveConfig","doneSavingConfig","configLoaded","commOpenAction","comm_id","target_name","target_module","blob","commMessageAction","appendOutput","acceptPayloadMessage","updateDisplay","updateDisplayFailed","setLanguageInfo","publishGist","removeTransform","coreError","contextValue","MathJax","hasProviderAbove","context","defaultOptions","charset","async","stdOnEnd","script","cb","onload","onerror","ieOnEnd","onreadystatechange","readyState","load_script","head","getElementsByTagName","attr","setAttribute","setAttributes","provider_Provider","onLoad","Hub","onError","Config","Register","StartupHook","processSectionDelay","didFinishTypeset","MessageHook","Provider","noGate","types","ascii","tex","node_MathJaxNode_","nodeRef","typeset","prevProps","forceUpdate","inline","clear","jax","getJaxFor","Remove","setScriptText","reprocess","onRender","Queue","current","node_MathJaxNode","Consumer","text_MathJaxText_","text_MathJaxText","src_text","C_NEWLINE","C_TAB","C_SPACE","C_DOLLAR","MIN_FENCE_COUNT","CODE_INDENT_COUNT","locator","fromIndex","ESCAPED_INLINE_MATH","INLINE_MATH","INLINE_MATH_DOUBLE","remark_math","_opts","Parser","blockTokenizers","prototype","blockMethods","math","eat","character","subvalue","charAt","indent","fenceCount","column","closing","exdentedClosing","exdentedContent","queue","slice","trimmedContent","trim_trailing_lines_default","hName","hProperties","hChildren","splice","interruptParagraph","interruptList","interruptBlockquote","Compiler","visitors","node","call","inlineTokenizer","isDouble","match","escaped","toEat","trim","inlineTokenizers","inlineMethods","inlineMath","newProps","escapeHtml","plugins","renderers","react_markdown_default","commActionObservable","commOpenAction$","channels","messaging_src","commMessageAction$","merge","retry","commListenEpic","action$","operators","switchMap","updateContentEpic","state$","of","selectors_src","empty","xhr","history","replaceState","catchError","xhrError","basepath","fetchContentEpic","downloadString","fileContents","Blob","FileSaver_min_default","someArbitraryPrimesAround30k","autoSaveCurrentContentEpic","duration","interval","observable_from","isVisible","hidden","msHidden","webkitHidden","hasFocus","saveContentEpic","errorPayload","serializedData","saveModel","commutable_src","format","diskDate","inMemoryDate","diffDate","getTime","Math","abs","Immutable","createExecuteCellStream","cellStream","throwError","cellMessages","payloadStream","cellAction$","ct","mapTo","Observable","observer","subscription","executeCellStream","takeUntil","executeAllCellsEpic","concatMap","List","executeCellEpic","groupBy","mergeAll","updateDisplayEpic","makeDocumentRecord","keyPathsForDisplays","cellPagers","copied","makeNotebookContentRecord","created","writable","makeDirectoryModel","makeDirectoryContentRecord","makeEmptyModel","makeDummyContentRecord","makeFileModelRecord","makeFileContentRecord","makeContentsRecord","makeEmptyHostRecord","makeJupyterHostRecord","makeLocalHostRecord","makeHostsRecord","refs","makeKernelNotStartedRecord","makeLocalKernelRecord","lastActivity","spawn","connectionFile","makeRemoteKernelRecord","sessionId","makeKernelsRecord","makeKernelspec","argv","interruptMode","resources","makeKernelspecsByRefRecord","makeKernelspecsRecord","makeModalsRecord","makeTransformsRecord","Record","Map","makeHelpLinkRecord","kernelInfoRecordMaker","protocolVersion","implementation","implementationVersion","banner","helpLinks","languageName","languageVersion","pygmentsLexer","codemirrorMode","nbconvertExporter","makeEntitiesRecord","createHostRef","createKernelRef","createKernelspecsRef","createContentRef","makeCommsRecord","targets","makeStateRecord","makeAppRecord","isSaving","configLastSaved","kernel_lifecycle_path","watchExecutionStateEpic","kernelStatus","acquireKernelInfoEpic","obs","l","language_info","protocol_version","implementation_version","help_links","file_extension","pygments_lexer","codemirror_mode","nbconvert_exporter","langInfo","acquireKernelInfo","extractNewKernel","dirname","launchKernelWhenNotebookSetEpic","selectNextKernel","restartKernelEpic","kernelRefGenerator","oldKernel","newKernelRef","initiatingContentRef","relaunch","awaitKernelReady","take","timeout","restartSuccess","fetchKernelspecsEpic","spec","interrupt_mode","launchWebSocketKernelEpic","castToSessionId","changeWebSocketKernelEpic","kernelId","interruptKernelEpic","killKernelEpic","handleApp","setNotificationsSystem","setAppHost","handler","registerCommTarget","commInfo","processCommOpen","updateIn","processCommMessage","handleConfig","mergeConfig","cleanCellTransient","kpfd","keyPaths","keyPath","cleanedState","last","streamOutput","appendText","nextToLast","butLast","reduceOutputs","displayID","typedOutput","display_id","outputIndex","count","immutableOutput","deleteCellFromState","defaultDocument","add","setNotebookCheckpoint","updatedContent","currState","kp","curIndex","findIndex","foundId","curCellType","nextIndex","createCellIfUndefined","max","oldIndex","newIndex","destinationId","above","updatedOutputs","kernelInfo","field","deleteIn","copiedCell","pasteAfter","from","nextState","mergeIn","changeContentNameAction","fetchContentAction","launchKernelAction","fetchContentFulfilledAction","dummyRecords","sorted","aRef","bRef","immutableNotebook","changeFilenameAction","contentRecord","saveFulfilledAction","cellAction","fileAction","dist","typedAction","makeKernelInfoRecord","kernelspecs_kernelspecs","delete","src_core","reducers_src_namespaceObject","epics_src_namespaceObject"],"mappings":"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BF,EAAAC,EAAAC,EAAA,qBC0DiC,sBD1DjCF,EAAAC,EAAAC,EAAA,qBCsEkC,uBDtElCF,EAAAC,EAAAC,EAAA,qBCgFkC,uBDhFlCF,EAAAC,EAAAC,EAAA,sBCyF0B,eDzF1BF,EAAAC,EAAAC,EAAA,sBCmG6C,kCDnG7CF,EAAAC,EAAAC,EAAA,sBC4G4C,iCD5G5CF,EAAAC,EAAAC,EAAA,qBCqH6B,kBDrH7BF,EAAAC,EAAAC,EAAA,qBC8HiC,sBD9HjCF,EAAAC,EAAAC,EAAA,qBCoI0B,eDpI1BF,EAAAC,EAAAC,EAAA,qBC6I+B,oBD7I/BF,EAAAC,EAAAC,EAAA,qBCuJmC,wBDvJnCF,EAAAC,EAAAC,EAAA,qBCgKiC,sBDhKjCF,EAAAC,EAAAC,EAAA,qBCyKsC,2BDzKtCF,EAAAC,EAAAC,EAAA,qBCkL0C,+BDlL1CF,EAAAC,EAAAC,EAAA,qBC2LwB,aD3LxBF,EAAAC,EAAAC,EAAA,qBCiMyB,cDjMzBF,EAAAC,EAAAC,EAAA,sBCuM0B,eDvM1BF,EAAAC,EAAAC,EAAA,qBC6MgC,qBD7MhCF,EAAAC,EAAAC,EAAA,sBCuNkC,uBDvNlCF,EAAAC,EAAAC,EAAA,sBCiOsC,2BDjOtCF,EAAAC,EAAAC,EAAA,qBElBmC,6BFkBnCF,EAAAC,EAAAC,EAAA,qBEPE,uCFOFF,EAAAC,EAAAC,EAAA,qBEG0C,oCFH1CF,EAAAC,EAAAC,EAAA,qBEe6B,uBFf7BF,EAAAC,EAAAC,EAAA,qBE0BuC,iCF1BvCF,EAAAC,EAAAC,EAAA,qBEuCoC,8BFvCpCF,EAAAC,EAAAC,EAAA,qBEmDgC,0BFnDhCF,EAAAC,EAAAC,EAAA,qBE2DuC,iCF3DvCF,EAAAC,EAAAC,EAAA,qBEiE0C,oCFjE1CF,EAAAC,EAAAC,EAAA,sBEuEoB,SFvEpBF,EAAAC,EAAAC,EAAA,sBE+EuB,YF/EvBF,EAAAC,EAAAC,EAAA,sBEwF2B,gBFxF3BF,EAAAC,EAAAC,EAAA,sBEkG8B,mBFlG9BF,EAAAC,EAAAC,EAAA,sBE4G4B,iBF5G5BF,EAAAC,EAAAC,EAAA,sBEuHgC,qBFvHhCF,EAAAC,EAAAC,EAAA,sBGTo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","file":"15-4d9c6c33b2f2717c9d74.bundle.js","sourcesContent":["/**\n * @module selectors\n */\nimport * as commutable from \"@nteract/commutable\";\nimport * as Immutable from \"immutable\";\n\nimport { CellId, ImmutableCell } from \"@nteract/commutable\";\n\n// All these selectors expect a NotebookModel as the top level state\nimport { NotebookModel } from \"@nteract/types\";\nimport { createSelector } from \"reselect\";\n\n/**\n * Returns the cellMap within a given NotebookModel. Returns an empty\n * Immutable.Map if no cellMap exists in the NotebookModel.\n *\n * @param   model   The notebook model to extract the cell map from\n *\n * @returns         The cell map within the notebook or an empty map\n */\nexport const cellMap = (model: NotebookModel) =>\n  model.notebook.get(\"cellMap\", Immutable.Map<CellId, ImmutableCell>());\n\n/**\n * Returns the cell within a notebook with a particular ID. Returns\n * undefined if no cell with that ID is found in the model\n *\n * @param   model           The notebook model to extract the cell from\n * @param   { id: CellId }  The ID of the cell to extract\n *\n * @returns                 Undefined or a cell with the given ID\n */\nexport const cellById = (model: NotebookModel, { id }: { id: CellId }) =>\n  cellMap(model).get(id);\n\n/**\n * Returns the cell order within a notebook. Returns an empty list if the\n * notebook contains no cellOrder.\n *\n * @param   model   The notebook model to extract the cell order list from\n *\n * @returns         The cell order within a notebook or an empty list\n */\nexport const cellOrder = (model: NotebookModel): Immutable.List<CellId> =>\n  model.notebook.get(\"cellOrder\", Immutable.List<CellId>());\n\n/**\n * Returns the ID of the focused cell within a notebook.\n *\n * @param   model   The notebook to extract the focused cell from\n *\n * @returns         The ID of the focused cell\n */\nexport const cellFocused = (model: NotebookModel): CellId | null | undefined =>\n  model.cellFocused;\n\n/**\n * Returns the CellId of the cell with the currently focused editor within\n * the notebook.\n *\n * @param   model   The notebook to extract the focused editor from\n *\n * @returns         The ID of the cell with the currently focused editor\n */\nexport const editorFocusedId = (\n  model: NotebookModel\n): CellId | null | undefined => model.editorFocused;\n\n/**\n * Returns a list of CellIds below the currently focused cell in a notebook.\n *\n * @param   model   The notebook to extract the code cells from\n *\n * @returns         The IDs of cells below the currently focused cell\n */\nexport const codeCellIdsBelow = (\n  model: NotebookModel\n): Immutable.List<CellId> => {\n  const cellFocused = model.cellFocused;\n  if (!cellFocused) {\n    // NOTE: if there is no focused cell, this runs none of the cells\n    return Immutable.List<CellId>();\n  }\n  const cellOrder = model.notebook.get(\"cellOrder\", Immutable.List<CellId>());\n\n  const index = cellOrder.indexOf(cellFocused);\n  return cellOrder\n    .skip(index)\n    .filter(\n      (id: string) =>\n        model.notebook.getIn([\"cellMap\", id, \"cell_type\"]) === \"code\"\n    );\n};\n\n/**\n * Returns the CellIds of the hidden cells in a notebook.\n */\nexport const hiddenCellIds = createSelector(\n  [cellMap, cellOrder],\n  (cellMap, cellOrder) => {\n    return cellOrder.filter(id =>\n      cellMap.getIn([id, \"metadata\", \"inputHidden\"])\n    );\n  }\n);\n\n/**\n * Returns the CellIds of the cells with hidden outputs in the\n * notebook.\n */\nexport const idsOfHiddenOutputs = createSelector(\n  [cellMap, cellOrder],\n  (cellMap, cellOrder): Immutable.List<CellId> => {\n    if (!cellOrder || !cellMap) {\n      return Immutable.List<CellId>();\n    }\n\n    return cellOrder.filter(CellId =>\n      cellMap.getIn([CellId, \"metadata\", \"outputHidden\"])\n    );\n  }\n);\n\n/**\n * Returns a transient version of the cell map within a notebook. This cell\n * map is a copy of the original cell map that is transient.\n *\n * @param   model   The notebook to extract the transient cell map from\n *\n * @returns         The tranisent cell map\n */\nexport const transientCellMap = (model: NotebookModel) =>\n  model.transient.get(\"cellMap\", Immutable.Map());\n\n/**\n * Returns the CellIds of the code cells within a notebook.\n */\nexport const codeCellIds = createSelector(\n  [cellMap, cellOrder],\n  (cellMap, cellOrder) => {\n    return cellOrder.filter(id => cellMap.getIn([id, \"cell_type\"]) === \"code\");\n  }\n);\n\n/**\n * Returns the metadata of a notebook. Returns an empty Immutable.Map if\n * no metadata is defined.\n *\n * @param   model   The notebook to extract the metadata from\n *\n * @returns         An empty Map or a Map containing the metadata of the notebook\n */\nexport const metadata = (model: NotebookModel) =>\n  model.notebook.get(\"metadata\", Immutable.Map());\n\n/**\n * Returns the GitHub username the user has authenticated through.\n */\nexport const githubUsername = createSelector(\n  [metadata],\n  metadata => metadata.get(\"github_username\", null)\n);\n\n/**\n * Returns the ID of the GitHub Gist the notebook has been recently published\n * to.\n */\nexport const gistId = createSelector(\n  [metadata],\n  metadata => metadata.get(\"gist_id\", null)\n);\n\nexport const notebook = (model: NotebookModel) => model.notebook;\nexport const savedNotebook = (model: NotebookModel) => model.savedNotebook;\n\n/**\n * Returns true if the notebook differs from the version saved to disk, and\n * false otherwise.\n */\nexport const isDirty = createSelector(\n  notebook,\n  savedNotebook,\n  (original, disk) => !Immutable.is(original, disk)\n);\n\n/**\n * Returns the JSON representation of the notebook.\n */\nexport const asJSON = createSelector(\n  [notebook],\n  notebook => {\n    return commutable.toJS(notebook);\n  }\n);\n\n/**\n * Returns the stringified version of a notebook. Returns an empty string\n * if no notebookJS exists. Note that this is called asString instead of\n * toString so that REPLs don't think of this as the representation of this\n * module.\n */\nexport const asString = createSelector(\n  [asJSON],\n  notebookJS => {\n    if (notebookJS) {\n      return commutable.stringifyNotebook(notebookJS);\n    }\n    return \"\";\n  }\n);\n\nconst CODE_MIRROR_MODE_DEFAULT = \"text\";\n\n/**\n * Returns the CodeMirror mode of the current notebook. This value can be used\n * to initialize the `mode` option in CodeMirror. Returns `text` if no mode\n * is set.\n */\nexport const codeMirrorMode = createSelector(\n  metadata,\n  metadata =>\n    metadata.getIn([\"language_info\", \"codemirror_mode\"]) ||\n    metadata.getIn([\"kernel_info\", \"language\"]) ||\n    metadata.getIn([\"kernelspec\", \"language\"]) ||\n    CODE_MIRROR_MODE_DEFAULT\n);\n\n/**\n * Returns the display name of the kernel the notebook is currently\n * running against.\n */\nexport const displayName = createSelector(\n  [metadata],\n  metadata => metadata.getIn([\"kernelspec\", \"display_name\"], \"\")\n);\n","/**\n * @module selectors\n */\nimport { createSelector } from \"reselect\";\n\nimport {\n  AppState,\n  ContentRef,\n  JupyterHostRecord,\n  KernelRef,\n  KernelspecsByRefRecord\n} from \"@nteract/types\";\n\nimport { ServerConfig } from \"rx-jupyter\";\n\nimport * as notebook from \"./notebook\";\n\n// Export sub-selectors (those that operate on contents models for instance)\nexport { notebook };\n\nfunction identity<T>(thing: T): T {\n  return thing;\n}\n\n/**\n * Creates a server configuration from details about a given Jupyter host.\n *\n * @param   host    The Jupyter host we are connected to\n *\n * @returns         An object contain the endpoint, token\n */\nexport const serverConfig = (host: JupyterHostRecord): ServerConfig => {\n  return {\n    endpoint: host.origin + host.basePath,\n    crossDomain: host.crossDomain ? host.crossDomain : undefined,\n    token: host.token ? host.token : undefined,\n    ajaxOptions: host.ajaxOptions ? host.ajaxOptions : undefined,\n    wsProtocol: host.wsProtocol ? host.wsProtocol : undefined\n  };\n};\n\n/**\n * Returns the theme of the notebook. Returns \"light\" if no theme is defined.\n *\n * @param   state   The state of the nteract application\n *\n * @returns         The theme of the nteract application\n */\nexport const userTheme = (state: AppState): string =>\n  state.config.get(\"theme\", \"light\");\n\n/**\n * Returns the version of the nteract application.\n */\nexport const appVersion = createSelector(\n  (state: AppState) => state.app.version,\n  identity\n);\n\n// Quick memoized host and kernel selection.\n//\n// Intended to be useful for a core app and be future proof for when we have\n// both refs and selected/current hosts and kernels\n/**\n * Returns the host the nteract application is connected to.\n */\nexport const currentHost = createSelector(\n  (state: AppState) => state.app.host,\n  identity\n);\n\n/**\n * Returns the contents, such as notebooks and files, that are currently accessible\n * within the current notebook application.\n *\n * @param   state   The state of the nteract application\n *\n * @returns         The contents in scope by the nteract application by ID\n */\nexport const contentByRef = (state: AppState) =>\n  state.core.entities.contents.byRef;\n\n/**\n *\n * @param   state                       The state of the nteract application\n * @param   { contentRef: ContentRef }  A reference to the ContentRecord to retrieve\n *\n * @returns                             The ContentRecord for the given ref\n */\nexport const content = (\n  state: AppState,\n  { contentRef }: { contentRef: ContentRef }\n) => contentByRef(state).get(contentRef);\n\nexport const transformsById = (state: AppState) =>\n  state.core.entities.transforms.byId;\n\nexport const displayOrder = (state: AppState) =>\n  state.core.entities.transforms.displayOrder;\n\nexport const transform = (state: AppState, { id }: { id: string }) =>\n  transformsById(state).get(id);\n\n/**\n * Returns the model within the ContenteRecrd specified by contentRef.\n * For example, if the ContentRecord is a reference to a notebook object,\n * the model would contain the NotebookModel.\n *\n * @param   state                       The state of the nteract application\n * @param   { contentRef: ContentRef }  A reference to the ContentRecord to retrieve\n *\n * @returns                             The model of the content under the current ref\n */\nexport const model = (\n  state: AppState,\n  { contentRef }: { contentRef: ContentRef }\n) => {\n  const content = contentByRef(state).get(contentRef);\n  if (!content) {\n    return null;\n  }\n  return content.model;\n};\n\n/**\n * Returns a ref to the kernel associated with a particular type of content.\n * Currently, this only support kernels associated with notebook contents.\n * Returns null if there are no contents or if the contents are not\n * a notebook.\n *\n * @param   state                       The state of the nteract application\n * @param   { contentRef: ContentRef }  A reference to the ContentRecord to retrieve\n *\n * @returns                             The kernel associated with a notebook\n */\nexport const kernelRefByContentRef = (\n  state: AppState,\n  ownProps: { contentRef: ContentRef }\n): KernelRef | null | undefined => {\n  const c = content(state, ownProps);\n  // TODO: When kernels can be associated on other content types, we'll\n  //      allow those too. For now, because of how flow works we have to\n  //      check the \"type\" field rather than try to check if `kernelRef` is\n  //      a property of the model. There might be some way though. 🤔\n  if (c && c.model && c.model.type === \"notebook\") {\n    return c.model.kernelRef;\n  }\n\n  return null;\n};\n\n/**\n * Returns a ref to the kernelspec of the kernel the nteract application\n * is currently connected to.\n *\n * @param   state   The state of the nteract application\n *\n * @returns         A ref to the kernelspec\n */\nexport const currentKernelspecsRef = (state: AppState) =>\n  state.core.currentKernelspecsRef;\n\n/**\n * Returns a Map of the kernelspecs associated with each kernelspec ref.\n *\n * @param state   The state of the nteract application\n *\n * @returns        An association between a kernelspec ref and the kernelspec\n */\nexport const kernelspecsByRef = (state: AppState) =>\n  state.core.entities.kernelspecs.byRef;\n\n/**\n * Returns the kernelspec of the kernel that the nteract application is\n * currently connected to.\n */\nexport const currentKernelspecs: (\n  state: AppState\n) => KernelspecsByRefRecord | null | undefined = createSelector(\n  currentKernelspecsRef,\n  kernelspecsByRef,\n  (ref, byRef) => (ref ? byRef.get(ref) : null)\n);\n\n/**\n * Returns a map of the available kernels keyed by the\n * kernel ref.\n *\n * @param   state   The state of the nteract application\n *\n * @returns         The kernels by ref\n */\nexport const kernelsByRef = (state: AppState) =>\n  state.core.entities.kernels.byRef;\n\n/**\n * Returns the kernel associated with a given KernelRef.\n *\n * @param   state                   The state of the nteract application\n * @param   { kernelRef: KernelRef} An object containing the KernelRef\n *\n * @returns                         The kernel for the KernelRef\n */\nexport const kernel = (\n  state: AppState,\n  { kernelRef }: { kernelRef?: KernelRef }\n) => {\n  return kernelRef ? kernelsByRef(state).get(kernelRef, null) : null;\n};\n\n/**\n * Returns the KernelRef for the kernel the nteract application is currently\n * connected to.\n *\n * @param   state   The state of the nteract application\n *\n * @returns         The KernelRef for the kernel\n */\nexport const currentKernelRef = (state: AppState) => state.core.kernelRef;\n\n/**\n * Returns the kernelspec of the kernel that we are currently connected to.\n * Returns null if there is no kernel.\n */\nexport const currentKernel = createSelector(\n  currentKernelRef,\n  kernelsByRef,\n  (kernelRef, byRef) => (kernelRef ? byRef.get(kernelRef) : null)\n);\n\n/**\n * Returns the type of the kernel the nteract application is currently\n * connected to. Returns `null` if there is no kernel.\n */\nexport const currentKernelType = createSelector(\n  [currentKernel],\n  kernel => {\n    if (kernel && kernel.type) {\n      return kernel.type;\n    }\n    return null;\n  }\n);\n\n/**\n * Returns the state of the kernel the nteract application is currently\n * connected to. Returns \"not connected\" if there is no kernel.\n */\nexport const currentKernelStatus = createSelector(\n  [currentKernel],\n  kernel => {\n    if (kernel && kernel.status) {\n      return kernel.status;\n    }\n    return \"not connected\";\n  }\n);\n\n/**\n * Returns the type of host the nteract application is currently connected\n * to. This is set to \"jupyter\" by default.\n */\nexport const currentHostType = createSelector(\n  [currentHost],\n  host => {\n    if (host && host.type) {\n      return host.type;\n    }\n    return null;\n  }\n);\n\n/**\n * Returns whether or not we are currently connected to the kernel through\n * a ZeroMQ connection.\n */\nexport const isCurrentKernelZeroMQ = createSelector(\n  [currentHostType, currentKernelType],\n  (hostType, kernelType) => {\n    return hostType === \"local\" && kernelType === \"zeromq\";\n  }\n);\n\n/**\n * Returns true if the host we are currently connected to is a Jupyter\n * kernel.\n */\nexport const isCurrentHostJupyter = createSelector(\n  [currentHostType],\n  hostType => hostType === \"jupyter\"\n);\n\n/**\n * Returns whether or not we are currently connected to the kernel through\n * a websocket connection.\n */\nexport const isCurrentKernelJupyterWebsocket = createSelector(\n  [currentHostType, currentKernelType],\n  (hostType, kernelType) => {\n    return hostType === \"jupyter\" && kernelType === \"websocket\";\n  }\n);\n\n/**\n * Returns the Jupyter comms data for a given nteract application.\n */\nexport const comms = createSelector(\n  (state: AppState) => state.comms,\n  identity\n);\n\n/**\n * Returns the comms models that are stored in the nteract application state.\n */\nexport const models = createSelector(\n  [comms],\n  comms => comms.get(\"models\")\n);\n\n/**\n * Returns the filepath for the content identified by a given ContentRef.\n *\n * @param   state     The state of the nteract application\n * @param   ownProps  An object containing the ContentRef\n *\n * @returns           The filepath for the content\n */\nexport const filepath = (\n  state: AppState,\n  ownProps: { contentRef: ContentRef }\n): string | null => {\n  const c = content(state, ownProps);\n  if (!c) {\n    return null;\n  }\n  return c.filepath;\n};\n\n/**\n * Returns the type of modal, such as the about modal, that is currently open\n * in the nteract application.\n */\nexport const modalType = createSelector(\n  (state: AppState) => state.core.entities.modals.modalType,\n  identity\n);\n\n/**\n * Returns the current theme of the notebook application. Defaults to \"light.\"\n */\nexport const currentTheme: (\n  state: AppState\n) => \"light\" | \"dark\" = createSelector(\n  (state: AppState) => state.config.get(\"theme\", \"light\"),\n  identity\n);\n\n/**\n * Returns the notification system currently configured on the nteract application.\n * This can be used to display informational or error-related alerts to the user.\n */\nexport const notificationSystem = createSelector(\n  (state: AppState) => state.app.get(\"notificationSystem\"),\n  identity\n);\n","/**\n * @module actions\n */\nimport {\n  CellId,\n  ImmutableJSONType,\n  JSONObject,\n  MediaBundle,\n  OnDiskOutput\n} from \"@nteract/commutable\";\n\nimport {\n  ContentRef,\n  HostRecordProps,\n  HostRef,\n  KernelRef,\n  PayloadMessage\n} from \"@nteract/types\";\nimport { HostRecord } from \"@nteract/types\";\nimport { LanguageInfoMetadata } from \"@nteract/types\";\n\nimport { System as NotificationSystem } from \"react-notification-system\";\n\nexport * from \"./cells\";\nexport * from \"./contents\";\nexport * from \"./kernels\";\nexport * from \"./kernelspecs\";\n\nexport interface ErrorAction<T extends string> {\n  type: T;\n  payload: Error;\n  error: true;\n}\n\nexport const OPEN_MODAL = \"CORE/OPEN_MODAL\";\nexport interface OpenModal {\n  type: \"CORE/OPEN_MODAL\";\n  payload: {\n    modalType: string;\n  };\n}\n\nexport const CLOSE_MODAL = \"CORE/CLOSE_MODAL\";\nexport interface CloseModal {\n  type: \"CORE/CLOSE_MODAL\";\n}\n\nexport const ADD_HOST = \"CORE/ADD_HOST\";\nexport interface AddHost {\n  type: \"CORE/ADD_HOST\";\n  payload: { hostRef: HostRef; host: HostRecord };\n}\n\nexport const REMOVE_HOST = \"CORE/REMOVE_HOST\";\nexport interface RemoveHost {\n  type: \"CORE/REMOVE_HOST\";\n  payload: { hostRef: HostRef };\n}\n\nexport const SET_APP_HOST = \"SET_APP_HOST\";\nexport interface SetAppHostAction {\n  type: \"SET_APP_HOST\";\n  payload: HostRecord;\n}\n\nexport const CHANGE_FILENAME = \"CHANGE_FILENAME\";\nexport interface ChangeFilenameAction {\n  type: \"CHANGE_FILENAME\";\n  payload: {\n    filepath?: string;\n    contentRef: ContentRef;\n  };\n}\n\nexport const APPEND_OUTPUT = \"APPEND_OUTPUT\";\nexport interface AppendOutput {\n  type: \"APPEND_OUTPUT\";\n  payload: {\n    id: CellId;\n    output: OnDiskOutput;\n    contentRef: ContentRef;\n  };\n}\n\nexport const UPDATE_DISPLAY = \"UPDATE_DISPLAY\";\nexport interface UpdateDisplay {\n  type: \"UPDATE_DISPLAY\";\n  payload: {\n    content: {\n      data: MediaBundle;\n      metadata: JSONObject;\n      transient: { display_id: string };\n    };\n    contentRef: ContentRef;\n  };\n}\n\nexport const UPDATE_DISPLAY_FAILED = \"UPDATE_DISPLAY_FAILED\";\nexport interface UpdateDisplayFailed {\n  type: \"UPDATE_DISPLAY_FAILED\";\n  payload: {\n    error: Error;\n    contentRef: ContentRef;\n  };\n  error: true;\n}\n\nexport const ACCEPT_PAYLOAD_MESSAGE = \"ACCEPT_PAYLOAD_MESSAGE\";\nexport interface AcceptPayloadMessage {\n  type: \"ACCEPT_PAYLOAD_MESSAGE\";\n  payload: {\n    id: CellId;\n    payload: PayloadMessage;\n    contentRef: ContentRef;\n  };\n}\n\nexport const SET_LANGUAGE_INFO = \"SET_LANGUAGE_INFO\";\nexport interface SetLanguageInfo {\n  type: \"SET_LANGUAGE_INFO\";\n  payload: {\n    langInfo: LanguageInfoMetadata;\n    kernelRef: KernelRef;\n    contentRef: ContentRef;\n  };\n}\n\nexport const OVERWRITE_METADATA_FIELD = \"OVERWRITE_METADATA_FIELD\";\nexport interface OverwriteMetadataField {\n  type: \"OVERWRITE_METADATA_FIELD\";\n  payload: {\n    field: string;\n    value: any;\n    contentRef: ContentRef;\n  };\n}\n\nexport const DELETE_METADATA_FIELD = \"DELETE_METADATA_FIELD\";\nexport interface DeleteMetadataField {\n  type: \"DELETE_METADATA_FIELD\";\n  payload: {\n    field: string;\n    contentRef: ContentRef;\n  };\n}\n\nexport const REGISTER_COMM_TARGET = \"REGISTER_COMM_TARGET\";\nexport interface RegisterCommTargetAction {\n  type: \"REGISTER_COMM_TARGET\";\n  name: string;\n  handler: string;\n}\n\nexport const COMM_OPEN = \"COMM_OPEN\";\nexport interface CommOpenAction {\n  type: \"COMM_OPEN\";\n  target_name: string;\n  target_module: string;\n  data: any;\n  comm_id: string;\n}\n\nexport const COMM_MESSAGE = \"COMM_MESSAGE\";\nexport interface CommMessageAction {\n  type: \"COMM_MESSAGE\";\n  data: any;\n  comm_id: string;\n}\n\nexport const SET_CONFIG_AT_KEY = \"SET_CONFIG_AT_KEY\";\nexport interface SetConfigAction<T> {\n  type: \"SET_CONFIG_AT_KEY\";\n  payload: {\n    key: string;\n    value: T;\n  };\n}\n\nexport const MERGE_CONFIG = \"MERGE_CONFIG\";\nexport interface MergeConfigAction {\n  type: \"MERGE_CONFIG\";\n  payload: {\n    config: { [key: string]: any };\n  };\n}\n\nexport const LOAD_CONFIG = \"LOAD_CONFIG\";\nexport interface LoadConfigAction {\n  type: \"LOAD_CONFIG\";\n}\n\nexport const SAVE_CONFIG = \"SAVE_CONFIG\";\nexport interface SaveConfigAction {\n  type: \"SAVE_CONFIG\";\n}\n\nexport const DONE_SAVING_CONFIG = \"DONE_SAVING_CONFIG\";\nexport interface DoneSavingConfigAction {\n  type: \"DONE_SAVING_CONFIG\";\n}\n\nexport const TOGGLE_OUTPUT_EXPANSION = \"TOGGLE_OUTPUT_EXPANSION\";\nexport interface ToggleCellExpansion {\n  type: \"TOGGLE_OUTPUT_EXPANSION\";\n  payload: {\n    id: CellId;\n    contentRef: ContentRef;\n  };\n}\n\nexport const SET_EXECUTION_STATE = \"SET_EXECUTION_STATE\";\nexport interface SetExecutionStateAction {\n  type: \"SET_EXECUTION_STATE\";\n  payload: {\n    kernelStatus: string;\n    kernelRef: KernelRef;\n  };\n}\n\nexport const SET_NOTIFICATION_SYSTEM = \"SET_NOTIFICATION_SYSTEM\";\nexport interface SetNotificationSystemAction {\n  type: \"SET_NOTIFICATION_SYSTEM\";\n  payload: {\n    notificationSystem: NotificationSystem;\n  };\n}\n\nexport const SET_GITHUB_TOKEN = \"SET_GITHUB_TOKEN\";\nexport interface SetGithubTokenAction {\n  type: \"SET_GITHUB_TOKEN\";\n  payload: {\n    githubToken: string;\n  };\n}\n\nexport const PUBLISH_GIST = \"CORE/PUBLISH_GIST\";\nexport interface PublishGist {\n  type: \"CORE/PUBLISH_GIST\";\n  payload: {\n    contentRef: ContentRef;\n  };\n}\n\nexport const ADD_TRANSFORM = \"ADD_TRANSFORM\";\nexport interface AddTransform {\n  type: \"ADD_TRANSFORM\";\n  payload: {\n    mediaType: string;\n    component: any;\n  };\n}\n\nexport const REMOVE_TRANSFORM = \"REMOVE_TRANSFORM\";\nexport interface RemoveTransform {\n  type: \"REMOVE_TRANSFORM\";\n  payload: {\n    mediaType: string;\n    component: any;\n  };\n}\n\nexport const ERROR = \"CORE/ERROR\";\nexport type CoreError = ErrorAction<\"CORE/ERROR\">;\n","/**\n * @module actions\n */\nimport { CellId, CellType, JSONObject } from \"@nteract/commutable\";\nimport { ContentRef } from \"@nteract/types\";\n\nexport const TOGGLE_TAG_IN_CELL = \"CORE/TOGGLE_TAG_IN_CELL\";\nexport interface ToggleTagInCell {\n  // expectation is that if a tag doesn't exist, it will set it\n  // if the tag is already in the collection of tags it will delete it\n  type: \"CORE/TOGGLE_TAG_IN_CELL\";\n  payload: {\n    id: CellId;\n    tag: string;\n    contentRef: ContentRef;\n  };\n}\n\nexport const SET_IN_CELL = \"SET_IN_CELL\";\nexport interface SetInCell<T> {\n  type: \"SET_IN_CELL\";\n  payload: {\n    id: CellId;\n    path: string[];\n    value: T;\n    contentRef: ContentRef;\n  };\n}\n\nexport const MOVE_CELL = \"MOVE_CELL\";\nexport interface MoveCell {\n  type: \"MOVE_CELL\";\n  payload: {\n    id: CellId;\n    destinationId: CellId;\n    above: boolean;\n    contentRef: ContentRef;\n  };\n}\n\nexport const DELETE_CELL = \"DELETE_CELL\";\nexport interface DeleteCell {\n  type: \"DELETE_CELL\";\n  payload: {\n    id?: CellId;\n    contentRef: ContentRef;\n  };\n}\n\nexport const CREATE_CELL_BELOW = \"CREATE_CELL_BELOW\";\nexport interface CreateCellBelow {\n  type: \"CREATE_CELL_BELOW\";\n  payload: {\n    id?: CellId;\n    cellType: CellType;\n    source: string;\n    contentRef: ContentRef;\n  };\n}\n\nexport const CREATE_CELL_ABOVE = \"CREATE_CELL_ABOVE\";\nexport interface CreateCellAbove {\n  type: \"CREATE_CELL_ABOVE\";\n  payload: {\n    cellType: CellType;\n    id?: CellId;\n    contentRef: ContentRef;\n  };\n}\n\n// Deprecation Warning: This action type is being deprecated. Please use DELETE_CELL instead\nexport const REMOVE_CELL = \"REMOVE_CELL\";\nexport interface RemoveCell {\n  type: \"REMOVE_CELL\";\n  payload: {\n    id?: CellId;\n    contentRef: ContentRef;\n  };\n}\n\n// DEPRECATION WARNING: This action type is being deprecated. Please use CREATE_CELL_BELOW instead\nexport const CREATE_CELL_AFTER = \"CREATE_CELL_AFTER\";\nexport interface CreateCellAfter {\n  type: \"CREATE_CELL_AFTER\";\n  payload: {\n    id?: CellId;\n    cellType: CellType;\n    source: string;\n    contentRef: ContentRef;\n  };\n}\n\n// DEPRECATION WARNING: This action type is being deprecated. Please use CREATE_CELL_ABOVE instead\nexport const CREATE_CELL_BEFORE = \"CREATE_CELL_BEFORE\";\nexport interface CreateCellBefore {\n  type: \"CREATE_CELL_BEFORE\";\n  payload: {\n    cellType: CellType;\n    id?: CellId;\n    contentRef: ContentRef;\n  };\n}\n\nexport const CREATE_CELL_APPEND = \"CREATE_CELL_APPEND\";\nexport interface CreateCellAppend {\n  type: \"CREATE_CELL_APPEND\";\n  payload: {\n    cellType: CellType;\n    contentRef: ContentRef;\n  };\n}\n\nexport const UNHIDE_ALL = \"UNHIDE_ALL\";\nexport interface UnhideAll {\n  type: \"UNHIDE_ALL\";\n  payload: {\n    inputHidden: boolean;\n    outputHidden: boolean;\n    contentRef: ContentRef;\n  };\n}\n\nexport const TOGGLE_CELL_OUTPUT_VISIBILITY = \"TOGGLE_CELL_OUTPUT_VISIBILITY\";\nexport interface ToggleCellOutputVisibility {\n  type: \"TOGGLE_CELL_OUTPUT_VISIBILITY\";\n  payload: {\n    id?: CellId;\n    contentRef: ContentRef;\n  };\n}\n\nexport const TOGGLE_CELL_INPUT_VISIBILITY = \"TOGGLE_CELL_INPUT_VISIBILITY\";\nexport interface ToggleCellInputVisibility {\n  type: \"TOGGLE_CELL_INPUT_VISIBILITY\";\n  payload: {\n    id?: CellId;\n    contentRef: ContentRef;\n  };\n}\n\nexport const CLEAR_OUTPUTS = \"CLEAR_OUTPUTS\";\nexport interface ClearOutputs {\n  type: \"CLEAR_OUTPUTS\";\n  payload: {\n    id?: CellId;\n    contentRef: ContentRef;\n  };\n}\n\nexport const CLEAR_ALL_OUTPUTS = \"CLEAR_ALL_OUTPUTS\";\nexport interface ClearAllOutputs {\n  type: \"CLEAR_ALL_OUTPUTS\";\n  payload: { contentRef: ContentRef };\n}\n\nexport const FOCUS_CELL = \"FOCUS_CELL\";\nexport interface FocusCell {\n  type: \"FOCUS_CELL\";\n  payload: {\n    id: CellId;\n    contentRef: ContentRef;\n  };\n}\n\nexport const FOCUS_NEXT_CELL = \"FOCUS_NEXT_CELL\";\nexport interface FocusNextCell {\n  type: \"FOCUS_NEXT_CELL\";\n  payload: {\n    id?: CellId;\n    createCellIfUndefined: boolean;\n    contentRef: ContentRef;\n  };\n}\n\nexport const FOCUS_PREVIOUS_CELL = \"FOCUS_PREVIOUS_CELL\";\nexport interface FocusPreviousCell {\n  type: \"FOCUS_PREVIOUS_CELL\";\n  payload: {\n    id?: CellId;\n    contentRef: ContentRef;\n  };\n}\n\nexport const FOCUS_CELL_EDITOR = \"FOCUS_CELL_EDITOR\";\nexport interface FocusCellEditor {\n  type: \"FOCUS_CELL_EDITOR\";\n  payload: {\n    id?: CellId;\n    contentRef: ContentRef;\n  };\n}\n\nexport const FOCUS_NEXT_CELL_EDITOR = \"FOCUS_NEXT_CELL_EDITOR\";\nexport interface FocusNextCellEditor {\n  type: \"FOCUS_NEXT_CELL_EDITOR\";\n  payload: {\n    id?: CellId;\n    contentRef: ContentRef;\n  };\n}\n\nexport const FOCUS_PREVIOUS_CELL_EDITOR = \"FOCUS_PREVIOUS_CELL_EDITOR\";\nexport interface FocusPreviousCellEditor {\n  type: \"FOCUS_PREVIOUS_CELL_EDITOR\";\n  payload: {\n    id?: CellId;\n    contentRef: ContentRef;\n  };\n}\n\nexport const CUT_CELL = \"CUT_CELL\";\nexport interface CutCell {\n  type: \"CUT_CELL\";\n  payload: { id?: CellId; contentRef: ContentRef };\n}\n\nexport const COPY_CELL = \"COPY_CELL\";\nexport interface CopyCell {\n  type: \"COPY_CELL\";\n  payload: { id?: CellId; contentRef: ContentRef };\n}\n\nexport const PASTE_CELL = \"PASTE_CELL\";\nexport interface PasteCell {\n  type: \"PASTE_CELL\";\n  payload: { contentRef: ContentRef };\n}\n\nexport const CHANGE_CELL_TYPE = \"CHANGE_CELL_TYPE\";\nexport interface ChangeCellType {\n  type: \"CHANGE_CELL_TYPE\";\n  payload: {\n    id?: CellId;\n    to: CellType;\n    contentRef: ContentRef;\n  };\n}\n\nexport const UPDATE_CELL_STATUS = \"UPDATE_CELL_STATUS\";\nexport interface UpdateCellStatus {\n  type: \"UPDATE_CELL_STATUS\";\n  payload: {\n    id: CellId;\n    status: string;\n    contentRef: ContentRef;\n  };\n}\n\nexport const UPDATE_OUTPUT_METADATA = \"UPDATE_OUTPUT_METADATA\";\nexport interface UpdateOutputMetadata {\n  type: \"UPDATE_OUTPUT_METADATA\";\n  payload: {\n    id: CellId;\n    contentRef: ContentRef;\n    metadata: JSONObject;\n    index: number;\n    mediaType: string;\n  };\n}\n","/**\n * @module actions\n */\nimport { ContentRef, KernelRef, KernelspecInfo } from \"@nteract/types\";\n\nexport const CHANGE_CONTENT_NAME = \"CORE/CHANGE_CONTENT_NAME\";\nexport interface ChangeContentName {\n  type: \"CORE/CHANGE_CONTENT_NAME\";\n  payload: {\n    contentRef: ContentRef;\n    filepath: string;\n    prevFilePath: string;\n  };\n}\n\nexport const CHANGE_CONTENT_NAME_FULFILLED =\n  \"CORE/CHANGE_CONTENT_NAME_FULFILLED\";\nexport interface ChangeContentNameFulfilled {\n  type: \"CORE/CHANGE_CONTENT_NAME_FULFILLED\";\n  payload: {\n    contentRef: ContentRef;\n    filepath: string;\n    prevFilePath: string;\n  };\n}\n\nexport const CHANGE_CONTENT_NAME_FAILED = \"CORE/CHANGE_CONTENT_NAME_FAILED\";\nexport interface ChangeContentNameFailed {\n  type: \"CORE/CHANGE_CONTENT_NAME_FAILED\";\n  payload: {\n    basepath: string;\n    contentRef: ContentRef;\n    error: Error;\n    filepath: string;\n    prevFilePath: string;\n  };\n}\n\nexport const FETCH_CONTENT = \"CORE/FETCH_CONTENT\";\nexport interface FetchContent {\n  type: \"CORE/FETCH_CONTENT\";\n  payload: {\n    filepath: string;\n    params: object;\n    kernelRef: KernelRef;\n    contentRef: ContentRef;\n  };\n}\n\nexport const FETCH_CONTENT_FULFILLED = \"CORE/FETCH_CONTENT_FULFILLED\";\nexport interface FetchContentFulfilled {\n  type: \"CORE/FETCH_CONTENT_FULFILLED\";\n  payload: {\n    filepath: string;\n    model: any; // literal response from API\n    kernelRef: KernelRef;\n    contentRef: ContentRef;\n    created?: Date | null;\n    lastSaved?: Date | null;\n  };\n}\n\nexport const FETCH_CONTENT_FAILED = \"CORE/FETCH_CONTENT_FAILED\";\nexport interface FetchContentFailed {\n  type: \"CORE/FETCH_CONTENT_FAILED\";\n  payload: {\n    filepath: string;\n    error: Error;\n    kernelRef: KernelRef;\n    contentRef: ContentRef;\n  };\n  error: true;\n}\n\nexport const DOWNLOAD_CONTENT = \"CORE/DOWNLOAD_CONTENT\";\nexport interface DownloadContent {\n  type: \"CORE/DOWNLOAD_CONTENT\";\n  payload: {\n    contentRef: ContentRef;\n  };\n}\n\nexport const DOWNLOAD_CONTENT_FAILED = \"CORE/DOWNLOAD_CONTENT_FAILED\";\nexport interface DownloadContentFailed {\n  type: \"CORE/DOWNLOAD_CONTENT_FAILED\";\n  payload: { contentRef: ContentRef };\n}\n\nexport const DOWNLOAD_CONTENT_FULFILLED = \"CORE/DOWNLOAD_CONTENT_FULFILLED\";\nexport interface DownloadContentFulfilled {\n  type: \"CORE/DOWNLOAD_CONTENT_FULFILLED\";\n  payload: { contentRef: ContentRef };\n}\n\nexport const SAVE = \"SAVE\";\nexport interface Save {\n  type: \"SAVE\";\n  payload: {\n    contentRef: ContentRef;\n  };\n}\n\nexport const SAVE_AS = \"SAVE_AS\";\nexport interface SaveAs {\n  type: \"SAVE_AS\";\n  payload: {\n    filepath: string;\n    contentRef: ContentRef;\n  };\n}\n\nexport const SAVE_FAILED = \"SAVE_FAILED\";\nexport interface SaveFailed {\n  type: \"SAVE_FAILED\";\n  payload: {\n    contentRef: ContentRef;\n    error: Error;\n  };\n  error: true;\n}\n\nexport const SAVE_FULFILLED = \"SAVE_FULFILLED\";\nexport interface SaveFulfilled {\n  type: \"SAVE_FULFILLED\";\n  payload: {\n    contentRef: ContentRef;\n    // Literal response from contents API, for use with\n    model: any;\n  };\n}\n\nexport const NEW_NOTEBOOK = \"NEW_NOTEBOOK\";\nexport interface NewNotebook {\n  type: \"NEW_NOTEBOOK\";\n  payload: {\n    cwd: string;\n    kernelSpec: KernelspecInfo;\n    kernelRef: KernelRef;\n    contentRef: ContentRef;\n  };\n}\n\nexport const UPDATE_FILE_TEXT = \"UPDATE_FILE_TEXT\";\nexport interface UpdateFileText {\n  type: \"UPDATE_FILE_TEXT\";\n  payload: {\n    text: string;\n    contentRef: ContentRef;\n  };\n}\n","/**\n * @module actions\n */\nimport { CellId } from \"@nteract/commutable\";\nimport { ExecuteRequest } from \"@nteract/messaging\";\nimport {\n  ContentRef,\n  KernelInfo,\n  KernelRef,\n  KernelspecInfo,\n  LocalKernelProps,\n  RemoteKernelProps\n} from \"@nteract/types\";\n\nexport const SEND_EXECUTE_REQUEST = \"SEND_EXECUTE_REQUEST\";\nexport interface SendExecuteRequest {\n  type: \"SEND_EXECUTE_REQUEST\";\n  payload: {\n    id: CellId;\n    message: ExecuteRequest;\n    contentRef: ContentRef;\n  };\n}\n\nexport const EXECUTE_CELL = \"EXECUTE_CELL\";\nexport interface ExecuteCell {\n  type: \"EXECUTE_CELL\";\n  payload: {\n    id: CellId;\n    contentRef: ContentRef;\n  };\n}\n\nexport const EXECUTE_ALL_CELLS = \"EXECUTE_ALL_CELLS\";\nexport interface ExecuteAllCells {\n  type: \"EXECUTE_ALL_CELLS\";\n  payload: {\n    contentRef: ContentRef;\n  };\n}\n\nexport const EXECUTE_ALL_CELLS_BELOW = \"EXECUTE_ALL_CELLS_BELOW\";\nexport interface ExecuteAllCellsBelow {\n  type: \"EXECUTE_ALL_CELLS_BELOW\";\n  payload: {\n    contentRef: ContentRef;\n  };\n}\n\nexport const EXECUTE_FOCUSED_CELL = \"EXECUTE_FOCUSED_CELL\";\nexport interface ExecuteFocusedCell {\n  type: \"EXECUTE_FOCUSED_CELL\";\n  payload: {\n    contentRef: ContentRef;\n  };\n}\n\nexport const EXECUTE_CANCELED = \"EXECUTE_CANCELED\";\nexport interface ExecuteCanceled {\n  type: \"EXECUTE_CANCELED\";\n  payload: {\n    id: CellId;\n    contentRef: ContentRef;\n  };\n}\n\nexport const EXECUTE_FAILED = \"EXECUTE_FAILED\";\nexport interface ExecuteFailed {\n  type: \"EXECUTE_FAILED\";\n  payload: {\n    error: Error;\n    contentRef?: ContentRef;\n  };\n  error: true;\n}\n\nexport const SET_KERNEL_INFO = \"CORE/SET_KERNEL_INFO\";\nexport interface SetKernelInfo {\n  type: \"CORE/SET_KERNEL_INFO\";\n  payload: {\n    kernelRef: KernelRef;\n    info: KernelInfo;\n  };\n}\n\nexport const INTERRUPT_KERNEL = \"INTERRUPT_KERNEL\";\nexport interface InterruptKernel {\n  type: \"INTERRUPT_KERNEL\";\n  payload: {\n    kernelRef?: KernelRef | null;\n  };\n}\n\nexport const INTERRUPT_KERNEL_SUCCESSFUL = \"INTERRUPT_KERNEL_SUCCESSFUL\";\nexport interface InterruptKernelSuccessful {\n  type: \"INTERRUPT_KERNEL_SUCCESSFUL\";\n  payload: {\n    kernelRef?: KernelRef | null;\n  };\n}\n\nexport const INTERRUPT_KERNEL_FAILED = \"INTERRUPT_KERNEL_FAILED\";\nexport interface InterruptKernelFailed {\n  type: \"INTERRUPT_KERNEL_FAILED\";\n  payload: {\n    error: Error;\n    kernelRef?: KernelRef | null;\n  };\n  error: true;\n}\n\nexport const KILL_KERNEL = \"KILL_KERNEL\";\nexport interface KillKernelAction {\n  type: \"KILL_KERNEL\";\n  payload: {\n    restarting: boolean;\n    kernelRef?: KernelRef | null;\n  };\n}\n\nexport const KILL_KERNEL_FAILED = \"KILL_KERNEL_FAILED\";\nexport interface KillKernelFailed {\n  type: \"KILL_KERNEL_FAILED\";\n  payload: {\n    error: Error;\n    kernelRef?: KernelRef | null;\n  };\n  error: true;\n}\n\nexport const KILL_KERNEL_SUCCESSFUL = \"KILL_KERNEL_SUCCESSFUL\";\nexport interface KillKernelSuccessful {\n  type: \"KILL_KERNEL_SUCCESSFUL\";\n  payload: {\n    kernelRef?: KernelRef | null;\n  };\n}\n\nexport const RESTART_KERNEL = \"RESTART_KERNEL\";\nexport type RestartKernelOutputHandling = \"None\" | \"Clear All\" | \"Run All\";\nexport interface RestartKernel {\n  type: \"RESTART_KERNEL\";\n  payload: {\n    outputHandling: RestartKernelOutputHandling;\n    kernelRef?: KernelRef | null;\n    contentRef: ContentRef;\n  };\n}\n\nexport const RESTART_KERNEL_FAILED = \"RESTART_KERNEL_FAILED\";\nexport interface RestartKernelFailed {\n  type: \"RESTART_KERNEL_FAILED\";\n  payload: {\n    error: Error;\n    kernelRef: KernelRef;\n    contentRef: ContentRef;\n  };\n  error: true;\n}\n\nexport const RESTART_KERNEL_SUCCESSFUL = \"RESTART_KERNEL_SUCCESSFUL\";\nexport interface RestartKernelSuccessful {\n  type: \"RESTART_KERNEL_SUCCESSFUL\";\n  payload: {\n    kernelRef: KernelRef;\n    contentRef: ContentRef;\n  };\n}\n\nexport const LAUNCH_KERNEL = \"LAUNCH_KERNEL\";\nexport interface LaunchKernelAction {\n  type: \"LAUNCH_KERNEL\";\n  payload: {\n    kernelRef: KernelRef;\n    kernelSpec: KernelspecInfo;\n    cwd: string;\n    selectNextKernel: boolean;\n    contentRef: ContentRef;\n  };\n}\n\nexport const CHANGE_KERNEL_BY_NAME = \"CHANGE_KERNEL_BY_NAME\";\nexport interface ChangeKernelByName {\n  type: \"CHANGE_KERNEL_BY_NAME\";\n  payload: {\n    kernelSpecName: string;\n    oldKernelRef?: KernelRef | null;\n    contentRef: ContentRef;\n  };\n}\n\nexport const LAUNCH_KERNEL_BY_NAME = \"LAUNCH_KERNEL_BY_NAME\";\nexport interface LaunchKernelByNameAction {\n  type: \"LAUNCH_KERNEL_BY_NAME\";\n  payload: {\n    kernelSpecName: string;\n    cwd: string;\n    kernelRef: KernelRef;\n    selectNextKernel: boolean;\n    contentRef: ContentRef;\n  };\n}\n\nexport const LAUNCH_KERNEL_FAILED = \"LAUNCH_KERNEL_FAILED\";\nexport interface LaunchKernelFailed {\n  type: \"LAUNCH_KERNEL_FAILED\";\n  payload: {\n    error: Error;\n    kernelRef?: KernelRef;\n    contentRef?: ContentRef;\n  };\n  error: true;\n}\n\nexport const LAUNCH_KERNEL_SUCCESSFUL = \"LAUNCH_KERNEL_SUCCESSFUL\";\nexport interface NewKernelAction {\n  type: \"LAUNCH_KERNEL_SUCCESSFUL\";\n  payload: {\n    kernel: LocalKernelProps | RemoteKernelProps;\n    kernelRef: KernelRef;\n    contentRef: ContentRef;\n    selectNextKernel: boolean;\n  };\n}\n\nexport const KERNEL_RAW_STDOUT = \"KERNEL_RAW_STDOUT\";\nexport interface KernelRawStdout {\n  type: \"KERNEL_RAW_STDOUT\";\n  payload: {\n    kernelRef: KernelRef;\n    text: string;\n  };\n}\n\nexport const KERNEL_RAW_STDERR = \"KERNEL_RAW_STDERR\";\nexport interface KernelRawStderr {\n  type: \"KERNEL_RAW_STDERR\";\n  payload: {\n    kernelRef: KernelRef;\n    text: string;\n  };\n}\n\nexport const DELETE_CONNECTION_FILE_FAILED = \"DELETE_CONNECTION_FILE_FAILED\";\nexport interface DeleteConnectionFileFailedAction {\n  type: \"DELETE_CONNECTION_FILE_FAILED\";\n  payload: {\n    error: Error;\n    kernelRef: KernelRef;\n  };\n  error: true;\n}\n\nexport const DELETE_CONNECTION_FILE_SUCCESSFUL =\n  \"DELETE_CONNECTION_FILE_SUCCESSFUL\";\nexport interface DeleteConnectionFileSuccessfulAction {\n  type: \"DELETE_CONNECTION_FILE_SUCCESSFUL\";\n  payload: {\n    kernelRef: KernelRef;\n  };\n}\n\nexport const SHUTDOWN_REPLY_SUCCEEDED = \"SHUTDOWN_REPLY_SUCCEEDED\";\nexport interface ShutdownReplySucceeded {\n  type: \"SHUTDOWN_REPLY_SUCCEEDED\";\n  payload: {\n    content: { restart: boolean };\n    kernelRef: KernelRef;\n  };\n}\n\nexport const SHUTDOWN_REPLY_TIMED_OUT = \"SHUTDOWN_REPLY_TIMED_OUT\";\nexport interface ShutdownReplyTimedOut {\n  type: \"SHUTDOWN_REPLY_TIMED_OUT\";\n  payload: {\n    error: Error;\n    kernelRef: KernelRef;\n  };\n  error: true;\n}\n","/**\n * @module actions\n */\nimport {\n  ContentRef,\n  HostRef,\n  KernelspecInfo,\n  KernelspecProps,\n  KernelspecsRef\n} from \"@nteract/types\";\n\nexport const FETCH_KERNELSPECS = \"CORE/FETCH_KERNELSPECS\";\nexport interface FetchKernelspecs {\n  type: \"CORE/FETCH_KERNELSPECS\";\n  payload: {\n    kernelspecsRef: KernelspecsRef;\n    hostRef: HostRef;\n  };\n}\n\nexport const FETCH_KERNELSPECS_FULFILLED = \"CORE/FETCH_KERNELSPECS_FULFILLED\";\nexport interface FetchKernelspecsFulfilled {\n  type: \"CORE/FETCH_KERNELSPECS_FULFILLED\";\n  payload: {\n    kernelspecsRef: KernelspecsRef;\n    hostRef: HostRef;\n    defaultKernelName: string;\n    kernelspecs: { [kernelspec: string]: KernelspecProps };\n  };\n}\n\nexport const FETCH_KERNELSPECS_FAILED = \"CORE/FETCH_KERNELSPECS_FAILED\";\nexport interface FetchKernelspecsFailed {\n  type: \"CORE/FETCH_KERNELSPECS_FAILED\";\n  payload: {\n    kernelspecsRef: KernelspecsRef;\n    error: object;\n  };\n}\n\n// \"legacy\" action that pushes kernelspec info back up\n// for the notebook document\nexport const SET_KERNELSPEC_INFO = \"SET_KERNELSPEC_INFO\";\nexport interface SetKernelspecInfo {\n  type: \"SET_KERNELSPEC_INFO\";\n  payload: {\n    kernelInfo: KernelspecInfo;\n    contentRef: ContentRef;\n  };\n}\n","/**\n * @module messaging\n */\nimport { PayloadMessage } from \"@nteract/types\";\nimport { from, Observable, Subscriber } from \"rxjs\";\nimport { filter, map, mergeMap } from \"rxjs/operators\";\nimport { executeRequest, message } from \"./messages\";\nimport { ExecuteRequest, JupyterMessage, MessageType } from \"./types\";\n\nexport * from \"./types\";\n\nexport interface CreateMessageFields extends Partial<JupyterMessage> {\n  header?: never;\n}\n\n// TODO: Deprecate\nexport function createMessage<MT extends MessageType>(\n  msg_type: MT,\n  fields: CreateMessageFields = {}\n): JupyterMessage<MT> {\n  return { ...message({ msg_type }), ...fields };\n}\n\n// TODO: Deprecate\nexport function createExecuteRequest(code: string = \"\"): ExecuteRequest {\n  return executeRequest(code, {});\n}\n\n/**\n * operator for getting all messages that declare their parent header as\n * parentMessage's header.\n *\n * @param parentMessage The parent message whose children we should fetch\n *\n * @returns A function that takes an Observable of kernel messages and returns\n * messages that are children of parentMessage.\n */\nexport function childOf(\n  parentMessage: JupyterMessage\n): (source: Observable<JupyterMessage<MessageType, any>>) => any {\n  return (source: Observable<JupyterMessage>) => {\n    const parentMessageID: string = parentMessage.header.msg_id;\n    return Observable.create((subscriber: Subscriber<JupyterMessage>) =>\n      source.subscribe(\n        msg => {\n          // strictly speaking, in order for the message to be a child of the\n          // parent message, it has to both be a message and have a parent to\n          // begin with\n          if (!msg || !msg.parent_header || !msg.parent_header.msg_id) {\n            if (process.env.DEBUG === \"true\") {\n              console.warn(\"no parent_header.msg_id on message\", msg);\n            }\n            return;\n          }\n\n          if (parentMessageID === msg.parent_header.msg_id) {\n            subscriber.next(msg);\n          }\n        },\n        // be sure to handle errors and completions as appropriate and\n        // send them along\n        err => subscriber.error(err),\n        () => subscriber.complete()\n      )\n    );\n  };\n}\n\n/**\n * ofMessageType is an Rx Operator that filters on msg.header.msg_type\n * being one of messageTypes.\n *\n * @param messageTypes The message types to filter on\n *\n * @returns An Observable containing only messages of the specified types\n */\nexport const ofMessageType = (\n  ...messageTypes: Array<string | [string]>\n): ((source: Observable<JupyterMessage>) => Observable<JupyterMessage>) => {\n  // Switch to the splat mode\n  if (messageTypes.length === 1 && Array.isArray(messageTypes[0])) {\n    return ofMessageType(...(messageTypes[0] as [string]));\n  }\n\n  return (source: Observable<JupyterMessage>) =>\n    Observable.create((subscriber: Subscriber<JupyterMessage>) =>\n      source.subscribe(\n        msg => {\n          if (!msg.header || !msg.header.msg_type) {\n            subscriber.error(new Error(\"no header.msg_type on message\"));\n            return;\n          }\n\n          if (messageTypes.indexOf(msg.header.msg_type) !== -1) {\n            subscriber.next(msg);\n          }\n        },\n        // be sure to handle errors and completions as appropriate and\n        // send them along\n        err => subscriber.error(err),\n        () => subscriber.complete()\n      )\n    );\n};\n\n/**\n * Create an object that adheres to the jupyter notebook specification.\n * http://jupyter-client.readthedocs.io/en/latest/messaging.html\n *\n * @param msg Message that has content which can be converted to nbformat\n *\n * @returns Message with the associated output type\n */\nexport function convertOutputMessageToNotebookFormat(msg: JupyterMessage) {\n  return {\n    ...msg.content,\n    output_type: msg.header.msg_type\n  };\n}\n\n/**\n * Convert raw Jupyter messages that are output messages into nbformat style\n * outputs\n *\n * > o$ = iopub$.pipe(\n *     childOf(originalMessage),\n *     outputs()\n *   )\n */\nexport const outputs = () => (source: Observable<JupyterMessage>) =>\n  source.pipe(\n    ofMessageType(\"execute_result\", \"display_data\", \"stream\", \"error\"),\n    map(convertOutputMessageToNotebookFormat)\n  );\n\n/**\n * Get all messages for updating a display output.\n */\nexport const updatedOutputs = () => (source: Observable<JupyterMessage>) =>\n  source.pipe(\n    ofMessageType(\"update_display_data\"),\n    map(msg => ({ ...msg.content, output_type: \"display_data\" }))\n  );\n\n/**\n * Get all the payload message content from an observable of jupyter messages\n *\n * > p$ = shell$.pipe(\n *     childOf(originalMessage),\n *     payloads()\n *   )\n */\nexport const payloads = () => (\n  source: Observable<JupyterMessage>\n): Observable<PayloadMessage> =>\n  source.pipe(\n    ofMessageType(\"execute_reply\"),\n    map(entry => entry.content.payload),\n    filter(Boolean),\n    mergeMap(p => from(p))\n  );\n\n/**\n * Get all the execution counts from an observable of jupyter messages\n */\nexport const executionCounts = () => (source: Observable<JupyterMessage>) =>\n  source.pipe(\n    ofMessageType(\"execute_input\"),\n    map(entry => entry.content.execution_count)\n  );\n\n/**\n * Get all statuses of all running kernels.\n */\nexport const kernelStatuses = () => (source: Observable<JupyterMessage>) =>\n  source.pipe(\n    ofMessageType(\"status\"),\n    map(entry => entry.content.execution_state)\n  );\n\nexport * from \"./messages\";\n","import * as React from \"react\";\n\nexport type SerializedEvent<T> =\n  | Partial<React.ClipboardEvent<T>>\n  | Partial<React.CompositionEvent<T>>\n  | Partial<React.KeyboardEvent<T>>\n  | Partial<React.ChangeEvent<T>>\n  | Partial<React.MouseEvent<T>>\n  | Partial<React.PointerEvent<T>>\n  | Partial<React.TouchEvent<T>>\n  | Partial<React.UIEvent<T>>\n  | Partial<React.WheelEvent<T>>\n  | Partial<React.AnimationEvent<T>>\n  | Partial<React.TransitionEvent<T>>\n  | {};\n\nexport function serializeEvent<T>(\n  event: React.SyntheticEvent<T>\n): SerializedEvent<T> {\n  switch (event.type) {\n    // Clipboard events\n    case \"copy\":\n    case \"cut\":\n    case \"paste\":\n      const clipboardEvent = event as React.ClipboardEvent<T>;\n      return { clipboardData: clipboardEvent.clipboardData };\n    // Composition events\n    case \"compositionend\":\n    case \"compositionstart\":\n    case \"compositionupdate\":\n      const compositionEvent = event as React.CompositionEvent<T>;\n      return { data: compositionEvent.data };\n    // Keyboard events\n    case \"keydown\":\n    case \"keypress\":\n    case \"keyup\":\n      const keyboardEvent = event as React.KeyboardEvent<T>;\n      return {\n        altKey: keyboardEvent.altKey,\n        charCode: keyboardEvent.charCode,\n        ctrlKey: keyboardEvent.ctrlKey,\n        key: keyboardEvent.key,\n        keyCode: keyboardEvent.keyCode,\n        locale: keyboardEvent.locale,\n        location: keyboardEvent.location,\n        metaKey: keyboardEvent.metaKey,\n        repeat: keyboardEvent.repeat,\n        shiftKey: keyboardEvent.shiftKey,\n        which: keyboardEvent.which\n      };\n    // Focus events\n    case \"focus\":\n    case \"blur\":\n      return {};\n    // Form events\n    case \"change\":\n    case \"input\":\n    case \"invalid\":\n    case \"submit\":\n      const formEvent = event as React.ChangeEvent<T>;\n      return { value: (formEvent.target as any).value };\n    // Mouse events\n    case \"click\":\n    case \"contextmenu\":\n    case \"doubleclick\":\n    case \"drag\":\n    case \"dragend\":\n    case \"dragenter\":\n    case \"dragexit\":\n    case \"dragleave\":\n    case \"dragover\":\n    case \"dragstart\":\n    case \"drop\":\n    case \"mousedown\":\n    case \"mouseenter\":\n    case \"mouseleave\":\n    case \"mousemove\":\n    case \"mouseout\":\n    case \"mouseover\":\n    case \"mouseup\":\n      const mouseEvent = event as React.MouseEvent<T>;\n      return {\n        altKey: mouseEvent.altKey,\n        button: mouseEvent.button,\n        buttons: mouseEvent.buttons,\n        clientX: mouseEvent.clientX,\n        clientY: mouseEvent.clientY,\n        ctrlKey: mouseEvent.ctrlKey,\n        metaKey: mouseEvent.metaKey,\n        pageX: mouseEvent.pageX,\n        pageY: mouseEvent.pageY,\n        screenX: mouseEvent.screenX,\n        screenY: mouseEvent.screenY,\n        shiftKey: mouseEvent.shiftKey\n      };\n    // Pointer events\n    case \"pointerdown\":\n    case \"pointermove\":\n    case \"pointerup\":\n    case \"pointercancel\":\n    case \"gotpointercapture\":\n    case \"lostpointercapture\":\n    case \"pointerenter\":\n    case \"pointerleave\":\n    case \"pointerover\":\n    case \"pointerout\":\n      const pointerEvent = event as React.PointerEvent<T>;\n      return {\n        pointerId: pointerEvent.pointerId,\n        width: pointerEvent.width,\n        height: pointerEvent.height,\n        pressure: pointerEvent.pressure,\n        tiltX: pointerEvent.tiltX,\n        tiltY: pointerEvent.tiltY,\n        pointerType: pointerEvent.pointerType,\n        isPrimary: pointerEvent.isPrimary\n      };\n    // Selection events\n    case \"select\":\n      return {};\n    // return {value: selectEvent.target.value};\n    // Touch events\n    case \"touchcancel\":\n    case \"touchend\":\n    case \"touchmove\":\n    case \"touchstart\":\n      const touchEvent = event as React.TouchEvent<T>;\n      return {\n        altKey: touchEvent.altKey,\n        ctrlKey: touchEvent.ctrlKey,\n        metaKey: touchEvent.metaKey,\n        shiftKey: touchEvent.shiftKey\n      };\n    // UI events\n    case \"scroll\":\n      const uiEvent = event as React.UIEvent<T>;\n      return { detail: uiEvent.detail };\n    // Wheel events\n    case \"wheel\":\n      const wheelEvent = event as React.WheelEvent<T>;\n      return {\n        deltaMode: wheelEvent.deltaMode,\n        deltaX: wheelEvent.deltaX,\n        deltaY: wheelEvent.deltaY,\n        deltaZ: wheelEvent.deltaZ\n      };\n    // Media events\n    case \"abort\":\n    case \"canplay\":\n    case \"canplaythrough\":\n    case \"durationchange\":\n    case \"emptied\":\n    case \"encrypted\":\n    case \"ended\":\n    case \"error\":\n    case \"loadeddata\":\n    case \"loadedmetadata\":\n    case \"loadstart\":\n    case \"pause\":\n    case \"play\":\n    case \"playing\":\n    case \"progress\":\n    case \"ratechange\":\n    case \"seeked\":\n    case \"seeking\":\n    case \"stalled\":\n    case \"suspend\":\n    case \"timeupdate\":\n    case \"volumechange\":\n    case \"waiting\":\n      return {};\n    // Image events\n    case \"load\":\n      return {};\n    // Animation events\n    case \"animationstart\":\n    case \"animationend\":\n    case \"animationiteration\":\n      const animationEvent = event as React.AnimationEvent<T>;\n      return {\n        animationName: animationEvent.animationName,\n        pseudoElement: animationEvent.pseudoElement,\n        elapsedTime: animationEvent.elapsedTime\n      };\n    // Transition events\n    case \"transitionend\":\n      const transitionEvent = event as React.TransitionEvent<T>;\n      return {\n        propertyName: transitionEvent.propertyName,\n        pseudoElement: transitionEvent.pseudoElement,\n        elapsedTime: transitionEvent.elapsedTime\n      };\n    // Other events\n    case \"toggle\":\n      return {};\n    default:\n      return {};\n  }\n}\n","/**\n * The original copy of this comes from\n * https://github.com/remarkablemark/REON/blob/1f126e71c17f96daad518abffdb2c53b66b8b792/lib/object-to-react.js\n *\n * This version is heavily modified to:\n *\n *   * Match the application/vdom.v1+json spec\n *   * Not mutate data\n *\n * MIT License\n *\n * Copyright (c) 2016 Menglin \"Mark\" Xu <mark@remarkablemark.org>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as React from \"react\";\nimport { SerializedEvent, serializeEvent } from \"./event-to-object\";\n\nexport { SerializedEvent } from \"./event-to-object\";\n\nexport interface Attributes {\n  [key: string]: any;\n}\n\nexport interface EventHandlers {\n  [key: string]: string;\n}\n\nexport interface VDOMEl {\n  tagName: string; // Could be an enum honestly\n  children: React.ReactNode | VDOMEl | Array<React.ReactNode | VDOMEl>;\n  attributes: Attributes;\n  eventHandlers?: EventHandlers;\n  key: number | string | null;\n}\n\n/**\n * Convert an object to React element(s).\n *\n * The object schema should be similar to React element's.\n * Note: The object passed in this function will be mutated.\n *\n * @param  {Object}       obj - The element object.\n * @return {ReactElement}\n */\nexport function objectToReactElement(\n  obj: VDOMEl,\n  onVDOMEvent: (targetName: string, event: SerializedEvent<any>) => void\n): React.ReactElement<any> {\n  // Pack args for React.createElement\n  let args: any = [];\n\n  if (!obj.tagName || typeof obj.tagName !== \"string\") {\n    throw new Error(`Invalid tagName on ${JSON.stringify(obj, null, 2)}`);\n  }\n\n  if (\n    !obj.attributes ||\n    Array.isArray(obj.attributes) ||\n    typeof obj.attributes !== \"object\"\n  ) {\n    throw new Error(\"Attributes must exist on a VDOM Object as an object\");\n  }\n\n  // style must be an object (non-array)\n  if (obj.attributes.style === null || obj.attributes.style === undefined) {\n    // no worries here, style can be null or undefined, note that we don't want\n    // the falsy values to sneak through (NaN, \"\", 0, false)\n  } else if (\n    Array.isArray(obj.attributes.style) ||\n    typeof obj.attributes.style !== \"object\"\n  ) {\n    throw new Error(\n      \"Style attribute must be an object like { 'backgroundColor': 'DeepPink' }\"\n    );\n  }\n\n  if (obj.attributes.dangerouslySetInnerHTML) {\n    delete obj.attributes.dangerouslySetInnerHTML;\n  }\n\n  // Add event handlers to attributes.\n  // Replace event handlers values (target name) with callback functions that\n  // serialize the event object and call `onVDOMEvent` with the comm target name\n  // and serialized event.\n  // `onVDOMEvent` will send a comm message to a comm channel of target name\n  // with a body of serialized event and vdom on kernel will handle the event.\n  if (obj.eventHandlers) {\n    for (const eventType in obj.eventHandlers) {\n      if (obj.eventHandlers.hasOwnProperty(eventType)) {\n        const targetName = obj.eventHandlers[eventType];\n        obj.attributes[eventType] = (event: React.SyntheticEvent<any>) => {\n          const serializedEvent = serializeEvent(event);\n          onVDOMEvent(targetName, serializedEvent);\n        };\n      }\n    }\n  }\n\n  // `React.createElement` 1st argument: type\n  args[0] = obj.tagName;\n  args[1] = obj.attributes;\n\n  const children = obj.children;\n\n  if (children) {\n    if (Array.isArray(children)) {\n      // to be safe (although this should never happen)\n      if (args[1] === undefined) {\n        args[1] = null;\n      }\n      args = args.concat(arrayToReactChildren(\n        children as VDOMEl[],\n        onVDOMEvent\n      ) as any);\n    } else if (typeof children === \"string\") {\n      args[2] = children;\n    } else if (typeof children === \"object\") {\n      args[2] = objectToReactElement(children as VDOMEl, onVDOMEvent);\n    } else {\n      throw new Error(\n        \"children of a vdom element must be a string, object, null, or array of vdom nodes\"\n      );\n    }\n  }\n\n  return React.createElement.apply({}, args);\n}\n\n/**\n * Convert an array of items to React children.\n *\n * @param  {Array} arr - The array.\n * @return {Array}     - The array of mixed values.\n */\nfunction arrayToReactChildren(\n  arr: VDOMEl[],\n  onVDOMEvent: (targetName: string, event: SerializedEvent<any>) => void\n): React.ReactNodeArray {\n  const result: React.ReactNodeArray = [];\n\n  // iterate through the `children`\n  for (let i = 0, len = arr.length; i < len; i++) {\n    // child can have mixed values: text, React element, or array\n    const item = arr[i];\n    if (item === null) {\n      continue;\n    } else if (Array.isArray(item)) {\n      result.push(arrayToReactChildren(item, onVDOMEvent));\n    } else if (typeof item === \"string\") {\n      result.push(item);\n    } else if (typeof item === \"object\") {\n      // Create a new object so that if we have to set the key, we are not\n      // mutating the original object\n      const keyedItem = {\n        tagName: item.tagName,\n        attributes: item.attributes,\n        children: item.children,\n        eventHandlers: item.eventHandlers,\n        key: i\n      };\n      if (item.attributes && item.attributes.key) {\n        keyedItem.key = item.attributes.key;\n      }\n      result.push(objectToReactElement(keyedItem, onVDOMEvent));\n    } else {\n      throw new Error(`invalid vdom child: \"${item}\"`);\n    }\n  }\n\n  return result;\n}\n","import { cloneDeep } from \"lodash\";\nimport * as React from \"react\";\n\nimport {\n  Attributes,\n  SerializedEvent,\n  objectToReactElement,\n  VDOMEl\n} from \"./object-to-react\";\n\ninterface Props {\n  mediaType: \"application/vdom.v1+json\";\n  data: VDOMEl;\n  onVDOMEvent: (targetName: string, event: SerializedEvent<any>) => void;\n}\n\n// Provide object-to-react as an available helper on the library\nexport { objectToReactElement, VDOMEl, Attributes, SerializedEvent };\n\nconst mediaType = \"application/vdom.v1+json\";\n\nexport default class VDOM extends React.PureComponent<Partial<Props>> {\n  static MIMETYPE = mediaType;\n\n  static defaultProps = {\n    mediaType,\n    onVDOMEvent: () => {\n      console.log(\n        \"This app doesn't support vdom events ☹️ See @nteract/transform-vdom for more info: https://github.com/nteract/nteract/tree/master/packages/transform-vdom\"\n      );\n    }\n  };\n\n  render(): React.ReactElement<any> {\n    try {\n      if (this.props.data && this.props.onVDOMEvent) {\n        // objectToReactElement is mutatitve so we'll clone our object\n        const obj = cloneDeep(this.props.data);\n        return objectToReactElement(obj, this.props.onVDOMEvent);\n      } else {\n        throw new Error(\"No VDOM data provided.\");\n      }\n    } catch (err) {\n      return (\n        <React.Fragment>\n          <pre\n            style={{\n              backgroundColor: \"ghostwhite\",\n              color: \"black\",\n              fontWeight: 600,\n              display: \"block\",\n              padding: \"10px\",\n              marginBottom: \"20px\"\n            }}\n          >\n            There was an error rendering VDOM data from the kernel or notebook\n          </pre>\n          <code>{err.toString()}</code>\n        </React.Fragment>\n      );\n    }\n  }\n}\n","import * as React from \"react\";\n\n/**\n * TODO: Establish a new resources spec for SVG logos used in kernel \"cards\".\n *\n * Description: At some point I'd like to push forward a spec for a ~1:1.4142\n * ratio (1:√2) notebook card for the selection screen (on nteract and\n * jupyterlab). For now I'll hardcode some React svg versions for kernels in\n * common use across the ~~USS~~ enterprise.\n *\n * Implemented:\n *\n *  - Python\n *  - Scala\n *\n * Needed:\n *\n *  - R\n *  - Node.js\n *\n * The easy solution to getting another kernel supported (instead of the fallback)\n * is to add another logo in a PR. 🎉\n */\n\ninterface WrapperProps {\n  children: React.ReactNode;\n  outerProps?: any;\n  width?: number | string;\n  height?: number | string;\n  preserveAspectRatio?: string;\n  viewBox: string;\n}\n\nexport const SVGWrapper = (props: WrapperProps) => {\n  return (\n    <span>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={props.width}\n        height={props.height}\n        viewBox={props.viewBox}\n        {...props.outerProps}\n        style={Object.assign(\n          {\n            display: \"inline-block\",\n            verticalAlign: \"text-bottom\"\n          },\n          props.outerProps.style\n        )}\n      >\n        {props.children}\n      </svg>\n    </span>\n  );\n};\n\nSVGWrapper.defaultProps = {\n  width: \"100%\",\n  outerProps: {}\n};\n\nexport const PythonLogo = () => (\n  <SVGWrapper viewBox=\"0 0 110 110\">\n    <g color=\"#000\">\n      <path\n        style={{ marker: \"none\" }}\n        d=\"M99.75 67.46875C71.718268 67.468752 73.46875 79.625 73.46875 79.625L73.5 92.21875h26.75V96H62.875s-17.9375-2.034276-17.9375 26.25c-.000002 28.28427 15.65625 27.28125 15.65625 27.28125h9.34375v-13.125S69.433848 120.75 85.34375 120.75H111.875s14.90625.24096 14.90625-14.40625V82.125c0-.000002 2.26318-14.65625-27.03125-14.65625zM85 75.9375c2.661429-.000002 4.8125 2.151071 4.8125 4.8125.000002 2.661429-2.151071 4.8125-4.8125 4.8125-2.661429.000002-4.8125-2.151071-4.8125-4.8125-.000002-2.661429 2.151071-4.8125 4.8125-4.8125z\"\n        overflow=\"visible\"\n        transform=\"translate(-44.9375 -67.46875)\"\n        fill=\"var(--logo-off, #387eb8)\"\n      />\n      <path\n        style={{ marker: \"none\" }}\n        d=\"M100.5461 177.31485c28.03174 0 26.28125-12.15625 26.28125-12.15625l-.03125-12.59375h-26.75v-3.78125h37.375s17.9375 2.03427 17.9375-26.25001c.00001-28.284267-15.65625-27.281247-15.65625-27.281247h-9.34375v13.124997s.50366 15.65625-15.40625 15.65625H88.421098s-14.90625-.24096-14.90625 14.40626v24.21875s-2.26318 14.65625 27.031252 14.65625zm14.75-8.46875c-2.66143 0-4.8125-2.15107-4.8125-4.8125s2.15107-4.8125 4.8125-4.8125 4.8125 2.15107 4.8125 4.8125c.00001 2.66143-2.15107 4.8125-4.8125 4.8125z\"\n        overflow=\"visible\"\n        transform=\"translate(-44.9375 -67.46875)\"\n        fill=\"var(--logo-off, #ffe052)\"\n        fillOpacity=\"0.7\"\n      />\n    </g>\n  </SVGWrapper>\n);\n\nexport const ScalaLogo = () => (\n  <SVGWrapper viewBox=\"-80 0 416 416\">\n    <path\n      fill=\"var(--logo-off, black)\"\n      fillOpacity=\"0.7\"\n      d=\"M0 288v-32c0-5.394 116.377-14.428 192.2-32 36.628 8.49 63.8 18.969 63.8 32v32c0 13.024-27.172 23.51-63.8 32C116.376 302.425 0 293.39 0 288\"\n      transform=\"matrix(1 0 0 -1 0 544)\"\n    />\n    <path\n      fill=\"var(--logo-off, black)\"\n      fillOpacity=\"0.7\"\n      d=\"M0 160v-32c0-5.394 116.377-14.428 192.2-32 36.628 8.49 63.8 18.969 63.8 32v32c0 13.024-27.172 23.51-63.8 32C116.376 174.425 0 165.39 0 160\"\n      transform=\"matrix(1 0 0 -1 0 288)\"\n    />\n    <path\n      fill=\"var(--logo-off, #C40000)\"\n      d=\"M0 224v-96c0 8 256 24 256 64v96c0-40-256-56-256-64\"\n      transform=\"matrix(1 0 0 -1 0 416)\"\n    />\n    <path\n      fill=\"var(--logo-off, #C40000)\"\n      d=\"M0 96V0c0 8 256 24 256 64v96c0-40-256-56-256-64\"\n      transform=\"matrix(1 0 0 -1 0 160)\"\n    />\n    <path\n      fill=\"var(--logo-off, #C40000)\"\n      d=\"M0 352v-96c0 8 256 24 256 64v96c0-40-256-56-256-64\"\n      transform=\"matrix(1 0 0 -1 0 672)\"\n    />\n  </SVGWrapper>\n);\n\nexport const RLogo = () => (\n  <SVGWrapper viewBox=\"0 0 724 561\">\n    <defs>\n      <linearGradient\n        id=\"grayRingForRLogo\"\n        x2=\"1\"\n        y2=\"1\"\n        gradientUnits=\"objectBoundingBox\"\n      >\n        <stop offset=\"0\" stopColor=\"#CBCED0\" />\n        <stop offset=\"1\" stopColor=\"#84838B\" />\n      </linearGradient>\n      <linearGradient\n        id=\"blueRForRLogo\"\n        x2=\"1\"\n        y2=\"1\"\n        gradientUnits=\"objectBoundingBox\"\n      >\n        <stop offset=\"0\" stopColor=\"#276DC3\" />\n        <stop offset=\"1\" stopColor=\"#165CAA\" />\n      </linearGradient>\n    </defs>\n    <path\n      fill=\"url(#grayRingForRLogo)\"\n      fillRule=\"evenodd\"\n      d=\"M361.453 485.937C162.329 485.937.906 377.828.906 244.469.906 111.109 162.329 3 361.453 3 560.578 3 722 111.109 722 244.469c0 133.359-161.422 241.468-360.547 241.468zm55.188-388.531c-151.352 0-274.047 73.908-274.047 165.078s122.695 165.078 274.047 165.078c151.351 0 263.046-50.529 263.046-165.078 0-114.513-111.695-165.078-263.046-165.078z\"\n    />\n    <path\n      fill=\"url(#blueRForRLogo)\"\n      fillRule=\"evenodd\"\n      d=\"M550 377s21.822 6.585 34.5 13c4.399 2.226 12.01 6.668 17.5 12.5 5.378 5.712 8 11.5 8 11.5l86 145-139 .062L492 437s-13.31-22.869-21.5-29.5c-6.832-5.531-9.745-7.5-16.5-7.5h-33.026L421 558.974l-123 .052V152.938h247S657.5 154.967 657.5 262 550 377 550 377zm-53.5-135.976l-74.463-.048-.037 69.05 74.5-.024s34.5-.107 34.5-35.125c0-35.722-34.5-33.853-34.5-33.853z\"\n    />\n  </SVGWrapper>\n);\n\nexport const JSLogo = () => (\n  <SVGWrapper viewBox=\"0 0 256 289\" preserveAspectRatio=\"xMidYMid\">\n    <path\n      fill=\"#539E43\"\n      d=\"M127.999999 288.463771c-3.975155 0-7.6853-1.060043-11.130435-2.915115l-35.2463756-20.935818c-5.3002084-2.915114-2.650103-3.975156-1.0600426-4.505177 7.1552801-2.385091 8.4803317-2.915114 15.900623-7.15528.7950291-.53002 1.8550717-.265009 2.650103.265011l27.0310552 16.165632c1.060043.530021 2.385094.530021 3.180126 0l105.739129-61.21739c1.060043-.530023 1.590063-1.590063 1.590063-2.915115V83.0807467c0-1.3250538-.53002-2.3850941-1.590063-2.9151143L129.325053 19.2132506c-1.060043-.5300201-2.385094-.5300201-3.180126 0L20.4057954 80.1656324c-1.0600403.5300202-1.5900605 1.8550717-1.5900605 2.9151143V205.250519c0 1.060041.5300202 2.385092 1.5900605 2.915115l28.8861293 16.695652c15.6356117 7.950309 25.4409949-1.325052 25.4409949-10.600415V93.681159c0-1.5900605 1.3250515-3.1801232 3.1801232-3.1801232h13.5155288c1.5900627 0 3.1801232 1.3250515 3.1801232 3.1801232v120.579712c0 20.935818-11.3954436 33.126293-31.2712211 33.126293-6.0952375 0-10.8654235 0-24.3809523-6.625258l-27.8260867-15.90062C4.24016581 220.886129 0 213.46584 0 205.515528V83.3457557c0-7.9503092 4.24016581-15.3706005 11.1304347-19.3457551L116.869564 2.78260752c6.62526-3.71014336 15.635612-3.71014336 22.260872 0L244.869565 64.0000006C251.759834 67.9751552 256 75.3954465 256 83.3457557V205.515528c0 7.950312-4.240166 15.370601-11.130435 19.345758l-105.739129 61.21739c-3.445137 1.590063-7.420291 2.385095-11.130437 2.385095zm32.596275-84.008283c-46.376813 0-55.917185-21.200829-55.917185-39.221533 0-1.590062 1.325052-3.180123 3.180123-3.180123h13.78054c1.590061 0 2.915112 1.06004 2.915112 2.650103 2.120083 14.045549 8.215323 20.935818 36.306419 20.935818 22.260871 0 31.801243-5.035197 31.801243-16.960663 0-6.890269-2.650103-11.925466-37.366461-15.370601-28.886127-2.915114-46.90683-9.275363-46.90683-32.331263 0-21.4658385 18.020703-34.1863359 48.231884-34.1863359 33.921324 0 50.616976 11.6604571 52.737059 37.1014499 0 .795031-.265011 1.590063-.795031 2.385094-.53002.53002-1.325052 1.06004-2.120083 1.06004h-13.780538c-1.325051 0-2.650103-1.06004-2.915114-2.385092-3.180123-14.575569-11.395446-19.345757-33.126293-19.345757-24.380954 0-27.296066 8.480332-27.296066 14.84058 0 7.685301 3.445134 10.070395 36.306418 14.310561 32.596273 4.240165 47.966873 10.335403 47.966873 33.126292-.265011 23.320912-19.345755 36.57143-53.00207 36.57143z\"\n    />\n  </SVGWrapper>\n);\n\n// Create a deterministic number from a string\nfunction hashCode(str: string): number {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\n\n// Pick a random color, altering only hue\nfunction pickColor(str: string): string {\n  return `hsl(${hashCode(str) % 360}, 100%, 30%)`;\n}\n\n// When we don't have a logo for a given language, generate a circle for it\nexport const PlaceholderLogo = (props: { language: string }) => {\n  const strokeColor = pickColor(props.language || \"k\");\n\n  return (\n    <SVGWrapper viewBox=\"0 0 20 20\">\n      <g\n        stroke={`var(--logo-off, ${strokeColor})`}\n        fillOpacity=\"0\"\n        strokeWidth=\"2\"\n      >\n        <circle cx=\"10\" cy=\"10\" r=\"5\" />\n      </g>\n    </SVGWrapper>\n  );\n};\n\nexport default function Logo({ language }: { language: string }) {\n  switch (language.toLowerCase()) {\n    case \"javascript\":\n      return <JSLogo />;\n    case \"r\":\n      return <RLogo />;\n    case \"scala\":\n      return <ScalaLogo />;\n    case \"python\":\n      return <PythonLogo />;\n    default:\n      return <PlaceholderLogo language={language} />;\n  }\n}\n\nLogo.defaultProps = {\n  language: \"\"\n};\n","/* eslint jsx-a11y/no-static-element-interactions: 0 */\n/* eslint jsx-a11y/click-events-have-key-events: 0 */\n/* eslint jsx-a11y/no-noninteractive-tabindex: 0 */\n\n/**\n * Plan:\n *\n * Create a 1-dimensional grid of new notebook types for clicking\n * to create new notebooks\n *\n * Create a listing of running notebooks\n * Showcase the directory navigator\n */\n\nimport { AppState, KernelspecProps, KernelspecRecord } from \"@nteract/types\";\nimport * as Immutable from \"immutable\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled, { StyledComponent } from \"styled-components\";\n\nimport { default as Logo } from \"./logos\";\n\nexport interface AvailableNotebook {\n  kernelspec: KernelspecRecord | KernelspecProps;\n}\n\nexport type AvailableNotebooks =\n  | AvailableNotebook[]\n  | Immutable.List<AvailableNotebook>;\n\nconst DisplayNameLong = styled.p`\n  margin: 0;\n  color: var(--theme-primary-fg);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst NewNotebookDiv = styled.div`\n  color: var(--nt-color-midnight-light);\n  cursor: pointer;\n\n  font-family: var(--nt-font-family-normal);\n  color: var(--nt-color-midnight-light);\n  margin: 20px 20px 0 0;\n  flex: 0 0 auto;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  height: 150px;\n  width: 100px;\n\n  a {\n    padding-top: 20px;\n  }\n\n  :hover {\n    box-shadow: var(--theme-primary-shadow-hover);\n    & ${DisplayNameLong} {\n      white-space: initial;\n      overflow: initial;\n      text-overflow: initial;\n    }\n  }\n\n  :focus {\n    box-shadow: var(--theme-primary-shadow-focus);\n    & ${DisplayNameLong} {\n      white-space: initial;\n      overflow: initial;\n      text-overflow: initial;\n    }\n  }\n`;\n\nconst LogoBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 30px;\n  background-color: var(--theme-app-bg, white);\n  flex: 1;\n\n  .logo {\n    width: 2em;\n    box-sizing: border-box;\n    margin: 0 auto;\n  }\n`;\n\nconst TextBox = styled.div`\n  padding: 8px 6px 8px 6px;\n  font-size: 0.8em;\n  width: 100px;\n  box-sizing: border-box;\n  background-color: var(--theme-primary-bg, hsl(0, 0%, 98%));\n  border-top: 1px solid var(--theme-app-border);\n`;\n\nconst DisplayNameShort = styled.p`\n  text-transform: capitalize;\n  margin: 0 5px 0 0;\n  font-weight: 600;\n  color: var(--theme-app-fg);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const NewNotebook = (\n  props: AvailableNotebook & {\n    href?: string;\n    onClick?: (ks: KernelspecRecord | KernelspecProps) => void;\n  }\n) => {\n  const onClick = () => {\n    if (props.onClick) {\n      props.onClick(props.kernelspec);\n    }\n  };\n\n  return (\n    <NewNotebookDiv tabIndex={0} onClick={onClick}>\n      <LogoBox>\n        <div className=\"logo\">\n          <Logo language={props.kernelspec.language} />\n        </div>\n      </LogoBox>\n      <TextBox>\n        <DisplayNameShort title={props.kernelspec.language}>\n          {props.kernelspec.language}\n        </DisplayNameShort>\n        <DisplayNameLong title={props.kernelspec.displayName}>\n          {props.kernelspec.displayName}\n        </DisplayNameLong>\n      </TextBox>\n    </NewNotebookDiv>\n  );\n};\n\nNewNotebook.defaultProps = {\n  onClick: () => {}\n};\n\nconst NotebookCollection = styled.div`\n  padding: 0 0 20px 0;\n  box-sizing: border-box;\n  min-width: 0;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  -webkit-overflow-scrolling: touch;\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n`;\n\nconst Banner = styled.div`\n  background-color: var(--nt-color-grey-light);\n  color: var(--nt-color-midnight);\n\n  box-sizing: border-box;\n\n  width: 100vw;\n  padding-top: 20px;\n  padding-left: 20px;\n`;\n\nexport const PureNewNotebookNavigation = (props: {\n  availableNotebooks: AvailableNotebooks;\n  onClick?: (ks: KernelspecRecord | KernelspecProps) => void;\n}) => (\n  <Banner>\n    <div>Start a new notebook</div>\n    <NotebookCollection>\n      {(props.availableNotebooks as AvailableNotebook[]).map(\n        (an: AvailableNotebook) => (\n          <NewNotebook\n            kernelspec={an.kernelspec}\n            key={an.kernelspec.name}\n            onClick={props.onClick}\n          />\n        )\n      )}\n    </NotebookCollection>\n  </Banner>\n);\n\nconst makeMapStateToProps = (initialState: AppState) => {\n  let cachedAvailableKernels = Immutable.List();\n\n  // To know whether we need to cache a new value\n  let previousKernelspecs = initialState.core.entities.kernelspecs;\n\n  const mapStateToProps = (state: AppState) => {\n    if (previousKernelspecs !== state.core.entities.kernelspecs) {\n      const availableKernels = state.core.entities.kernelspecs.byRef\n        .flatMap(kss => {\n          return kss.byName.map(ks => {\n            return { kernelspec: ks };\n          });\n        })\n        .sort((a, b) => {\n          const langCompare = a.kernelspec.language.localeCompare(\n            b.kernelspec.language\n          );\n          const displayCompare = a.kernelspec.displayName.localeCompare(\n            b.kernelspec.displayName\n          );\n\n          // Effectively, group by language then sort by display name within\n          const comparison = langCompare > 0 ? displayCompare : langCompare;\n\n          return comparison;\n        })\n        .toList();\n\n      cachedAvailableKernels = availableKernels;\n    }\n\n    return {\n      availableNotebooks: cachedAvailableKernels\n    };\n  };\n  return mapStateToProps;\n};\n\nexport const NewNotebookNavigation = connect(makeMapStateToProps)(\n  PureNewNotebookNavigation\n);\n\nexport default NewNotebookNavigation;\n","import {\n  Button,\n  EditableText,\n  H1,\n  ITagProps,\n  Position,\n  Tag,\n  Tooltip\n} from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\n\n// https://github.com/jupyter/nbformat/blob/master/nbformat/v4/nbformat.v4.schema.json#L67\n\nconst tagStyle: object = {\n  background: \"#f1f8ff\",\n  color: \"#0366d6\",\n  marginRight: \"5px\"\n};\n\nconst authorStyle: object = {\n  background: \"#E5E5E5\",\n  fontStyle: \"italic\",\n  marginRight: \"5px\"\n};\n\nconst authorStyleBlack: object = { ...authorStyle, color: \"black\" };\n\nexport interface AuthorObject {\n  name: string;\n}\n\nexport interface HeaderDataProps {\n  authors: AuthorObject[];\n  title: string;\n  description: string;\n  tags: string[];\n}\n\nexport interface HeaderEditorProps {\n  /**\n   * The data that the header should be populated with.\n   */\n  headerData: HeaderDataProps;\n  /**\n   * Whether or not the fields of the header can be edited.\n   */\n  editable: boolean;\n  /**\n   * An event handler to run whenever header fields are modified.\n   */\n  onChange: (props?: HeaderDataProps) => void;\n  /**\n   *\n   */\n  onRemove: (e: React.MouseEvent<HTMLButtonElement>, props: ITagProps) => void;\n  /**\n   * The theme of the header.\n   */\n  theme: \"light\" | \"dark\";\n}\n\nexport interface HeaderEditorState {\n  editMode: \"none\" | \"author\" | \"tag\";\n}\n\nconst addTagMessage: JSX.Element = <span>Add a tag</span>;\nconst addAuthorMessage: JSX.Element = <span>Add an author</span>;\n\nclass HeaderEditor extends React.PureComponent<\n  HeaderEditorProps,\n  HeaderEditorState\n> {\n  static defaultProps: HeaderEditorProps = {\n    editable: true,\n    headerData: {\n      authors: [],\n      description: \"\",\n      tags: [],\n      title: \"\"\n    },\n    // tslint:disable no-empty\n    onChange: () => {},\n    onRemove: (e: React.MouseEvent<HTMLButtonElement>, props: ITagProps) => {},\n    theme: \"light\"\n  };\n\n  constructor(props: HeaderEditorProps) {\n    super(props);\n\n    this.state = {\n      editMode: \"none\"\n    };\n  }\n\n  render(): JSX.Element {\n    // Otherwise assume they have their own editor component\n    const { editable, headerData, onChange } = this.props;\n    const marginStyles: object = { marginTop: \"10px\" };\n    const styles: object = { background: \"#EEE\", padding: \"10px\" };\n    const onTextChange = (newText: string): void => {\n      this.props.onChange({\n        ...headerData,\n        title: newText\n      });\n    };\n    const onEditorChange = (newText: string) => {\n      onChange({\n        ...headerData,\n        description: newText\n      });\n    };\n    const onAuthorsRemove = (t: any) => (\n      evt: React.MouseEvent<HTMLButtonElement>,\n      props: ITagProps\n    ) => {\n      if (editable === true) {\n        onChange({\n          ...headerData,\n          authors: headerData.authors.filter(p => p.name !== t.name)\n        });\n        return;\n      }\n      return;\n    };\n    const onTagsRemove = (t: any) => (\n      e: React.MouseEvent<HTMLButtonElement>,\n      props: ITagProps\n    ) => {\n      if (editable) {\n        onChange({\n          ...headerData,\n          tags: headerData.tags.filter(p => p !== t)\n        });\n        return;\n      }\n      return;\n    };\n    const onTagsConfirm = (e: any) => {\n      onChange({\n        ...headerData,\n        tags: [...headerData.tags, e]\n      });\n      this.setState({ editMode: \"none\" });\n    };\n    const onAuthorsConfirm = (e: any) => {\n      onChange({\n        ...headerData,\n        authors: [...headerData.authors, { name: e }]\n      });\n      this.setState({ editMode: \"none\" });\n    };\n    const onCancel = () => this.setState({ editMode: \"none\" });\n    const onClick = () => this.setState({ editMode: \"author\" });\n    const onAdd = () => this.setState({ editMode: \"tag\" });\n\n    return (\n      <header>\n        <div style={styles}>\n          <H1>\n            <EditableText\n              value={headerData.title}\n              placeholder=\"Edit title...\"\n              disabled={!editable}\n              onChange={onTextChange}\n            />\n          </H1>\n          <div>\n            {headerData.authors.length <= 0 ? null : \"By \"}\n            {headerData.authors.map(t => (\n              <Tag\n                key={t.name}\n                large\n                minimal\n                style={authorStyle}\n                onRemove={onAuthorsRemove(t)}\n              >\n                {t.name}\n              </Tag>\n            ))}\n            {(this.state.editMode === \"author\" && (\n              <Tag style={authorStyleBlack}>\n                <EditableText\n                  maxLength={40}\n                  className=\"author-entry\"\n                  placeholder=\"Enter Author Name...\"\n                  selectAllOnFocus\n                  onConfirm={onAuthorsConfirm}\n                  onCancel={onCancel}\n                />\n              </Tag>\n            )) || (\n              <Tooltip\n                content={addAuthorMessage}\n                position={Position.RIGHT}\n                usePortal={false}\n                disabled={!editable}\n              >\n                <Button\n                  icon=\"add\"\n                  className=\"author-button\"\n                  onClick={onClick}\n                  minimal\n                  disabled={!editable}\n                />\n              </Tooltip>\n            )}\n          </div>\n\n          <div>\n            {headerData.tags.map(t => (\n              <Tag key={t} style={tagStyle} onRemove={onTagsRemove}>\n                {t}\n              </Tag>\n            ))}\n            {(this.state.editMode === \"tag\" && (\n              <Tag style={tagStyle}>\n                <EditableText\n                  maxLength={20}\n                  placeholder=\"Enter Tag Name...\"\n                  selectAllOnFocus\n                  onConfirm={onTagsConfirm}\n                  onCancel={onCancel}\n                />\n              </Tag>\n            )) || (\n              <Tooltip\n                content={addTagMessage}\n                position={Position.RIGHT}\n                usePortal={false}\n                disabled={!editable}\n              >\n                {\n                  <Button\n                    icon=\"add\"\n                    minimal\n                    onClick={onAdd}\n                    disabled={!editable}\n                  />\n                }\n              </Tooltip>\n            )}\n          </div>\n          <div style={marginStyles}>\n            <EditableText\n              maxLength={280}\n              maxLines={12}\n              minLines={3}\n              multiline\n              placeholder=\"Edit description...\"\n              selectAllOnFocus={false}\n              value={headerData.description}\n              disabled={!editable}\n              onChange={onEditorChange}\n            />\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\n// We export this for testing purposes.\nexport { HeaderEditor };\n\nexport default HeaderEditor;\n","// We need to allow to allow escape from the modal from an inner element.\n/* eslint jsx-a11y/no-noninteractive-tabindex: 0 */\n\n// TODO: we can remove this if we knew an appropriate role for the modal shadow.\n// We want to allow the user to click on the modal-backdrop to escape.\n/* eslint jsx-a11y/no-static-element-interactions: 0 */\n\nimport { actions, selectors } from \"@nteract/core\";\nimport { AppState } from \"@nteract/types\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nexport interface Props {\n  appVersion?: string;\n  hostType: \"local\" | \"empty\" | \"jupyter\" | null;\n  closeModal?: () => void;\n}\n\n// We need to do this so that you can immediately `Escape` out of the dialog.\n// Otherwise, we'd need to (a) put an event listener on the document or (b)\n// require that the user clicks the content first before attempting to escape.\nconst focusOnRender = (el: HTMLDialogElement) => el && el.focus();\n\nconst TOP_OFFSET = \"20px\";\nconst ModalContentDialog = styled.dialog`\n  width: initial;\n  height: initial;\n  margin: initial;\n  background: initial;\n\n  align-items: stretch;\n  background-color: var(--theme-app-bg);\n  color: var(--theme-app-fg);\n  border-radius: 4px;\n  border: var(--theme-app-border) 1px solid;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-start;\n  left: 400px;\n  max-height: calc(100vh - ${TOP_OFFSET} * 2);\n  outline: none;\n  overflow: auto;\n  padding: 20px;\n  position: absolute;\n  right: 400px;\n  top: ${TOP_OFFSET};\n  z-index: 10000;\n\n  .modal--content--header {\n    padding: 0 20px 20px 20px;\n    border-bottom: var(--theme-app-border) 1px solid;\n  }\n  .modal--content--body {\n    padding: 20px;\n  }\n  .modal--content--body--field {\n    font-weight: bold;\n    margin-right: 5px;\n  }\n  .modal--content--body--value {\n    font-family: monospace;\n  }\n\n  @media only screen and (max-width: 1500px) {\n    left: 200px;\n    right: 200px;\n  }\n  @media only screen and (max-width: 1000px) {\n    left: 100px;\n    right: 100px;\n  }\n  @media only screen and (max-width: 600px) {\n    left: 40px;\n    right: 40px;\n  }\n`;\n\nconst ModalContentOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.25);\n  z-index: 10000;\n`;\n\nclass PureAboutModal extends React.Component<Props> {\n  handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    const { closeModal } = this.props;\n    const { key, metaKey, altKey, ctrlKey, repeat, shiftKey } = event;\n    if (\n      key === \"Escape\" &&\n      !(metaKey || altKey || ctrlKey || repeat || shiftKey) &&\n      closeModal\n    ) {\n      closeModal();\n    }\n  };\n  handleOverlayClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    const { closeModal } = this.props;\n    if (closeModal && event.target && event.target === event.currentTarget) {\n      closeModal();\n    }\n  };\n  render() {\n    const { appVersion, hostType } = this.props;\n    return (\n      <div>\n        <ModalContentOverlay\n          className=\"modal--overlay\"\n          onClick={this.handleOverlayClick}\n          onKeyDown={this.handleKeyDown}\n          tabIndex={-1}\n        >\n          <ModalContentDialog\n            tabIndex={0}\n            className=\"modal--content\"\n            ref={focusOnRender}\n          >\n            <div className=\"modal--content--header\">\n              <h2>About nteract on Jupyter</h2>\n              <p>You are using an nteract-rendered notebook on Jupyter.</p>\n            </div>\n            <div className=\"modal--content--body\">\n              <p>\n                <span className=\"modal--content--body--field\">Version:</span>\n                <span className=\"modal--content--body--value\">\n                  {appVersion}\n                </span>\n              </p>\n              <p>\n                <span className=\"modal--content--body--field\">Host Type:</span>\n                <span className=\"modal--content--body--value\">{hostType}</span>\n              </p>\n            </div>\n          </ModalContentDialog>\n        </ModalContentOverlay>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  appVersion: selectors.appVersion(state),\n  hostType: selectors.currentHostType(state)\n});\n\nconst mapDispatchToProps = {\n  closeModal: actions.closeModal\n};\n\nconst AboutModal = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PureAboutModal);\n\n// We export this for testing purposes.\nexport { PureAboutModal };\n\nexport default AboutModal;\n","export const MODAL_TYPES = {\n  ABOUT: \"core/about-modal\"\n};\n","import { AppState, selectors } from \"@nteract/core\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport AboutModal from \"./about-modal\";\nimport { MODAL_TYPES } from \"./constants\";\n\ninterface Props {\n  modalType: string;\n}\n\nclass ModalController extends React.Component<Props> {\n  getModal = () => {\n    const { modalType } = this.props;\n    switch (modalType) {\n      case MODAL_TYPES.ABOUT:\n        return AboutModal;\n      default:\n        return null;\n    }\n  };\n  render() {\n    const Modal = this.getModal();\n    return Modal ? <Modal /> : null;\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  modalType: selectors.modalType(state)\n});\n\nexport { MODAL_TYPES };\n\nexport default connect(mapStateToProps)(ModalController);\n","// Note, we can reuse keys, but all paths need to be unique in the menu.\n\n// These actions map to a case in a switch handler. They are meant to cause a\n// unique action from the menu.\nexport const MENU_ITEM_ACTIONS = {\n  SAVE_NOTEBOOK: \"save-notebook\",\n  DOWNLOAD_NOTEBOOK: \"download-notebook\",\n  EXECUTE_ALL_CELLS: \"execute-all-cells\",\n  EXECUTE_ALL_CELLS_BELOW: \"execute-all-cells-below\",\n  RESTART_KERNEL: \"restart-kernel\",\n  RESTART_AND_CLEAR_OUTPUTS: \"restart-kernel-and-clear-outputs\",\n  RESTART_AND_RUN_ALL_OUTPUTS: \"restart-kernel-and-run-all-outputs\",\n  CLEAR_ALL_OUTPUTS: \"clear-all-outputs\",\n  CHANGE_KERNEL: \"change-kernel\",\n  UNHIDE_ALL: \"unhide-all\",\n  CREATE_CODE_CELL: \"create-code-cell\",\n  CREATE_MARKDOWN_CELL: \"create-markdown-cell\",\n  SET_CELL_TYPE_CODE: \"set-cell-type-code\",\n  SET_CELL_TYPE_MARKDOWN: \"set-cell-type-markdown\",\n  COPY_CELL: \"copy-cell\",\n  CUT_CELL: \"cut-cell\",\n  PASTE_CELL: \"paste-cell\",\n  SET_THEME_DARK: \"set-theme-dark\",\n  SET_THEME_LIGHT: \"set-theme-light\",\n  OPEN_ABOUT: \"open-about\",\n  KILL_KERNEL: \"kill-kernel\",\n  INTERRUPT_KERNEL: \"interrupt-kernel\"\n};\n\n// These are top-level-menu or sub-menu keys in case we need interim look-ups\n// when users hover over sub-menu titles.\nexport const MENUS = {\n  FILE: \"file\",\n  EDIT: \"edit\",\n  EDIT_SET_CELL_TYPE: \"cell-set-cell-type\",\n  INSERT: \"insert\",\n  CELL: \"cell\",\n  CELL_CREATE_CELL: \"cell-create-cell\",\n  VIEW: \"view\",\n  VIEW_THEMES: \"view-themes\",\n  RUNTIME: \"runtime\",\n  RUNTIME_CHANGE_KERNEL: \"runtime-change-kernel\",\n  HELP: \"help\"\n};\n","import { CellType } from \"@nteract/commutable\";\nimport { actions, selectors } from \"@nteract/core\";\nimport {\n  AppState,\n  ContentRef,\n  KernelRef,\n  KernelspecsByRefRecord,\n  KernelspecsRef,\n  KernelspecsByRefRecordProps\n} from \"@nteract/types\";\nimport Menu, { Divider, MenuItem, SubMenu } from \"rc-menu\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { MODAL_TYPES } from \"../modal-controller\";\n\nimport { MENU_ITEM_ACTIONS, MENUS } from \"./constants\";\nimport { RecordOf } from \"immutable\";\n\n// To allow actions that can take dynamic arguments (like selecting a kernel\n// based on the host's kernelspecs), we have some simple utility functions to\n// stringify/parse actions/arguments.\nconst createActionKey = (action: string, ...args: any[]) =>\n  [action, ...args].join(\":\");\nconst parseActionKey = (key: string) => key.split(\":\");\n\nconst StickyMenu = styled(Menu)`\n  position: sticky;\n  top: 0;\n  z-index: 10000;\n`;\n\ninterface Props {\n  persistAfterClick?: boolean;\n  defaultOpenKeys?: string[];\n  openKeys?: string[];\n  currentKernelRef?: KernelRef | null;\n  saveNotebook?: (payload: { contentRef: string }) => void;\n  downloadNotebook?: (payload: { contentRef: string }) => void;\n  executeCell?: (payload: { id: string; contentRef: string }) => void;\n  executeAllCells?: (payload: { contentRef: string }) => void;\n  executeAllCellsBelow?: (payload: { contentRef: string }) => void;\n  clearAllOutputs?: (payload: { contentRef: string }) => void;\n  unhideAll?: (payload: {\n    outputHidden: boolean;\n    inputHidden: boolean;\n    contentRef: string;\n  }) => void;\n  cutCell?: (payload: { id?: string; contentRef: string }) => void;\n  copyCell?: (payload: { id?: string; contentRef: string }) => void;\n  pasteCell?: (payload: { contentRef: string }) => void;\n  createCellBelow?: (payload: {\n    id?: string | undefined;\n    cellType: CellType;\n    source: string;\n    contentRef: string;\n  }) => void;\n  changeCellType?: (payload: {\n    id?: string | undefined;\n    to: CellType;\n    contentRef: string;\n  }) => void;\n  setTheme?: (theme: string) => void;\n  openAboutModal?: () => void;\n  changeKernelByName?: (payload: {\n    kernelSpecName: string;\n    oldKernelRef?: KernelRef | null;\n    contentRef: ContentRef;\n  }) => void;\n  restartKernel?: (payload: {\n    outputHandling: actions.RestartKernelOutputHandling;\n    kernelRef?: string | null;\n    contentRef: string;\n  }) => void;\n  restartKernelAndClearOutputs?: (payload: {\n    kernelRef?: string | null;\n    contentRef: string;\n  }) => void;\n  restartKernelAndRunAllOutputs?: (payload: {\n    kernelRef?: string | null;\n    contentRef: string;\n  }) => void;\n  killKernel?: (payload: {\n    restarting: boolean;\n    kernelRef?: string | null;\n  }) => void;\n  interruptKernel?: (payload: { kernelRef?: string | null }) => void;\n  currentContentRef: ContentRef;\n  currentKernelspecsRef?: KernelspecsRef | null;\n  currentKernelspecs?: KernelspecsByRefRecord | null;\n}\n\ninterface State {\n  openKeys?: string[];\n}\n\nclass PureNotebookMenu extends React.Component<Props, State> {\n  state: State = {};\n  handleClick = ({ key }: { key: string }) => {\n    const {\n      persistAfterClick,\n      saveNotebook,\n      downloadNotebook,\n      changeKernelByName,\n      currentKernelRef,\n      copyCell,\n      createCellBelow,\n      cutCell,\n      executeAllCells,\n      executeAllCellsBelow,\n      clearAllOutputs,\n      unhideAll,\n      openAboutModal,\n      pasteCell,\n      setTheme,\n      changeCellType,\n      restartKernel,\n      restartKernelAndClearOutputs,\n      restartKernelAndRunAllOutputs,\n      killKernel,\n      interruptKernel,\n      currentContentRef\n    } = this.props;\n    const [action, ...args] = parseActionKey(key);\n    switch (action) {\n      case MENU_ITEM_ACTIONS.SAVE_NOTEBOOK:\n        if (saveNotebook) {\n          saveNotebook({ contentRef: currentContentRef });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.DOWNLOAD_NOTEBOOK:\n        if (downloadNotebook) {\n          downloadNotebook({ contentRef: currentContentRef });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.COPY_CELL:\n        if (copyCell) {\n          copyCell({ contentRef: currentContentRef });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.CUT_CELL:\n        if (cutCell) {\n          cutCell({ contentRef: currentContentRef });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.PASTE_CELL:\n        if (pasteCell) {\n          pasteCell({ contentRef: currentContentRef });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.CREATE_CODE_CELL:\n        if (createCellBelow) {\n          createCellBelow({\n            cellType: \"code\",\n            source: \"\",\n            contentRef: currentContentRef\n          });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.CREATE_MARKDOWN_CELL:\n        if (createCellBelow) {\n          createCellBelow({\n            cellType: \"markdown\",\n            source: \"\",\n            contentRef: currentContentRef\n          });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.SET_CELL_TYPE_CODE:\n        if (changeCellType) {\n          changeCellType({\n            to: \"code\",\n            contentRef: currentContentRef\n          });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.SET_CELL_TYPE_MARKDOWN:\n        if (changeCellType) {\n          changeCellType({\n            to: \"markdown\",\n            contentRef: currentContentRef\n          });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.EXECUTE_ALL_CELLS:\n        if (executeAllCells) {\n          executeAllCells({ contentRef: currentContentRef });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.EXECUTE_ALL_CELLS_BELOW:\n        if (executeAllCellsBelow) {\n          executeAllCellsBelow({ contentRef: currentContentRef });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.UNHIDE_ALL:\n        if (unhideAll) {\n          unhideAll({\n            outputHidden: false,\n            inputHidden: false,\n            contentRef: currentContentRef\n          });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.CLEAR_ALL_OUTPUTS:\n        if (clearAllOutputs) {\n          clearAllOutputs({ contentRef: currentContentRef });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.SET_THEME_DARK:\n        if (setTheme) {\n          setTheme(\"dark\");\n        }\n        break;\n      case MENU_ITEM_ACTIONS.SET_THEME_LIGHT:\n        if (setTheme) {\n          setTheme(\"light\");\n        }\n        break;\n      case MENU_ITEM_ACTIONS.OPEN_ABOUT:\n        if (openAboutModal) {\n          openAboutModal();\n        }\n        break;\n      case MENU_ITEM_ACTIONS.INTERRUPT_KERNEL:\n        if (interruptKernel) {\n          interruptKernel({ kernelRef: currentKernelRef });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.RESTART_KERNEL:\n        if (restartKernel) {\n          restartKernel({\n            outputHandling: \"None\",\n            kernelRef: currentKernelRef,\n            contentRef: currentContentRef\n          });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.RESTART_AND_CLEAR_OUTPUTS:\n        if (restartKernelAndClearOutputs) {\n          restartKernelAndClearOutputs({\n            kernelRef: currentKernelRef,\n            contentRef: currentContentRef\n          });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.RESTART_AND_RUN_ALL_OUTPUTS:\n        if (restartKernelAndRunAllOutputs) {\n          restartKernelAndRunAllOutputs({\n            kernelRef: currentKernelRef,\n            contentRef: currentContentRef\n          });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.KILL_KERNEL:\n        if (killKernel) {\n          killKernel({ restarting: false, kernelRef: currentKernelRef });\n        }\n        break;\n      case MENU_ITEM_ACTIONS.CHANGE_KERNEL:\n        if (changeKernelByName) {\n          changeKernelByName({\n            oldKernelRef: currentKernelRef,\n            contentRef: currentContentRef,\n            kernelSpecName: args[0]\n          });\n        }\n        break;\n      default:\n        console.log(`unhandled action: ${action}`);\n    }\n\n    if (!persistAfterClick) {\n      this.setState({ openKeys: [] });\n    }\n  };\n  handleOpenChange = (openKeys: string[]) => {\n    if (!this.props.persistAfterClick) {\n      this.setState({ openKeys });\n    }\n  };\n  componentWillMount() {\n    // This ensures that we can still initially set defaultOpenKeys when\n    // persistAfterClick is true.\n    this.setState({ openKeys: this.props.defaultOpenKeys });\n  }\n  render() {\n    const {\n      currentKernelspecs,\n      defaultOpenKeys,\n      persistAfterClick\n    } = this.props;\n    const { openKeys } = this.state;\n    const menuProps: { [key: string]: any } = {\n      mode: \"horizontal\",\n      onClick: this.handleClick,\n      onOpenChange: this.handleOpenChange,\n      defaultOpenKeys,\n      selectable: false\n    };\n    if (!persistAfterClick) {\n      menuProps.openKeys = openKeys;\n    }\n    return (\n      <React.Fragment>\n        <StickyMenu {...menuProps}>\n          <SubMenu key={MENUS.FILE} title=\"File\">\n            <MenuItem>\n              <a\n                href=\"/nteract/edit\"\n                style={{\n                  textDecoration: \"none\",\n                  color: \"currentColor\"\n                }}\n                target=\"_blank\"\n              >\n                Open...\n              </a>\n            </MenuItem>\n            <MenuItem key={createActionKey(MENU_ITEM_ACTIONS.SAVE_NOTEBOOK)}>\n              Save\n            </MenuItem>\n            <MenuItem\n              key={createActionKey(MENU_ITEM_ACTIONS.DOWNLOAD_NOTEBOOK)}\n            >\n              Download (.ipynb)\n            </MenuItem>\n          </SubMenu>\n          <SubMenu key={MENUS.EDIT} title=\"Edit\">\n            <MenuItem key={createActionKey(MENU_ITEM_ACTIONS.CUT_CELL)}>\n              Cut Cell\n            </MenuItem>\n            <MenuItem key={createActionKey(MENU_ITEM_ACTIONS.COPY_CELL)}>\n              Copy Cell\n            </MenuItem>\n            <MenuItem key={createActionKey(MENU_ITEM_ACTIONS.PASTE_CELL)}>\n              Paste Cell Below\n            </MenuItem>\n            <Divider />\n            <SubMenu key={MENUS.EDIT_SET_CELL_TYPE} title=\"Cell Type\">\n              <MenuItem\n                key={createActionKey(MENU_ITEM_ACTIONS.SET_CELL_TYPE_CODE)}\n              >\n                Code\n              </MenuItem>\n              <MenuItem\n                key={createActionKey(MENU_ITEM_ACTIONS.SET_CELL_TYPE_MARKDOWN)}\n              >\n                Markdown\n              </MenuItem>\n            </SubMenu>\n          </SubMenu>\n          <SubMenu key={MENUS.VIEW} title=\"View\">\n            <SubMenu key={MENUS.VIEW_THEMES} title=\"themes\">\n              <MenuItem\n                key={createActionKey(MENU_ITEM_ACTIONS.SET_THEME_LIGHT)}\n              >\n                light\n              </MenuItem>\n              <MenuItem key={createActionKey(MENU_ITEM_ACTIONS.SET_THEME_DARK)}>\n                dark\n              </MenuItem>\n            </SubMenu>\n          </SubMenu>\n          <SubMenu key={MENUS.CELL} title=\"Cell\">\n            <MenuItem\n              key={createActionKey(MENU_ITEM_ACTIONS.EXECUTE_ALL_CELLS)}\n            >\n              Run All Cells\n            </MenuItem>\n            <MenuItem\n              key={createActionKey(MENU_ITEM_ACTIONS.EXECUTE_ALL_CELLS_BELOW)}\n            >\n              Run All Cells Below\n            </MenuItem>\n            <Divider />\n            <SubMenu key={MENUS.CELL_CREATE_CELL} title=\"New Cell\">\n              <MenuItem\n                key={createActionKey(MENU_ITEM_ACTIONS.CREATE_CODE_CELL)}\n              >\n                Code\n              </MenuItem>\n              <MenuItem\n                key={createActionKey(MENU_ITEM_ACTIONS.CREATE_MARKDOWN_CELL)}\n              >\n                Markdown\n              </MenuItem>\n            </SubMenu>\n            <Divider />\n\n            <MenuItem\n              key={createActionKey(MENU_ITEM_ACTIONS.CLEAR_ALL_OUTPUTS)}\n            >\n              Clear All Outputs\n            </MenuItem>\n\n            <MenuItem key={createActionKey(MENU_ITEM_ACTIONS.UNHIDE_ALL)}>\n              Unhide All Input and Output\n            </MenuItem>\n          </SubMenu>\n\n          <SubMenu key={MENUS.RUNTIME} title=\"Runtime\">\n            <MenuItem key={createActionKey(MENU_ITEM_ACTIONS.INTERRUPT_KERNEL)}>\n              Interrupt\n            </MenuItem>\n            <Divider />\n            <MenuItem key={createActionKey(MENU_ITEM_ACTIONS.KILL_KERNEL)}>\n              Halt\n            </MenuItem>\n            <MenuItem key={createActionKey(MENU_ITEM_ACTIONS.RESTART_KERNEL)}>\n              Restart\n            </MenuItem>\n            <MenuItem\n              key={createActionKey(MENU_ITEM_ACTIONS.RESTART_AND_CLEAR_OUTPUTS)}\n            >\n              Restart and Clear All Cells\n            </MenuItem>\n            <MenuItem\n              key={createActionKey(\n                MENU_ITEM_ACTIONS.RESTART_AND_RUN_ALL_OUTPUTS\n              )}\n            >\n              Restart and Run All Cells\n            </MenuItem>\n            <Divider />\n            <SubMenu\n              key={MENUS.RUNTIME_CHANGE_KERNEL}\n              title=\"Change Kernel\"\n              disabled={!currentKernelspecs}\n            >\n              {currentKernelspecs\n                ? currentKernelspecs.byName\n                    .keySeq()\n                    .map(name => [\n                      name,\n                      currentKernelspecs.byName.getIn([name, \"displayName\"])\n                    ])\n                    .toArray()\n                    .map(([name, displayName]) => {\n                      return (\n                        <MenuItem\n                          key={createActionKey(\n                            MENU_ITEM_ACTIONS.CHANGE_KERNEL,\n                            name\n                          )}\n                        >\n                          {displayName}\n                        </MenuItem>\n                      );\n                    })\n                : null}\n            </SubMenu>\n          </SubMenu>\n\n          <SubMenu key={MENUS.HELP} title=\"Help\">\n            <MenuItem key={createActionKey(MENU_ITEM_ACTIONS.OPEN_ABOUT)}>\n              About\n            </MenuItem>\n          </SubMenu>\n        </StickyMenu>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction makeMapStateToProps(\n  initialState: AppState,\n  initialProps: { contentRef: ContentRef }\n) {\n  const { contentRef } = initialProps;\n\n  const currentContentRef = contentRef;\n\n  const mapStateToProps = (state: AppState) => {\n    const content = state.core.entities.contents.byRef.get(contentRef);\n\n    // The current kernelspecs setup is _overkill_ as we're only ever going to\n    // have one collection of kernelspecs\n\n    const currentKernelspecsRef: KernelspecsRef | null =\n      state.core.currentKernelspecsRef || null;\n    const currentKernelspecs: RecordOf<\n      KernelspecsByRefRecordProps\n    > | null = currentKernelspecsRef\n      ? state.core.entities.kernelspecs.byRef.get(currentKernelspecsRef, null)\n      : null;\n\n    // This menu should only work for notebooks\n    if (!content || content.type !== \"notebook\") {\n      return {\n        currentContentRef,\n        currentKernelRef: null,\n        currentKernelspecs,\n        currentKernelspecsRef\n      };\n    }\n\n    const currentKernelRef = content.model.kernelRef;\n\n    return {\n      currentContentRef,\n      currentKernelRef,\n      currentKernelspecs,\n      currentKernelspecsRef\n    };\n  };\n\n  return mapStateToProps;\n}\n\nfunction makeMapDispatchToProps(\n  initialState: AppState,\n  initialProps: { contentRef: ContentRef }\n) {\n  const mapDispatchToProps = (dispatch: any) => ({\n    saveNotebook: (payload: { contentRef: string }) =>\n      dispatch(actions.save(payload)),\n    downloadNotebook: (payload: { contentRef: string }) =>\n      dispatch(actions.downloadContent(payload)),\n    executeCell: (payload: { id: string; contentRef: string }) =>\n      dispatch(actions.executeCell(payload)),\n    executeAllCells: (payload: { contentRef: string }) =>\n      dispatch(actions.executeAllCells(payload)),\n    executeAllCellsBelow: (payload: { contentRef: string }) =>\n      dispatch(actions.executeAllCellsBelow(payload)),\n    clearAllOutputs: (payload: { contentRef: string }) =>\n      dispatch(actions.clearAllOutputs(payload)),\n    unhideAll: (payload: {\n      outputHidden: boolean;\n      inputHidden: boolean;\n      contentRef: string;\n    }) => dispatch(actions.unhideAll(payload)),\n    cutCell: (payload: { id?: string; contentRef: string }) =>\n      dispatch(actions.cutCell(payload)),\n    copyCell: (payload: { id?: string; contentRef: string }) =>\n      dispatch(actions.copyCell(payload)),\n    pasteCell: (payload: { contentRef: string }) =>\n      dispatch(actions.pasteCell(payload)),\n    createCellBelow: (payload: {\n      id?: string | undefined;\n      cellType: CellType;\n      source: string;\n      contentRef: string;\n    }) => dispatch(actions.createCellBelow(payload)),\n    changeCellType: (payload: {\n      id?: string | undefined;\n      to: CellType;\n      contentRef: string;\n    }) => dispatch(actions.changeCellType(payload)),\n    setTheme: (theme: string) => dispatch(actions.setTheme(theme)),\n    openAboutModal: () =>\n      dispatch(actions.openModal({ modalType: MODAL_TYPES.ABOUT })),\n    changeKernelByName: (payload: {\n      kernelSpecName: any;\n      oldKernelRef?: string | null;\n      contentRef: string;\n    }) => dispatch(actions.changeKernelByName(payload)),\n    restartKernel: (payload: {\n      outputHandling: actions.RestartKernelOutputHandling;\n      kernelRef?: string | null;\n      contentRef: string;\n    }) => dispatch(actions.restartKernel(payload)),\n    restartKernelAndClearOutputs: (payload: {\n      kernelRef?: string | null;\n      contentRef: string;\n    }) =>\n      dispatch(\n        actions.restartKernel({ ...payload, outputHandling: \"Clear All\" })\n      ),\n    restartKernelAndRunAllOutputs: (payload: {\n      kernelRef?: string | null;\n      contentRef: string;\n    }) =>\n      dispatch(\n        actions.restartKernel({ ...payload, outputHandling: \"Run All\" })\n      ),\n    killKernel: (payload: { restarting: boolean; kernelRef?: string | null }) =>\n      dispatch(actions.killKernel(payload)),\n    interruptKernel: (payload: { kernelRef?: string | null }) =>\n      dispatch(actions.interruptKernel(payload))\n  });\n  return mapDispatchToProps;\n}\n\nexport const NotebookMenu = connect(\n  makeMapStateToProps,\n  makeMapDispatchToProps\n)(PureNotebookMenu);\n\n// We export this for testing purposes.\nexport { PureNotebookMenu };\n\nexport default NotebookMenu;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalMenuStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'FontAwesome';\n    src: url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.2.0/fonts/fontawesome-webfont.eot');\n    src: url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.2.0/fonts/fontawesome-webfont.eot?#iefix') format('embedded-opentype'), url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.2.0/fonts/fontawesome-webfont.woff') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.2.0/fonts/fontawesome-webfont.ttf') format('truetype'), url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.2.0/fonts/fontawesome-webfont.svg?#fontawesomeregular') format('svg');\n    font-weight: normal;\n    font-style: normal;\n  }\n\n  .rc-menu {\n    outline: none;\n    margin: 0;\n    padding-left: 0;\n    list-style: none;\n    border: 1px solid var(--theme-app-border);\n    box-shadow: none;\n    color: var(--theme-menu-fg);\n    width: 100%;\n  }\n  .rc-menu-hidden {\n    display: none;\n  }\n  .rc-menu-collapse {\n    overflow: hidden;\n  }\n  .rc-menu-collapse-active {\n    transition: height 0.3s ease-out;\n  }\n  .rc-menu-item-group-list {\n    margin: 0;\n    padding: 0;\n  }\n  .rc-menu-item-group-title {\n    color: #999;\n    line-height: 1.5;\n    padding: 8px 10px;\n    border-bottom: 1px solid #dedede;\n  }\n  .rc-menu-item-active,\n  .rc-menu-submenu-active > .rc-menu-submenu-title {\n    background-color: var(--theme-menu-bg-focus);\n  }\n  .rc-menu-item-selected {\n    background-color: var(--theme-menu-bg-focus);\n    transform: translateZ(0);\n  }\n  .rc-menu-submenu-selected {\n    background-color: var(--theme-menu-bg-focus);\n  }\n  .rc-menu > li.rc-menu-submenu {\n    padding: 0;\n  }\n  .rc-menu-horizontal.rc-menu-sub,\n  .rc-menu-vertical.rc-menu-sub,\n  .rc-menu-vertical-left.rc-menu-sub,\n  .rc-menu-vertical-right.rc-menu-sub {\n    min-width: 160px;\n    margin-top: 0;\n  }\n  .rc-menu-item,\n  .rc-menu-submenu-title {\n    margin: 0;\n    position: relative;\n    display: block;\n    padding: 7px 7px 7px 16px;\n    white-space: nowrap;\n    font-size: var(--nt-font-size-m);\n    user-select: none;\n  }\n  .rc-menu-item.rc-menu-item-disabled,\n  .rc-menu-submenu-title.rc-menu-item-disabled,\n  .rc-menu-item.rc-menu-submenu-disabled,\n  .rc-menu-submenu-title.rc-menu-submenu-disabled {\n    color: #777 !important;\n  }\n  .rc-menu > .rc-menu-item-divider {\n    height: 1px;\n    margin: 1px 0;\n    overflow: hidden;\n    padding: 0;\n    line-height: 0;\n    background-color: #e5e5e5;\n  }\n  .rc-menu-submenu-popup {\n    position: absolute;\n  }\n  .rc-menu-submenu > .rc-menu {\n    background-color: var(--theme-menu-bg);\n  }\n  .rc-menu .rc-menu-submenu-title .anticon,\n  .rc-menu .rc-menu-item .anticon {\n    width: 14px;\n    height: 14px;\n    margin-right: 8px;\n    top: -1px;\n  }\n  .rc-menu-submenu,\n  .rc-menu-item,\n  .rc-menu-submenu-title {\n    /*\n      * TODO: the app should be structured in such a way that a separate stacking\n      * context is created and we don't need to battle it out for z-index in this\n      * way...\n      */\n    z-index: 1000;\n  }\n  .rc-menu-horizontal {\n    background-color: var(--theme-menu-bg);\n    border: none;\n    border-bottom: 1px solid var(--theme-app-border);\n    box-shadow: none;\n    padding: 0 var(--nt-spacing-xs);\n  }\n  .rc-menu-horizontal > .rc-menu-item,\n  .rc-menu-horizontal > .rc-menu-submenu > .rc-menu-submenu-title {\n    padding: 8px 15px;\n  }\n  .rc-menu-horizontal > .rc-menu-submenu,\n  .rc-menu-horizontal > .rc-menu-item {\n    float: left;\n  }\n  .rc-menu-horizontal > .rc-menu-submenu-active,\n  .rc-menu-horizontal > .rc-menu-item-active {\n    background-color: #f3f5f7;\n  }\n  .rc-menu-horizontal:after {\n    content: \"\\\\20\";\n    display: block;\n    height: 0;\n    clear: both;\n  }\n  .rc-menu-vertical,\n  .rc-menu-vertical-left,\n  .rc-menu-vertical-right,\n  .rc-menu-inline {\n    padding: 12px 0;\n  }\n  .rc-menu-vertical > .rc-menu-item,\n  .rc-menu-vertical-left > .rc-menu-item,\n  .rc-menu-vertical-right > .rc-menu-item,\n  .rc-menu-inline > .rc-menu-item,\n  .rc-menu-vertical > .rc-menu-submenu > .rc-menu-submenu-title,\n  .rc-menu-vertical-left > .rc-menu-submenu > .rc-menu-submenu-title,\n  .rc-menu-vertical-right > .rc-menu-submenu > .rc-menu-submenu-title,\n  .rc-menu-inline > .rc-menu-submenu > .rc-menu-submenu-title {\n    padding: 8px 40px 8px 10px;\n  }\n  .rc-menu-vertical .rc-menu-submenu-arrow,\n  .rc-menu-vertical-left .rc-menu-submenu-arrow,\n  .rc-menu-vertical-right .rc-menu-submenu-arrow,\n  .rc-menu-inline .rc-menu-submenu-arrow {\n    display: inline-block;\n    font: normal normal normal 14px/1 FontAwesome;\n    font-size: inherit;\n    vertical-align: baseline;\n    text-align: center;\n    text-transform: none;\n    text-rendering: auto;\n    position: absolute;\n    right: 16px;\n    line-height: 1.5em;\n  }\n  .rc-menu-vertical .rc-menu-submenu-arrow:before,\n  .rc-menu-vertical-left .rc-menu-submenu-arrow:before,\n  .rc-menu-vertical-right .rc-menu-submenu-arrow:before,\n  .rc-menu-inline .rc-menu-submenu-arrow:before {\n    content: \"\\\\f0da\";\n  }\n  .rc-menu-inline .rc-menu-submenu-arrow {\n    transform: rotate(90deg);\n    transition: transform 0.3s;\n  }\n  .rc-menu-inline\n    .rc-menu-submenu-open\n    > .rc-menu-submenu-title\n    .rc-menu-submenu-arrow {\n    transform: rotate(-90deg);\n  }\n  .rc-menu-vertical.rc-menu-sub,\n  .rc-menu-vertical-left.rc-menu-sub,\n  .rc-menu-vertical-right.rc-menu-sub {\n    padding: 0;\n    width: auto;\n    position: relative;\n    top: 0;\n  }\n  .rc-menu-sub.rc-menu-inline {\n    padding: 0;\n    border: none;\n    border-radius: 0;\n    box-shadow: none;\n  }\n  .rc-menu-sub.rc-menu-inline > .rc-menu-item,\n  .rc-menu-sub.rc-menu-inline\n    > .rc-menu-submenu\n    > .rc-menu-submenu-title {\n    padding-top: 8px;\n    padding-bottom: 8px;\n    padding-right: 0;\n  }\n  .rc-menu-open-slide-up-enter,\n  .rc-menu-open-slide-up-appear {\n    animation-duration: 0.3s;\n    animation-fill-mode: both;\n    transform-origin: 0 0;\n    opacity: 0;\n    animation-timing-function: cubic-bezier(0.08, 0.82, 0.17, 1);\n    animation-play-state: paused;\n  }\n  .rc-menu-open-slide-up-leave {\n    animation-duration: 0.3s;\n    animation-fill-mode: both;\n    transform-origin: 0 0;\n    opacity: 1;\n    animation-timing-function: cubic-bezier(0.6, 0.04, 0.98, 0.34);\n    animation-play-state: paused;\n  }\n  .rc-menu-open-slide-up-enter.rc-menu-open-slide-up-enter-active,\n  .rc-menu-open-slide-up-appear.rc-menu-open-slide-up-appear-active {\n    animation-name: rcMenuOpenSlideUpIn;\n    animation-play-state: running;\n  }\n  .rc-menu-open-slide-up-leave.rc-menu-open-slide-up-leave-active {\n    animation-name: rcMenuOpenSlideUpOut;\n    animation-play-state: running;\n  }\n  @keyframes rcMenuOpenSlideUpIn {\n    0% {\n      opacity: 0;\n      transform-origin: 0% 0%;\n      transform: scaleY(0);\n    }\n    100% {\n      opacity: 1;\n      transform-origin: 0% 0%;\n      transform: scaleY(1);\n    }\n  }\n  @keyframes rcMenuOpenSlideUpOut {\n    0% {\n      opacity: 1;\n      transform-origin: 0% 0%;\n      transform: scaleY(1);\n    }\n    100% {\n      opacity: 0;\n      transform-origin: 0% 0%;\n      transform: scaleY(0);\n    }\n  }\n  .rc-menu-open-zoom-enter,\n  .rc-menu-open-zoom-appear {\n    opacity: 0;\n    animation-duration: 0.3s;\n    animation-fill-mode: both;\n    transform-origin: 0 0;\n    animation-timing-function: cubic-bezier(0.08, 0.82, 0.17, 1);\n    animation-play-state: paused;\n  }\n  .rc-menu-open-zoom-leave {\n    animation-duration: 0.3s;\n    animation-fill-mode: both;\n    transform-origin: 0 0;\n    animation-timing-function: cubic-bezier(0.6, 0.04, 0.98, 0.34);\n    animation-play-state: paused;\n  }\n  .rc-menu-open-zoom-enter.rc-menu-open-zoom-enter-active,\n  .rc-menu-open-zoom-appear.rc-menu-open-zoom-appear-active {\n    animation-name: rcMenuOpenZoomIn;\n    animation-play-state: running;\n  }\n  .rc-menu-open-zoom-leave.rc-menu-open-zoom-leave-active {\n    animation-name: rcMenuOpenZoomOut;\n    animation-play-state: running;\n  }\n  @keyframes rcMenuOpenZoomIn {\n    0% {\n      opacity: 0;\n      transform: scale(0, 0);\n    }\n    100% {\n      opacity: 1;\n      transform: scale(1, 1);\n    }\n  }\n  @keyframes rcMenuOpenZoomOut {\n    0% {\n      transform: scale(1, 1);\n    }\n    100% {\n      opacity: 0;\n      transform: scale(0, 0);\n    }\n  }\n`;\n","import { Book, FileDirectory, FileText } from \"@nteract/octicons\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\n\ninterface IconProps {\n  color: string;\n  fileType: \"unknown\" | \"notebook\" | \"directory\" | \"file\" | \"dummy\";\n}\n\nconst IconWrapper = styled.span.attrs(props => ({\n  style: { color: props.color }\n}))`\n  vertical-align: middle;\n  text-align: center;\n  opacity: 0.95;\n`;\n\nIconWrapper.displayName = \"IconWrapper\";\n\nexport class Icon extends React.PureComponent<IconProps> {\n  static defaultProps: Partial<IconProps> = {\n    color: \"#0366d6\",\n    fileType: \"file\"\n  };\n\n  render() {\n    let icon = <FileText />;\n    switch (this.props.fileType) {\n      case \"notebook\":\n        icon = <Book />;\n        break;\n      case \"directory\":\n        icon = <FileDirectory />;\n        break;\n      case \"file\":\n        icon = <FileText />;\n        break;\n      default:\n        icon = <FileText />;\n    }\n\n    return <IconWrapper color={this.props.color}>{icon}</IconWrapper>;\n  }\n}\n\nexport default Icon;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport { areComponentsEqual } from \"react-hot-loader\";\n\nimport { Icon } from \"./icon\";\ninterface EntryProps {\n  children: React.ReactNode;\n}\n\nconst DirectoryEntry = styled.tr`\n  border-top: 1px solid #eaecef;\n\n  &:first-child {\n    border-top: none;\n  }\n  &:last-child {\n    border-bottom: none;\n  }\n\n  &:hover {\n    background-color: #f6f8fa;\n    transition: background-color 0.1s ease-out;\n  }\n\n  & td {\n    padding-top: 8px;\n    padding-bottom: 8px;\n    vertical-align: middle;\n    width: auto;\n    padding-left: 8px;\n  }\n\n  & td:last-child {\n    text-align: right;\n    padding-right: 10px;\n  }\n`;\n\nDirectoryEntry.displayName = \"DirectoryEntry\";\n\nexport class Entry extends React.PureComponent<EntryProps> {\n  static defaultProps = {\n    children: null\n  };\n\n  render() {\n    return (\n      <DirectoryEntry>\n        {/* Wrap each child in a `<td>` */}\n        {React.Children.map(this.props.children, child => {\n          if (child && areComponentsEqual((child as any).type, Icon)) {\n            return <td style={{ width: \"25px\" }}>{child}</td>;\n          }\n          return <td>{child}</td>;\n        })}\n      </DirectoryEntry>\n    );\n  }\n}\n\nexport default Entry;\n","import * as React from \"react\";\nimport TimeAgo, { Formatter, Unit, Suffix } from \"react-timeago\";\nimport styled from \"styled-components\";\n\ninterface LastSavedProps {\n  lastModified?: Date | null;\n}\n\nconst TimeAgoTD = styled.span`\n  color: #6a737d;\n`;\n\n// Rather than showing a continual counter like \"0 seconds ago\"\n// followed by \"1 seconds ago\", and so on, just show \"less than a minute\"\nconst slowDownFormatter: Formatter = (\n  value: number,\n  unit: Unit,\n  suffix: Suffix,\n  epochMiliseconds: number,\n  nextFormatter?: Formatter\n) => {\n  if (unit === \"second\") {\n    return \"less than a minute\";\n  }\n\n  // This should be defined but we'll play it safe given the type definition\n  if (!nextFormatter) {\n    return `${value} ${unit} ${suffix}`;\n  }\n\n  return nextFormatter(value, unit, suffix, epochMiliseconds);\n};\n\nTimeAgoTD.displayName = \"TimeAgoTD\";\n\nexport class LastSaved extends React.PureComponent<LastSavedProps> {\n  static defaultProps = {\n    lastModified: null\n  };\n\n  render() {\n    return (\n      <TimeAgoTD>\n        {this.props.lastModified != null && (\n          <TimeAgo\n            date={this.props.lastModified}\n            formatter={slowDownFormatter}\n          />\n        )}\n      </TimeAgoTD>\n    );\n  }\n}\n\nexport default LastSaved;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\ninterface ListingProps {\n  children: React.ReactNode;\n}\n\nconst ListingRoot = styled.table`\n  margin: 0px 0px 20px 0px;\n  width: 100%;\n  border-collapse: collapse;\n  border-radius: 2px;\n  border-spacing: 0;\n  table-layout: auto;\n`;\n\nListingRoot.displayName = \"ListingRoot\";\n\nexport class Listing extends React.PureComponent<ListingProps> {\n  static defaultProps = {\n    children: null\n  };\n\n  render() {\n    return (\n      <ListingRoot>\n        <tbody>{this.props.children}</tbody>\n      </ListingRoot>\n    );\n  }\n}\n\nexport default Listing;\n","import styled from \"styled-components\";\n\nexport const Name = styled.span`\n  vertical-align: middle;\n\n  a {\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n    outline-width: 0;\n  }\n`;\n\nName.displayName = \"Name\";\n\nexport default Name;\n","import { NewNotebookNavigation } from \"@nteract/connected-components\";\nimport {\n  AppState,\n  ContentRef,\n  DirectoryContentRecord,\n  JupyterHostRecord,\n  KernelspecProps,\n  KernelspecRecord,\n  selectors\n} from \"@nteract/core\";\nimport {\n  Entry,\n  Icon,\n  LastSaved,\n  Listing,\n  Name\n} from \"@nteract/directory-listing\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport urljoin from \"url-join\";\n\nimport { openNotebook } from \"../triggers/open-notebook\";\n\nconst ListingRoot = styled.div`\n  margin-top: 2rem;\n  padding-left: 2rem;\n  padding-right: 2rem;\n`;\n\ninterface LightDirectoryEntry {\n  last_modified: Date | null;\n  name: string;\n  path: string;\n  type: \"notebook\" | \"dummy\" | \"directory\" | \"file\" | \"unknown\";\n}\n\ntype LightDirectoryEntries = LightDirectoryEntry[];\n\ninterface DirectoryProps {\n  appBase: string;\n  content: DirectoryContentRecord;\n  host: JupyterHostRecord;\n  appVersion: string;\n  contentRef: ContentRef;\n  contents: LightDirectoryEntries;\n}\n\nexport class DirectoryApp extends React.PureComponent<DirectoryProps> {\n  openNotebook = (ks: KernelspecRecord | KernelspecProps) => {\n    openNotebook(this.props.host, ks, {\n      appBase: this.props.appBase,\n      appVersion: this.props.appVersion,\n      // Since we're looking at a directory, the base dir is the directory we are in\n      baseDir: this.props.content.filepath\n    });\n  };\n\n  render() {\n    const atRoot = this.props.content.filepath === \"/\";\n    const dotdothref = urljoin(\n      this.props.appBase,\n      // Make sure leading / and .. don't navigate outside of the appBase\n      urljoin(this.props.content.filepath, \"..\")\n    );\n    const dotdotlink = (\n      <a href={dotdothref} title=\"Navigate down a directory\" role=\"button\">\n        {\"..\"}\n      </a>\n    );\n\n    return (\n      <React.Fragment>\n        <NewNotebookNavigation onClick={this.openNotebook} />\n        <ListingRoot>\n          <Listing>\n            {atRoot ? null : (\n              // TODO: Create a contentRef for `..`, even though it's a placeholder\n              // When we're not at the root of the tree, show `..`\n              <Entry>\n                <Icon fileType={\"directory\"} />\n                <Name>{dotdotlink}</Name>\n                <LastSaved lastModified={null} />\n              </Entry>\n            )}\n            {this.props.contents.map((entry, index) => {\n              const link = (\n                <a\n                  href={urljoin(this.props.appBase, entry.path)}\n                  // When it's a notebook, we open a new tab\n                  target={entry.type === \"notebook\" ? \"_blank\" : undefined}\n                >\n                  {entry.name}\n                </a>\n              );\n\n              return (\n                <Entry key={index}>\n                  <Icon fileType={entry.type} />\n                  <Name>{link}</Name>\n                  <LastSaved lastModified={entry.last_modified} />\n                </Entry>\n              );\n            })}\n          </Listing>\n        </ListingRoot>\n      </React.Fragment>\n    );\n  }\n}\n\ninterface InitialProps {\n  contentRef: ContentRef;\n  appBase: string;\n}\n\nconst makeMapStateToDirectoryProps = (\n  initialState: AppState,\n  initialProps: InitialProps\n): ((state: AppState) => DirectoryProps) => {\n  const { contentRef, appBase } = initialProps;\n  const mapStateToDirectoryProps = (state: AppState) => {\n    const content = selectors.content(state, initialProps);\n    const contents: LightDirectoryEntry[] = [];\n    const host = selectors.currentHost(state);\n\n    if (host.type !== \"jupyter\") {\n      throw new Error(\"This component only works with jupyter servers\");\n    }\n\n    if (!content || content.type !== \"directory\") {\n      throw new Error(\n        \"The directory component should only be used with directory contents\"\n      );\n    }\n\n    content.model.items.map((entryRef: ContentRef) => {\n      const row = selectors.content(state, { contentRef: entryRef });\n      if (!row) {\n        return {\n          last_modified: new Date(),\n          name: \"\",\n          path: \"\",\n          type: \"\"\n        };\n      }\n\n      if (row.type !== \"dummy\") {\n        return null;\n      }\n\n      contents.push({\n        last_modified: row.lastSaved,\n        name: row.filepath,\n        path: row.filepath,\n        type: row.assumedType\n      });\n    });\n\n    return {\n      appBase,\n      appVersion: selectors.appVersion(state),\n      content,\n      contentRef,\n      contents,\n      host\n    };\n  };\n  return mapStateToDirectoryProps;\n};\n\nexport const ConnectedDirectory = connect(makeMapStateToDirectoryProps)(\n  DirectoryApp\n);\n\nexport default ConnectedDirectory;\n","import { Notebook } from \"@nteract/commutable\";\nimport {\n  JupyterHostRecord,\n  KernelspecProps,\n  KernelspecRecord,\n  selectors\n} from \"@nteract/core\";\n// TODO: Make a proper epic\nimport { contents, sessions } from \"rx-jupyter\";\nimport { forkJoin } from \"rxjs\";\nimport { first, map, mergeMap } from \"rxjs/operators\";\nimport urljoin from \"url-join\";\n\ninterface SessionPayload {\n  kernel: {\n    id: string | null;\n    name: string | null;\n  };\n  name: string;\n  path: string;\n  type: string;\n}\n\nexport function openNotebook(\n  host: JupyterHostRecord,\n  ks: KernelspecRecord | KernelspecProps,\n  props: {\n    appVersion: string;\n    baseDir: string;\n    appBase: string;\n  }\n): void {\n  const serverConfig: any = selectors.serverConfig(host);\n\n  // The notebook they get to start with\n  const notebook: Notebook = {\n    cells: [\n      {\n        cell_type: \"code\",\n        execution_count: null,\n        metadata: {},\n        outputs: [],\n        source: [\"\"]\n      }\n    ],\n    metadata: {\n      kernelspec: {\n        display_name: ks.displayName,\n        language: ks.language,\n        name: ks.name\n      },\n      nteract: {\n        version: props.appVersion\n      }\n    },\n    nbformat: 4,\n    nbformat_minor: 2\n  };\n\n  // NOTE: For the sake of expediency, all the logic to launch a new is\n  //       happening here instead of an epic\n  contents\n    // Create UntitledXYZ.ipynb by letting the server do it\n    .create<\"notebook\">(serverConfig, props.baseDir, {\n      type: \"notebook\"\n      // NOTE: The contents API appears to ignore the content field for new\n      // notebook creation.\n      //\n      // It would be nice if it could take it. Instead we'll create a new\n      // notebook for the user and redirect them after we've put in the\n      // content we want.\n      //\n      // Amusingly, this could be used for more general templates to, as\n      // well as introduction notebooks.\n    })\n    .pipe(\n      // We only expect one response, it's ajax and we want this subscription\n      // to finish so we don't have to unsubscribe\n      first(),\n      mergeMap(({ response }) => {\n        const filepath: string = response.path;\n\n        const sessionPayload: SessionPayload = {\n          kernel: {\n            id: null,\n            name: ks.name\n          },\n          name: \"\",\n          path: filepath,\n          type: \"notebook\"\n        };\n\n        return forkJoin(\n          // Get their kernel started up\n          sessions.create(serverConfig, sessionPayload),\n          // Save the initial notebook document\n          contents.save(serverConfig, filepath, {\n            content: notebook,\n            type: \"notebook\"\n          })\n        );\n      }),\n      first(),\n      map(([_session, content]) => {\n        const { response } = content;\n\n        if (content.status > 299 || typeof response === \"string\") {\n          // hack around this old hack around for creating a notebook\n          // from the directory ideally this would be in a proper epic\n          // instead of leaky async code here\n          const message: string[] = [\"Failed to create notebook due to: \"];\n\n          if (typeof response === \"string\") {\n            message.push(response);\n          } else {\n            message.push(JSON.stringify(response));\n          }\n\n          alert(message.join(\"\"));\n\n          return;\n        }\n\n        const url: string = urljoin(\n          props.appBase,\n          // Actual file\n          response.path\n        );\n\n        // Always open new notebooks in new windows\n        const win = window.open(url, \"_blank\");\n\n        // If they block pop-ups, then we weren't allowed to open the window\n        if (win === null) {\n          window.location.href = url;\n        }\n      })\n    )\n    .subscribe();\n}\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport { actions, ContentRef } from \"@nteract/core\";\n\n// Show nothing while loading the notebook app\nconst NotebookPlaceholder = (props: any) => null;\n\ninterface State {\n  App: React.ComponentType<{ contentRef: ContentRef }>;\n}\n\ninterface Props {\n  contentRef: ContentRef;\n  addTransform(component: any): void;\n}\n\nclass Notebook extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      App: NotebookPlaceholder\n    };\n  }\n\n  loadApp() {\n    import(/* webpackChunkName: \"notebook-app-component\" */ \"@nteract/notebook-app-component\").then(\n      module => {\n        this.setState({ App: module.default });\n      }\n    );\n  }\n\n  loadTransforms() {\n    import(/* webpackChunkName: \"plotly\" */ \"@nteract/transform-plotly\").then(\n      module => {\n        this.props.addTransform(module.default);\n        this.props.addTransform(module.PlotlyNullTransform);\n      }\n    );\n\n    import(/* webpackChunkName: \"tabular-dataresource\" */ \"@nteract/data-explorer\").then(\n      module => {\n        this.props.addTransform(module.default);\n      }\n    );\n\n    import(/* webpackChunkName: \"jupyter-widgets\" */ \"@nteract/jupyter-widgets\").then(\n      module => {\n        this.props.addTransform(module.WidgetDisplay);\n      }\n    );\n\n    import(\"@nteract/transform-model-debug\").then(module => {\n      this.props.addTransform(module.default);\n    });\n\n    import(/* webpackChunkName: \"vega-transform\" */ \"@nteract/transform-vega\").then(\n      module => {\n        this.props.addTransform(module.VegaLite1);\n        this.props.addTransform(module.VegaLite2);\n        this.props.addTransform(module.Vega2);\n        this.props.addTransform(module.Vega3);\n      }\n    );\n\n    // TODO: The geojson transform will likely need some work because of the basemap URL(s)\n    // import GeoJSONTransform from \"@nteract/transform-geojson\";\n  }\n\n  componentDidMount() {\n    this.loadApp();\n    this.loadTransforms();\n  }\n\n  render() {\n    const App = this.state.App;\n\n    return <App contentRef={this.props.contentRef} />;\n  }\n}\n\ninterface InitialProps {\n  contentRef: ContentRef;\n}\n\nconst makeMapDispatchToProps = (\n  initialDispatch: Dispatch,\n  initialProps: InitialProps\n) => {\n  const mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n      addTransform: (transform: React.ComponentType & { MIMETYPE: string }) => {\n        return dispatch(\n          actions.addTransform({\n            mediaType: transform.MIMETYPE,\n            component: transform\n          })\n        );\n      }\n    };\n  };\n  return mapDispatchToProps;\n};\n\nexport default connect(\n  null,\n  makeMapDispatchToProps\n)(Notebook);\n","import { actions, AppState, ContentRef, selectors } from \"@nteract/core\";\nimport { MonacoEditorProps } from \"@nteract/monaco-editor\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport styled from \"styled-components\";\n\nconst EditorContainer = styled.div`\n  position: absolute;\n  left: 0;\n  height: 100%;\n  width: 100%;\n\n  .monaco {\n    height: 100%;\n  }\n`;\n\ninterface MappedStateProps {\n  mimetype: string;\n  text: string;\n  contentRef: ContentRef;\n  theme: \"light\" | \"dark\";\n}\n\ninterface MappedDispatchProps {\n  handleChange: (value: string) => void;\n}\n\ntype TextFileProps = MappedStateProps & MappedDispatchProps;\n\ninterface TextFileState {\n  Editor: React.ComponentType<MonacoEditorProps>;\n}\n\nclass EditorPlaceholder extends React.PureComponent<MonacoEditorProps> {\n  render() {\n    // TODO: Show a little blocky placeholder\n    return null;\n  }\n}\n\nexport class TextFile extends React.PureComponent<\n  TextFileProps,\n  TextFileState\n> {\n  constructor(props: TextFileProps) {\n    super(props);\n    this.state = {\n      Editor: EditorPlaceholder\n    };\n  }\n\n  handleChange(source: string) {\n    this.props.handleChange(source);\n  }\n  componentDidMount() {\n    import(/* webpackChunkName: \"monaco-editor\" */ \"@nteract/monaco-editor\").then(\n      module => {\n        this.setState({ Editor: module.default });\n      }\n    );\n  }\n  render() {\n    const Editor = this.state.Editor;\n\n    return (\n      <EditorContainer className=\"nteract-editor\">\n        <Editor\n          theme={this.props.theme === \"dark\" ? \"vs-dark\" : \"vs\"}\n          mode={this.props.mimetype}\n          editorFocused\n          value={this.props.text}\n          onChange={this.handleChange.bind(this)}\n        />\n      </EditorContainer>\n    );\n  }\n}\n\ninterface InitialProps {\n  contentRef: ContentRef;\n}\n\nfunction makeMapStateToTextFileProps(\n  initialState: AppState,\n  initialProps: InitialProps\n): (state: AppState) => MappedStateProps {\n  const { contentRef } = initialProps;\n\n  const mapStateToTextFileProps = (state: AppState) => {\n    const content = selectors.content(state, { contentRef });\n    if (!content || content.type !== \"file\") {\n      throw new Error(\"The text file component must have content\");\n    }\n\n    const text = content.model ? content.model.text : \"\";\n\n    return {\n      contentRef,\n      mimetype: content.mimetype != null ? content.mimetype : \"text/plain\",\n      text,\n      theme: selectors.currentTheme(state)\n    };\n  };\n  return mapStateToTextFileProps;\n}\n\nconst makeMapDispatchToTextFileProps = (\n  initialDispatch: Dispatch,\n  initialProps: InitialProps\n): ((dispatch: Dispatch) => MappedDispatchProps) => {\n  const { contentRef } = initialProps;\n\n  const mapDispatchToTextFileProps = (dispatch: Dispatch) => {\n    return {\n      handleChange: (source: string) => {\n        dispatch(\n          actions.updateFileText({\n            contentRef,\n            text: source\n          })\n        );\n      }\n    };\n  };\n  return mapDispatchToTextFileProps;\n};\n\nconst ConnectedTextFile = connect<\n  MappedStateProps,\n  MappedDispatchProps,\n  InitialProps,\n  AppState\n>(\n  makeMapStateToTextFileProps,\n  makeMapDispatchToTextFileProps\n)(TextFile);\n\nexport function handles(mimetype: string) {\n  return (\n    mimetype.startsWith(\"text/\") ||\n    mimetype.startsWith(\"application/javascript\") ||\n    mimetype.startsWith(\"application/json\")\n  );\n}\n\nexport default ConnectedTextFile;\n","import { AppState, ContentRef, selectors } from \"@nteract/core\";\nimport { dirname } from \"path\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { default as Notebook } from \"../notebook\";\nimport * as TextFile from \"./text-file\";\n\nconst PaddedContainer = styled.div`\n  padding-left: var(--nt-spacing-l, 10px);\n  padding-top: var(--nt-spacing-m, 10px);\n  padding-right: var(--nt-spacing-m, 10px);\n`;\n\nconst JupyterExtensionContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: stretch;\n  height: -webkit-fill-available;\n`;\n\nconst JupyterExtensionChoiceContainer = styled.div`\n  flex: 1 1 auto;\n  overflow: auto;\n`;\n\ninterface FileProps {\n  type: \"notebook\" | \"file\" | \"dummy\";\n  contentRef: ContentRef;\n  baseDir: string;\n  appBase: string;\n  displayName?: string;\n  mimetype?: string | null;\n  lastSavedStatement: string;\n}\n\nexport class File extends React.PureComponent<FileProps> {\n  getChoice = () => {\n    let choice = null;\n\n    // notebooks don't report a mimetype so we'll use the content.type\n    if (this.props.type === \"notebook\") {\n      choice = <Notebook contentRef={this.props.contentRef} />;\n    } else if (this.props.type === \"dummy\") {\n      choice = null;\n    } else if (\n      this.props.mimetype == null ||\n      !TextFile.handles(this.props.mimetype)\n    ) {\n      // TODO: Redirect to /files/ endpoint for them to download the file or view\n      //       as is\n      choice = (\n        <PaddedContainer>\n          <pre>Can not render this file type</pre>\n        </PaddedContainer>\n      );\n    } else {\n      choice = <TextFile.default contentRef={this.props.contentRef} />;\n    }\n\n    return choice;\n  };\n\n  render() {\n    const choice = this.getChoice();\n\n    // Right now we only handle one kind of editor\n    // If/when we support more modes, we would case them off here\n    return (\n      <React.Fragment>\n        <JupyterExtensionContainer>\n          <JupyterExtensionChoiceContainer>\n            {choice}\n          </JupyterExtensionChoiceContainer>\n        </JupyterExtensionContainer>\n      </React.Fragment>\n    );\n  }\n}\n\ninterface InitialProps {\n  contentRef: ContentRef;\n  appBase: string;\n}\n\n// Since the contentRef stays unique for the duration of this file,\n// we use the makeMapStateToProps pattern to optimize re-render\nconst makeMapStateToProps = (\n  initialState: AppState,\n  initialProps: InitialProps\n) => {\n  const { contentRef, appBase } = initialProps;\n\n  const mapStateToProps = (state: AppState) => {\n    const content = selectors.content(state, initialProps);\n\n    if (!content || content.type === \"directory\") {\n      throw new Error(\n        \"The file component should only be used with files and notebooks\"\n      );\n    }\n\n    return {\n      appBase,\n      contentRef,\n      baseDir: dirname(content.filepath),\n      displayName: content.filepath.split(\"/\").pop(),\n      lastSavedStatement: \"recently\",\n      mimetype: content.mimetype,\n      type: content.type\n    };\n  };\n\n  return mapStateToProps;\n};\n\nexport const ConnectedFile = connect(makeMapStateToProps)(File);\n\nexport default ConnectedFile;\n","import * as React from \"react\";\n\ninterface WrapperProps {\n  children: React.ReactNode;\n  outerProps: React.SVGAttributes<any>;\n  width: number;\n  height: number;\n  viewBox: string;\n}\n\nexport const SVGWrapper = (props: WrapperProps) => {\n  return (\n    <span>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={props.width}\n        height={props.height}\n        viewBox={props.viewBox}\n        {...props.outerProps}\n        style={Object.assign(\n          {\n            fill: \"currentColor\",\n            display: \"inline-block\",\n            verticalAlign: \"text-bottom\"\n          },\n          props.outerProps.style\n        )}\n      >\n        {props.children}\n      </svg>\n    </span>\n  );\n};\n\nexport const SavingIcon = (props: React.SVGAttributes<any>) => (\n  <SVGWrapper width={16} height={16} viewBox=\"0 0 24 24\" outerProps={props}>\n    <title>Saving...</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n    />\n  </SVGWrapper>\n);\n\nexport const LoadingIcon = (props: React.SVGAttributes<any>) => (\n  <SVGWrapper width={16} height={16} viewBox=\"0 0 24 24\" outerProps={props}>\n    <title>Loading...</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"\n    />\n  </SVGWrapper>\n);\n\nexport const ErrorIcon = (props: React.SVGAttributes<any>) => (\n  <SVGWrapper width={16} height={16} viewBox=\"0 0 24 24\" outerProps={props}>\n    <title>Error</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n    />\n  </SVGWrapper>\n);\n","import {\n  Button,\n  Classes,\n  EditableText,\n  Icon,\n  Intent,\n  Label,\n  Overlay\n} from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\n\ninterface IEditableTitleOverlayProps {\n  defaultValue: string | undefined;\n  isOpen: boolean;\n  onCancel: (isCancelled: boolean) => void;\n  onSave: (value: string) => void;\n}\n\ninterface IEditableTitleOverlayState {\n  value: string;\n}\n\n// styled blueprintjs `Icon`\nconst CloseIcon = styled(Icon)`\n  cursor: pointer;\n`;\n\nexport class EditableTitleOverlay extends React.PureComponent<\n  IEditableTitleOverlayProps,\n  IEditableTitleOverlayState\n> {\n  // Needs to track the input value because in order to handle save\n  // when the save button is clicked, we need to know what the last\n  // entered value is.\n  state = {\n    value: this.props.defaultValue || \"\"\n  };\n\n  handleChange = (value: string) => this.setState({ value });\n\n  handleClose = () => this.props.onCancel(true);\n\n  handleSave = () => this.props.onSave(this.state.value);\n\n  render() {\n    return (\n      <Overlay\n        canEscapeKeyClose\n        canOutsideClickClose\n        usePortal={false}\n        isOpen={this.props.isOpen}\n        onClose={this.handleClose}\n      >\n        <div className=\"bp3-dialog-container\">\n          <div className=\"bp3-dialog\">\n            <div className=\"bp3-dialog-header\">\n              <h4 className=\"bp3-heading\">Rename Notebook</h4>\n              <CloseIcon icon=\"small-cross\" onClick={this.handleClose} />\n            </div>\n            <div className=\"bp3-dialog-body\">\n              <Label>Enter a new notebook name:</Label>\n              <EditableText\n                className={Classes.INPUT}\n                disabled={false}\n                defaultValue={this.props.defaultValue}\n                minWidth={500}\n                intent={\"none\"}\n                selectAllOnFocus\n                confirmOnEnterKey\n                onChange={this.handleChange}\n                onConfirm={this.handleSave}\n              />\n            </div>\n            <div className=\"bp3-dialog-footer\">\n              <div className=\"bp3-dialog-footer-actions\">\n                <Button onClick={this.handleClose}>Cancel</Button>\n                <Button intent={Intent.PRIMARY} onClick={this.handleSave}>\n                  Save\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Overlay>\n    );\n  }\n}\n","/**\n * A simple contentRef aware component that renders a little lastSaved\n * display.\n *\n * import LastSaved from \"./last-saved\"\n * <LastSaved contentRef={someRef} />\n *\n * If the contentRef is available and has a lastSaved, will render something like:\n *\n * Last Saved: 2 minutes ago\n *\n */\n\nimport { AppState, selectors } from \"@nteract/core\";\nimport { LastSaved } from \"@nteract/directory-listing\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\n\ninterface LastSavedProps {\n  lastModified?: Date | null;\n}\n\ninterface OwnProps {\n  contentRef: string;\n}\n\n/**\n * Create our state mapper using makeMapStateToProps\n * Following https://twitter.com/dan_abramov/status/719971882280361985?lang=en\n */\nconst makeMapStateToProps = (\n  initialState: AppState,\n  initialProps: OwnProps\n) => {\n  const { contentRef } = initialProps;\n\n  const mapStateToProps = (state: AppState) => {\n    const content = selectors.contentByRef(state).get(contentRef);\n    if (!content || !content.lastSaved) {\n      return { lastModified: null };\n    }\n    return { lastModified: content.lastSaved };\n  };\n\n  return mapStateToProps;\n};\n\nexport default connect<LastSavedProps, typeof LastSaved, OwnProps, AppState>(\n  makeMapStateToProps\n)(LastSaved);\n","import * as React from \"react\";\nimport styled, { StyledComponent } from \"styled-components\";\n\nconst NavUl: StyledComponent<\"ul\", any, {}, never> = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 20px;\n  margin: 0 auto;\n  width: 100%;\n`;\n\nconst NavLi: StyledComponent<\"li\", any, {}, never> = styled.li`\n  display: flex;\n  box-sizing: border-box;\n  padding: 0px 0px;\n\n  /* \n   * When we have a nav section that ends up on the right, \n   * reverse the padding order \n   */\n  :not(:first-child):last-child > :global(ul > li) {\n    margin: 0px 0px 0px var(--nt-spacing-xl);\n  }\n`;\n\nconst NavSectionUl: StyledComponent<\"ul\", any, {}, never> = styled.ul`\n  margin: 0 auto;\n  padding: 0px 0px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst NavSectionLi: StyledComponent<\"li\", any, {}, never> = styled.li`\n  display: flex;\n  padding: 0px 0px;\n  margin: 0px var(--nt-spacing-xl) 0px 0px;\n`;\n\nconst WrapperDiv: StyledComponent<\"div\", any, {}, never> = styled.div`\n  background-color: hsl(0, 0%, 94%);\n  box-sizing: border-box;\n`;\n\ninterface NavSectionProps {\n  children: React.ReactNode;\n}\nexport const NavSection = (props: NavSectionProps): JSX.Element => (\n  <NavSectionUl>\n    {React.Children.map(props.children, child => {\n      if (child === null) {\n        return null;\n      }\n      return <NavSectionLi className=\"nav-item\">{child}</NavSectionLi>;\n    })}\n  </NavSectionUl>\n);\n\ntype NavProps = NavSectionProps;\nexport const Nav = (props: NavProps): JSX.Element => (\n  <WrapperDiv>\n    <NavUl>\n      {React.Children.map(props.children, child => {\n        return <NavLi>{child}</NavLi>;\n      })}\n    </NavUl>\n  </WrapperDiv>\n);\n\nexport default Nav;\n","import * as React from \"react\";\n\n// TODO: This could all be one logo that works from the core palettes as the\n//       SVG structure is the same (I think), between red, purple, blue\n\nconst letteringColor = {\n  light: \"#334866\",\n  dark: \"#edf1f7\"\n};\n\ninterface LogoProps {\n  theme: \"light\" | \"dark\";\n  height?: number;\n  width?: number;\n}\n\nconst defaultWidth = 940;\nconst defaultHeight = 274;\nconst ratio = defaultWidth / defaultHeight;\n\nexport const WideLogo = ({\n  theme,\n  height: requestedHeight,\n  width: requestedWidth\n}: LogoProps) => {\n  let height = requestedHeight;\n  let width = requestedWidth;\n\n  if (height && width) {\n    // Do nothing, we'll assume that's what they want\n  } else if (height) {\n    // Only height was specified, scale width\n    width = ratio * height;\n  } else if (width) {\n    height = ratio * width;\n  } else {\n    height = 30;\n    width = ratio * height;\n  }\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox=\"0 0 940 274\"\n    >\n      <path fill=\"#a3b7d6\" d=\"M225.06 272.51l-88-50.8V55.43l88 50.81v166.27z\" />\n      <path\n        fill=\"#c8d4e6\"\n        d=\"M137.06 55.43l-88.01 50.81v166.27l88.01-50.8V55.43z\"\n      />\n      <path\n        fill=\"#5d779b\"\n        d=\"M137.06 0L1.05 78.52l24 13.86 112.01-64.66 112 64.66v166.28l24-13.86V78.52L137.06 0z\"\n      />\n      <path fill=\"#334866\" d=\"M25.05 92.38l-24-13.86V244.8l24 13.86V92.38z\" />\n      <path fill=\"#a3b7d6\" d=\"M25.05 92.38v166.28l24 13.85V106.24l-24-13.86z\" />\n      <path\n        fill=\"#edf1f7\"\n        d=\"M25.05 92.38l112.01-64.66 112 64.66v166.28l-24 13.85V106.24l-88-50.81-88.01 50.81-24-13.86z\"\n      />\n      <path\n        fill=\"#ffb3cc\"\n        d=\"M137.06 92.37l56 32.34v64.66l-56 32.34-56-32.34v-64.66l56-32.34z\"\n      />\n      <path\n        fill=\"#f21860\"\n        d=\"M137.06 221.71v-64.67l-56-32.33v64.66l56 32.34z\"\n      />\n      <path\n        fill=\"#fa8aae\"\n        d=\"M137.06 157.04l56-32.33v64.66l-56 32.34v-64.67z\"\n      />\n      <path\n        fill=\"#f21860\"\n        d=\"M336.21 138.55a49.24 49.24 0 0 0-15.36 35.08v37.18c0 6.49 6.42 10.85 12.42 10.85s12.2-4.36 12.2-10.85v-29.35c0-31.65 16.69-35.07 23.87-35.07 17.76 0 24.09 18.35 24.09 35.51v28.9c0 6.49 6.19 10.85 12 10.85 6 0 12.42-4.15 12.42-10.85v-35.61c0-24.29-18.28-50.5-47.81-50.5a49.56 49.56 0 0 0-33.83 13.86z\"\n      />\n      <path\n        fill={letteringColor[theme]}\n        d=\"M469.33 124.69h-10.87v-21.53c0-6.72-7.23-10.85-12.42-10.85-5.89 0-12.2 4.36-12.2 10.85v85.91c0 15.28 6.63 26.69 18.18 31.31a13.25 13.25 0 0 0 6.12 1.27c4.58 0 8.34-1.86 10.33-5.11a8.88 8.88 0 0 0 1.86-5.52c0-3.59-2-8.08-5.8-9.34-6.07-1.77-6.07-10.38-6.07-15.53V146.4h10.88c5.19 0 12.42-4.13 12.42-10.86s-7.24-10.85-12.43-10.85zm115.02 27.63c-5.24-11.6-15.36-20.39-28.5-24.76-12.58-4.18-26.29-3.64-37.61 1.47a57.41 57.41 0 0 0-27.41 25.86c-4.55 9.05-8.29 23.56-.29 41.28a46.75 46.75 0 0 0 4.92 8.41 52.21 52.21 0 0 0 36.11 18.93c17.2 1.4 35.51-6.54 46.65-20.23a10.13 10.13 0 0 0 1.83-5.5 10.44 10.44 0 0 0-3-8.16 12.23 12.23 0 0 0-7.7-3.71c-5.5-.45-9.13 2.79-13.32 6.55-4.71 4.4-11.09 10.38-22.49 9.45a26.8 26.8 0 0 1-15.89-6.63l-1.12-1L579 166a10.38 10.38 0 0 0 5.4-13.6zm-74.54 23.61v-1.55c-.09-5.36 1.28-18.55 16.08-25.23 8.15-3.68 21-3.84 29.84 4.5l1.11 1zM655 124.24a54.89 54.89 0 0 0-34.08 12.09 48.91 48.91 0 0 0-18.22 38.19v36.29c0 6.49 6.42 10.85 12.42 10.85s12.2-4.36 12.2-10.85V181c0-8.07 0-13.9 2.8-19.5a29.86 29.86 0 0 1 9.72-11.12v.06a29.21 29.21 0 0 1 15.16-4.5c5.87 0 12.2-4.15 12.2-10.85s-6.32-10.85-12.2-10.85zM780.1 203l-.43-.4c-2.5-2-5-4.35-5.67-7.7l-.72-3.39.56.57c-.09-1.37-.09-2.71-.09-3.88v-15.43c0-27.47-27-48-51.13-48a57.94 57.94 0 0 0-36 12.39c-7.95 6.44-17.42 18.23-17.42 37.85a46.7 46.7 0 0 0 15.45 34.75 54.16 54.16 0 0 0 69.52 2.5l.88-.69.61.94a26.67 26.67 0 0 0 10.66 9.23v-.25l1.48.74a13.31 13.31 0 0 0 5.81 1.46c5.11 0 12.19-3.77 12.19-10.84.04-4.5-2.62-6.97-5.7-9.85zm-58.82-1a27.8 27.8 0 0 1-27.65-27.88c0-11.48 8.58-27.65 27.65-27.65 10.69 0 27.65 7.51 27.65 27.65A27.8 27.8 0 0 1 721.28 202zm155.47-8.57a14.37 14.37 0 0 0-8.55-3.13 12.06 12.06 0 0 0-8.51 3.54c-.55.55-1.45 1.28-2.4 2.05-.62.5-1.27 1-1.89 1.56a28.27 28.27 0 0 1-30.56.13c-7.61-5.07-12.14-13.94-12.14-23.74 0-14.9 12.69-27.49 27.72-27.49a27.42 27.42 0 0 1 15.13 4.65l.17.13a17.8 17.8 0 0 0 3.59 2.61l.45.31a10.76 10.76 0 0 0 8 3.07 13.25 13.25 0 0 0 8.74-3.1 10.12 10.12 0 0 0 3.7-7.77c0-2.62-1.19-5-3.74-7.58a53.64 53.64 0 0 0-36.29-13.83A55.17 55.17 0 0 0 804.46 138 47.93 47.93 0 0 0 788 174.45c0 23.28 21.32 49.23 51.92 49.23a57.25 57.25 0 0 0 25.11-6 53.7 53.7 0 0 0 11.85-8.56c2.75-2.5 4-5 4-8a9.51 9.51 0 0 0-4.13-7.69zm49.78-47.03c5.19 0 12.42-4.13 12.42-10.86s-7.23-10.85-12.42-10.85h-10.88v-21.53c0-6.72-7.24-10.85-12.42-10.85-5.89 0-12.2 4.36-12.2 10.85v85.91c0 15.28 6.63 26.69 18.18 31.31a13.25 13.25 0 0 0 6.12 1.27c4.58 0 8.34-1.86 10.33-5.11a8.88 8.88 0 0 0 1.86-5.52c0-3.59-2-8.08-5.8-9.34-6.07-1.77-6.07-10.38-6.07-15.53V146.4z\"\n      />\n    </svg>\n  );\n};\n\nWideLogo.defaultProps = {\n  theme: \"light\"\n};\n\nexport default WideLogo;\n","import { WideLogo } from \"@nteract/logos\";\nimport * as React from \"react\";\n\ninterface ThemedLogoProps {\n  height?: number;\n  theme?: \"light\" | \"dark\";\n}\n\nconst ThemedLogo = (props: ThemedLogoProps) => (\n  <WideLogo height={props.height} theme={props.theme} />\n);\n\nThemedLogo.defaultProps = {\n  height: 20,\n  theme: \"light\"\n};\n\nexport { ThemedLogo };\n","import { H4 } from \"@blueprintjs/core\";\nimport * as actions from \"@nteract/actions\";\n\nimport { ContentRef } from \"@nteract/core\";\nimport { ErrorIcon, LoadingIcon, SavingIcon } from \"@nteract/iron-icons\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport urljoin from \"url-join\";\n\nimport { EditableTitleOverlay } from \"../components/editable-title-overlay\";\nimport LastSaved from \"../components/last-saved\";\nimport { Nav, NavSection } from \"../components/nav\";\nimport { ThemedLogo } from \"../components/themed-logo\";\n\n/* Returns a header for the Directory view, which only consists of the Nav. */\nexport interface DirectoryHeaderProps {\n  appBase: string;\n}\n\nexport const DirectoryHeader: React.SFC<DirectoryHeaderProps> = props => (\n  <Nav>\n    <NavSection>\n      {props.appBase ? (\n        <a href={urljoin(props.appBase)} role=\"button\" title=\"Home\">\n          <ThemedLogo />\n        </a>\n      ) : null}\n    </NavSection>\n  </Nav>\n);\n\n/*\n * Returns a header for a Notebook/File/Dummy view, which consists of the Nav\n * and the NotebookMenu components.\n */\nexport interface FileHeaderProps {\n  appBase: string;\n  baseDir: string;\n  changeContentName: (value: actions.ChangeContentName[\"payload\"]) => {};\n  contentRef: ContentRef;\n  displayName: string;\n  error?: object | null;\n  loading: boolean;\n  saving: boolean;\n  children?: React.ReactNode;\n}\n\nexport interface State {\n  isDialogOpen: boolean;\n}\n\nclass FileHeader extends React.PureComponent<FileHeaderProps, State> {\n  static defaultProps = {\n    children: null\n  };\n  constructor(props: FileHeaderProps) {\n    super(props);\n\n    this.state = {\n      isDialogOpen: false\n    };\n  }\n\n  // Determine the file handler\n  getFileHandlerIcon = () => {\n    return this.props.saving ? (\n      <SavingIcon />\n    ) : this.props.error ? (\n      <ErrorIcon />\n    ) : this.props.loading ? (\n      <LoadingIcon />\n    ) : (\n      \"\"\n    );\n  };\n\n  getFileExtension = (filename: string): string | null | undefined => {\n    const dot = /[.]/.exec(filename);\n    const ext = /[^.]+$/.exec(filename);\n\n    return dot && ext ? ext[0] : undefined;\n  };\n\n  addFileExtension = (filename: string): string => {\n    const { displayName } = this.props;\n    const fileExtension = this.getFileExtension(filename);\n    const prevFileExtension = this.getFileExtension(displayName);\n\n    if (fileExtension) {\n      return filename;\n    } else if (prevFileExtension) {\n      // Get file extension from props.displayName\n      return `${filename}.${prevFileExtension}`;\n    } else {\n      // Assume `.ipynb` file\n      return `${filename}.ipynb`;\n    }\n  };\n\n  openDialog = (): void => this.setState({ isDialogOpen: true });\n  closeDialog = (): void => this.setState({ isDialogOpen: false });\n\n  // Handles onConfirm callback for EditableText component\n  confirmTitle = (value: string): void => {\n    if (value !== this.props.displayName) {\n      this.props.changeContentName({\n        contentRef: this.props.contentRef,\n        filepath: `/${value ? this.addFileExtension(value) : \"\"}`,\n        prevFilePath: `/${this.props.displayName}`\n      });\n    }\n\n    this.setState({ isDialogOpen: false });\n  };\n\n  render(): JSX.Element {\n    const themeLogoLink = urljoin(this.props.appBase, this.props.baseDir);\n    const icon = this.getFileHandlerIcon();\n\n    return (\n      <React.Fragment>\n        <Nav>\n          <NavSection>\n            <a href={themeLogoLink} role=\"button\" title=\"Home\">\n              <ThemedLogo />\n            </a>\n            <div>\n              <H4 onClick={this.openDialog}>{this.props.displayName}</H4>\n              <EditableTitleOverlay\n                defaultValue={this.props.displayName}\n                isOpen={this.state.isDialogOpen}\n                onCancel={this.closeDialog}\n                onSave={this.confirmTitle}\n              />\n            </div>\n          </NavSection>\n          <NavSection>\n            <span className=\"icon\">{icon}</span>\n            <LastSaved contentRef={this.props.contentRef} />\n          </NavSection>\n        </Nav>\n        {this.props.children}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  changeContentName: (payload: actions.ChangeContentName[\"payload\"]) =>\n    dispatch(actions.changeContentName(payload))\n});\n\nexport const ConnectedFileHeader = connect(\n  null,\n  mapDispatchToProps\n)(FileHeader);\n\nexport default ConnectedFileHeader;\n","import * as actions from \"@nteract/actions\";\nimport { CellType } from \"@nteract/commutable\";\nimport { AppState, ContentRef, HostRecord, selectors } from \"@nteract/core\";\nimport {\n  DirectoryContentRecordProps,\n  DummyContentRecordProps,\n  FileContentRecordProps,\n  NotebookContentRecordProps\n} from \"@nteract/types\";\nimport { RecordOf } from \"immutable\";\nimport { dirname } from \"path\";\nimport * as React from \"react\";\nimport { HotKeys, KeyMap } from \"react-hotkeys\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport urljoin from \"url-join\";\n\nimport { ConnectedDirectory } from \"./directory\";\nimport { default as File } from \"./file\";\nimport { ConnectedFileHeader as FileHeader, DirectoryHeader } from \"./headers\";\n\nimport { NotebookMenu } from \"@nteract/connected-components\";\n\ninterface IContentsProps {\n  appBase: string;\n  baseDir: string;\n  contentType: \"dummy\" | \"notebook\" | \"directory\" | \"file\";\n  contentRef: ContentRef;\n  displayName: string;\n  error?: object | null;\n  filepath: string | undefined;\n  lastSavedStatement: string;\n  loading: boolean;\n  mimetype?: string | null;\n  saving: boolean;\n}\n\ninterface IContentsState {\n  isDialogOpen: boolean;\n}\ninterface IDispatchFromProps {\n  handlers: any;\n}\n\nclass Contents extends React.PureComponent<\n  IContentsProps & IDispatchFromProps,\n  IContentsState\n> {\n  private keyMap: KeyMap = {\n    CHANGE_CELL_TYPE: [\n      \"ctrl+shift+y\",\n      \"ctrl+shift+m\",\n      \"meta+shift+y\",\n      \"meta+shift+m\"\n    ],\n    COPY_CELL: [\"ctrl+shift+c\", \"meta+shift+c\"],\n    CREATE_CELL_ABOVE: [\"ctrl+shift+a\", \"meta+shift+a\"],\n    CREATE_CELL_BELOW: [\"ctrl+shift+b\", \"meta+shift+b\"],\n    CUT_CELL: [\"ctrl+shift+x\", \"meta+shift+x\"],\n    DELETE_CELL: [\"ctrl+shift+d\", \"meta+shift+d\"],\n    EXECUTE_ALL_CELLS: [\"alt+r a\"],\n    INTERRUPT_KERNEL: [\"alt+r i\"],\n    KILL_KERNEL: [\"alt+r k\"],\n    OPEN: [\"ctrl+o\", \"meta+o\"],\n    PASTE_CELL: [\"ctrl+shift+v\"],\n    RESTART_KERNEL: [\"alt+r r\", \"alt+r c\", \"alt+r a\"],\n    SAVE: [\"ctrl+s\", \"ctrl+shift+s\", \"meta+s\", \"meta+shift+s\"]\n  };\n\n  render(): JSX.Element {\n    const {\n      appBase,\n      baseDir,\n      contentRef,\n      contentType,\n      displayName,\n      error,\n      handlers,\n      loading,\n      saving\n    } = this.props;\n\n    switch (contentType) {\n      case \"notebook\":\n      case \"file\":\n      case \"dummy\":\n        return (\n          <React.Fragment>\n            <HotKeys keyMap={this.keyMap} handlers={handlers}>\n              <FileHeader\n                appBase={appBase}\n                baseDir={baseDir}\n                contentRef={contentRef}\n                displayName={displayName}\n                error={error}\n                loading={loading}\n                saving={saving}\n              >\n                {contentType === \"notebook\" ? (\n                  <NotebookMenu contentRef={this.props.contentRef} />\n                ) : null}\n              </FileHeader>\n              <File contentRef={contentRef} appBase={appBase} />\n            </HotKeys>\n          </React.Fragment>\n        );\n      case \"directory\":\n        return (\n          <React.Fragment>\n            <DirectoryHeader appBase={appBase} />\n            <ConnectedDirectory appBase={appBase} contentRef={contentRef} />\n          </React.Fragment>\n        );\n      default:\n        return (\n          <React.Fragment>\n            <DirectoryHeader appBase={appBase} />\n            <div>{`content type ${contentType} not implemented`}</div>\n          </React.Fragment>\n        );\n    }\n  }\n}\n\nconst makeMapStateToProps: any = (\n  initialState: AppState,\n  initialProps: { appBase: string; contentRef: ContentRef }\n) => {\n  const host: HostRecord = initialState.app.host;\n\n  if (host.type !== \"jupyter\") {\n    throw new Error(\"this component only works with jupyter apps\");\n  }\n\n  const appBase: string = urljoin(host.basePath, \"/nteract/edit\");\n\n  const mapStateToProps = (state: AppState): IContentsProps => {\n    const contentRef: ContentRef = initialProps.contentRef;\n\n    if (!contentRef) {\n      throw new Error(\"cant display without a contentRef\");\n    }\n\n    const content:\n      | RecordOf<NotebookContentRecordProps>\n      | RecordOf<DummyContentRecordProps>\n      | RecordOf<FileContentRecordProps>\n      | RecordOf<DirectoryContentRecordProps>\n      | undefined = selectors.content(state, { contentRef });\n\n    if (!content) {\n      throw new Error(\"need content to view content, check your contentRefs\");\n    }\n\n    return {\n      appBase,\n      baseDir: dirname(content.filepath),\n      contentRef,\n      contentType: content.type,\n      displayName: content.filepath.split(\"/\").pop() || \"\",\n      error: content.error,\n      filepath: content.filepath,\n      lastSavedStatement: \"recently\",\n      loading: content.loading,\n      mimetype: content.mimetype,\n      saving: content.saving\n    };\n  };\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch,\n  ownProps: IContentsProps\n): object => {\n  const { appBase, contentRef } = ownProps;\n\n  return {\n    // `HotKeys` handlers object\n    // see: https://github.com/greena13/react-hotkeys#defining-handlers\n    handlers: {\n      CHANGE_CELL_TYPE: (event: KeyboardEvent) => {\n        const type: CellType = event.key === \"Y\" ? \"code\" : \"markdown\";\n        return dispatch(actions.changeCellType({ to: type, contentRef }));\n      },\n      COPY_CELL: () => dispatch(actions.copyCell({ contentRef })),\n      CREATE_CELL_ABOVE: () =>\n        dispatch(actions.createCellAbove({ cellType: \"code\", contentRef })),\n      CREATE_CELL_BELOW: () =>\n        dispatch(\n          actions.createCellBelow({ cellType: \"code\", source: \"\", contentRef })\n        ),\n      CUT_CELL: () => dispatch(actions.cutCell({ contentRef })),\n      DELETE_CELL: () => dispatch(actions.deleteCell({ contentRef })),\n      EXECUTE_ALL_CELLS: () =>\n        dispatch(actions.executeAllCells({ contentRef })),\n      INTERRUPT_KERNEL: () => dispatch(actions.interruptKernel({})),\n      KILL_KERNEL: () => dispatch(actions.killKernel({ restarting: false })),\n      OPEN: () => {\n        // On initialization, the appBase prop is not available.\n        const nteractEditUri = \"/nteract/edit\";\n        const url = appBase ? urljoin(appBase, nteractEditUri) : nteractEditUri;\n        window.open(url, \"_blank\");\n      },\n      PASTE_CELL: () => dispatch(actions.pasteCell({ contentRef })),\n      RESTART_KERNEL: (event: KeyboardEvent) => {\n        const outputHandling: \"None\" | \"Clear All\" | \"Run All\" =\n          event.key === \"r\"\n            ? \"None\"\n            : event.key === \"a\"\n            ? \"Run All\"\n            : \"Clear All\";\n        return dispatch(actions.restartKernel({ outputHandling, contentRef }));\n      },\n      SAVE: () => dispatch(actions.save({ contentRef }))\n    }\n  };\n};\n\nexport default connect(\n  makeMapStateToProps,\n  mapDispatchToProps\n)(Contents);\n","import { ContentRef } from \"@nteract/core\";\nimport * as React from \"react\";\nimport NotificationSystem, {\n  System as ReactNotificationSystem\n} from \"react-notification-system\";\n\nimport { default as Contents } from \"./contents\";\n\nclass App extends React.Component<{ contentRef: ContentRef }> {\n  notificationSystem!: ReactNotificationSystem;\n\n  shouldComponentUpdate(nextProps: { contentRef: ContentRef }): boolean {\n    return nextProps.contentRef !== this.props.contentRef;\n  }\n\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        <Contents contentRef={this.props.contentRef} />\n        <NotificationSystem\n          ref={(notificationSystem: ReactNotificationSystem) => {\n            this.notificationSystem = notificationSystem;\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import { AppState } from \"@nteract/core\";\nimport {\n  epics as coreEpics,\n  middlewares as coreMiddlewares,\n  reducers\n} from \"@nteract/core\";\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport { combineEpics, createEpicMiddleware, Epic } from \"redux-observable\";\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  app: reducers.app,\n  comms: reducers.comms,\n  config: reducers.config,\n  core: reducers.core\n});\n\nexport default function configureStore(initialState: Partial<AppState>) {\n  const rootEpic = combineEpics<Epic>(...coreEpics.allEpics);\n  const epicMiddleware = createEpicMiddleware();\n  const middlewares = [epicMiddleware, coreMiddlewares.errorMiddleware];\n\n  const store = createStore(\n    rootReducer,\n    // TODO: Properly type redux store for jupyter-extension\n    (initialState as unknown) as any,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}\n","import {\n  actions,\n  AppState,\n  createContentRef,\n  createHostRef,\n  createKernelRef,\n  createKernelspecsRef,\n  makeAppRecord,\n  makeCommsRecord,\n  makeContentsRecord,\n  makeDummyContentRecord,\n  makeEntitiesRecord,\n  makeHostsRecord,\n  makeJupyterHostRecord,\n  makeStateRecord,\n  makeTransformsRecord\n} from \"@nteract/core\";\nimport { Media } from \"@nteract/outputs\";\nimport { ContentRecord, HostRecord } from \"@nteract/types\";\n\nimport TransformVDOM from \"@nteract/transform-vdom\";\n\nimport * as Immutable from \"immutable\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { JupyterConfigData } from \"./config\";\n\nimport App from \"./app\";\n\nimport(\"./fonts\");\n\nimport configureStore from \"./store\";\n\nexport async function main(config: JupyterConfigData, rootEl): Promise<void> {\n  // When the data element isn't there, provide an error message\n  // Primarily for development usage\n\n  const jupyterHostRecord = makeJupyterHostRecord({\n    id: null,\n    type: \"jupyter\",\n    defaultKernelName: \"python\",\n    token: config.token,\n    origin: location.origin,\n    basePath: config.baseUrl\n  });\n\n  const hostRef = createHostRef();\n  const contentRef = createContentRef();\n  const NullTransform = () => null;\n  const kernelspecsRef = createKernelspecsRef();\n\n  const initialState: AppState = {\n    app: makeAppRecord({\n      version: `nteract-on-jupyter@${config.appVersion}`,\n      host: jupyterHostRecord\n    }),\n    comms: makeCommsRecord(),\n    config: Immutable.Map({\n      theme: \"light\"\n    }),\n    core: makeStateRecord({\n      currentKernelspecsRef: kernelspecsRef,\n      entities: makeEntitiesRecord({\n        hosts: makeHostsRecord({\n          byRef: Immutable.Map<string, HostRecord>().set(\n            hostRef,\n            jupyterHostRecord\n          )\n        }),\n        contents: makeContentsRecord({\n          byRef: Immutable.Map<string, ContentRecord>().set(\n            contentRef,\n            makeDummyContentRecord({\n              filepath: config.contentsPath\n            })\n          )\n        }),\n        transforms: makeTransformsRecord({\n          displayOrder: Immutable.List([\n            \"application/vnd.jupyter.widget-view+json\",\n            \"application/vnd.vega.v3+json\",\n            \"application/vnd.vega.v2+json\",\n            \"application/vnd.vegalite.v2+json\",\n            \"application/vnd.vegalite.v1+json\",\n            \"application/geo+json\",\n            \"application/vnd.plotly.v1+json\",\n            \"text/vnd.plotly.v1+html\",\n            \"application/x-nteract-model-debug+json\",\n            \"application/vnd.dataresource+json\",\n            \"application/vdom.v1+json\",\n            \"application/json\",\n            \"application/javascript\",\n            \"text/html\",\n            \"text/markdown\",\n            \"text/latex\",\n            \"image/svg+xml\",\n            \"image/gif\",\n            \"image/png\",\n            \"image/jpeg\",\n            \"text/plain\"\n          ]),\n          byId: Immutable.Map({\n            \"text/vnd.plotly.v1+html\": NullTransform,\n            \"application/vnd.plotly.v1+json\": NullTransform,\n            \"application/geo+json\": NullTransform,\n            \"application/x-nteract-model-debug+json\": NullTransform,\n            \"application/vnd.dataresource+json\": NullTransform,\n            \"application/vnd.jupyter.widget-view+json\": NullTransform,\n            \"application/vnd.vegalite.v1+json\": NullTransform,\n            \"application/vnd.vegalite.v2+json\": NullTransform,\n            \"application/vnd.vega.v2+json\": NullTransform,\n            \"application/vnd.vega.v3+json\": NullTransform,\n            \"application/vdom.v1+json\": TransformVDOM,\n            \"application/json\": Media.Json,\n            \"application/javascript\": Media.JavaScript,\n            \"text/html\": Media.HTML,\n            \"text/markdown\": Media.Markdown,\n            \"text/latex\": Media.LaTeX,\n            \"image/svg+xml\": Media.SVG,\n            \"image/gif\": Media.Image,\n            \"image/png\": Media.Image,\n            \"image/jpeg\": Media.Image,\n            \"text/plain\": Media.Plain\n          })\n        })\n      })\n    })\n  };\n\n  const kernelRef = createKernelRef();\n\n  const store = configureStore(initialState);\n  (window as any).store = store;\n\n  store.dispatch(\n    actions.fetchContent({\n      filepath: config.contentsPath,\n      params: {},\n      kernelRef,\n      contentRef\n    })\n  );\n  store.dispatch(actions.fetchKernelspecs({ hostRef, kernelspecsRef }));\n\n  ReactDOM.render(\n    <React.Fragment>\n      <Provider store={store}>\n        <App contentRef={contentRef} />\n      </Provider>\n    </React.Fragment>,\n    rootEl\n  );\n}\n","import * as React from \"react\";\n\ninterface WrapperProps {\n  children: React.ReactNode;\n  outerProps: React.SVGAttributes<any>;\n  width: number;\n  height: number;\n  viewBox: string;\n}\n\nexport const SVGWrapper = (props: WrapperProps) => {\n  return (\n    <span>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={props.width}\n        height={props.height}\n        viewBox={props.viewBox}\n        {...props.outerProps}\n        style={{\n          fill: \"currentColor\",\n          display: \"inline-block\",\n          verticalAlign: \"text-bottom\",\n          ...props.outerProps.style\n        }}\n      >\n        {props.children}\n      </svg>\n    </span>\n  );\n};\n\nSVGWrapper.displayName = \"SVGWrapper\";\n\nexport const MarkdownOcticon = (props: any) => (\n  <SVGWrapper width={16} height={16} viewBox=\"0 0 16 16\" outerProps={props}>\n    <title>Create Text Cell</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z\"\n    />\n  </SVGWrapper>\n);\n\nexport const CodeOcticon = (props: any) => (\n  <SVGWrapper width={14} height={16} viewBox=\"0 0 14 16\" outerProps={props}>\n    <title>Create Code Cell</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z\"\n    />\n  </SVGWrapper>\n);\n\nexport const DownArrowOcticon = (props: any) => (\n  <SVGWrapper width={10} height={16} viewBox=\"0 0 10 16\" outerProps={props}>\n    <title>Merge Cells</title>\n    <path fillRule=\"evenodd\" d=\"M5 3L0 9h3v4h4V9h3z\" />\n  </SVGWrapper>\n);\n\nexport const PinOcticon = (props: any) => (\n  <SVGWrapper width={16} height={16} viewBox=\"0 0 16 16\" outerProps={props}>\n    <title>Pin Cell to Top</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 1.2V2l.5 1L6 6H2.2c-.44 0-.67.53-.34.86L5 10l-4 5 5-4 3.14 3.14a.5.5 0 0 0 .86-.34V10l3-4.5 1 .5h.8c.44 0 .67-.53.34-.86L10.86.86a.5.5 0 0 0-.86.34z\"\n    />\n  </SVGWrapper>\n);\n\nexport const TrashOcticon = (props: any) => (\n  <SVGWrapper width={12} height={16} viewBox=\"0 0 12 16\" outerProps={props}>\n    <title>Delete Cell</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z\"\n    />\n  </SVGWrapper>\n);\n\nexport const TriangleRightOcticon = (props: any) => (\n  <SVGWrapper width={6} height={16} viewBox=\"0 0 6 16\" outerProps={props}>\n    <title>Run Cell</title>\n    <path fillRule=\"evenodd\" d=\"M0 14l6-6-6-6z\" />\n  </SVGWrapper>\n);\n\nexport const ChevronDownOcticon = (props: any) => (\n  <SVGWrapper width={10} height={16} viewBox=\"0 0 10 16\" outerProps={props}>\n    <title>Show Additional Actions</title>\n    <path fillRule=\"evenodd\" d=\"M5 11L0 6l1.5-1.5L5 8.25 8.5 4.5 10 6z\" />\n  </SVGWrapper>\n);\n\nexport const LinkExternalOcticon = (props: any) => (\n  <SVGWrapper width={12} height={16} viewBox=\"0 0 12 16\" outerProps={props}>\n    <title>Cell Placeholder for Pinned Cell</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M11 10h1v3c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h3v1H1v10h10v-3zM6 2l2.25 2.25L5 7.5 6.5 9l3.25-3.25L12 8V2H6z\"\n    />\n  </SVGWrapper>\n);\n\nexport const GraphOcticon = (props: any) => (\n  <SVGWrapper width={16} height={16} viewBox=\"0 0 16 16\" outerProps={props}>\n    <title>Display Bar Graph</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z\"\n    />\n  </SVGWrapper>\n);\n\nexport const PulseOcticon = (props: any) => (\n  <SVGWrapper width={14} height={16} viewBox=\"0 0 14 16\" outerProps={props}>\n    <title>Display Line Graph</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M11.5 8L8.8 5.4 6.6 8.5 5.5 1.6 2.38 8H0v2h3.6l.9-1.8.9 5.4L9 8.5l1.6 1.5H14V8z\"\n    />\n  </SVGWrapper>\n);\n\nexport const DatabaseOcticon = (props: any) => (\n  <SVGWrapper width={12} height={16} viewBox=\"0 0 12 16\" outerProps={props}>\n    <title>Display Data Table</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M6 15c-3.31 0-6-.9-6-2v-2c0-.17.09-.34.21-.5.67.86 3 1.5 5.79 1.5s5.12-.64 5.79-1.5c.13.16.21.33.21.5v2c0 1.1-2.69 2-6 2zm0-4c-3.31 0-6-.9-6-2V7c0-.11.04-.21.09-.31.03-.06.07-.13.12-.19C.88 7.36 3.21 8 6 8s5.12-.64 5.79-1.5c.05.06.09.13.12.19.05.1.09.21.09.31v2c0 1.1-2.69 2-6 2zm0-4c-3.31 0-6-.9-6-2V3c0-1.1 2.69-2 6-2s6 .9 6 2v2c0 1.1-2.69 2-6 2zm0-5c-2.21 0-4 .45-4 1s1.79 1 4 1 4-.45 4-1-1.79-1-4-1z\"\n    />\n  </SVGWrapper>\n);\n\nexport const TelescopeOcticon = (props: any) => (\n  <SVGWrapper width={14} height={16} viewBox=\"0 0 14 16\" outerProps={props}>\n    <title>Display Scatter Plot</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 9l3 6h-1l-2-4v5H7v-6l-2 5H4l2-5 2-1zM7 0H6v1h1V0zM5 3H4v1h1V3zM2 1H1v1h1V1zM.63 9a.52.52 0 0 0-.16.67l.55.92c.13.23.41.31.64.2l1.39-.66-1.16-2-1.27.86.01.01zm7.89-5.39l-5.8 3.95L3.95 9.7l6.33-3.03-1.77-3.06h.01zm4.22 1.28l-1.47-2.52a.51.51 0 0 0-.72-.17l-1.2.83 1.84 3.2 1.33-.64c.27-.13.36-.44.22-.7z\"\n    />\n  </SVGWrapper>\n);\n\nexport const FileText = (props: any) => (\n  <SVGWrapper width={12} height={16} viewBox=\"0 0 12 16\" outerProps={props}>\n    <title>File</title>\n    <path d=\"M6 5H2V4h4v1zM2 8h7V7H2v1zm0 2h7V9H2v1zm0 2h7v-1H2v1zm10-7.5V14c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1h7.5L12 4.5zM11 5L8 2H1v12h10V5z\" />\n  </SVGWrapper>\n);\n\nexport const Book = (props: any) => (\n  <SVGWrapper width={16} height={16} viewBox=\"0 0 16 16\" outerProps={props}>\n    <title>Notebook</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z\"\n    />\n  </SVGWrapper>\n);\n\nexport const FileDirectory = (props: any) => (\n  <SVGWrapper width={14} height={16} viewBox=\"0 0 14 16\" outerProps={props}>\n    <title>Directory</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M13 4H7V3c0-.66-.31-1-1-1H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zM6 4H1V3h5v1z\"\n    />\n  </SVGWrapper>\n);\n\nexport const CloudDownload = (props: any) => (\n  <SVGWrapper width={16} height={16} viewBox=\"0 0 16 16\" outerProps={props}>\n    <title>Cloud Download</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9 12h2l-3 3-3-3h2V7h2v5zm3-8c0-.44-.91-3-4.5-3C5.08 1 3 2.92 3 5 1.02 5 0 6.52 0 8c0 1.53 1 3 3 3h3V9.7H3C1.38 9.7 1.3 8.28 1.3 8c0-.17.05-1.7 1.7-1.7h1.3V5c0-1.39 1.56-2.7 3.2-2.7 2.55 0 3.13 1.55 3.2 1.8v1.2H12c.81 0 2.7.22 2.7 2.2 0 2.09-2.25 2.2-2.7 2.2h-2V11h2c2.08 0 4-1.16 4-3.5C16 5.06 14.08 4 12 4z\"\n    />\n  </SVGWrapper>\n);\n\nexport const Beaker = (props: any) => (\n  <SVGWrapper width={16} height={16} viewBox=\"0 0 16 16\" outerProps={props}>\n    <title>Experimental Data Explorer</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M14.38 14.59L11 7V3h1V2H3v1h1v4L.63 14.59A1 1 0 0 0 1.54 16h11.94c.72 0 1.2-.75.91-1.41h-.01zM3.75 10L5 7V3h5v4l1.25 3h-7.5zM8 8h1v1H8V8zM7 7H6V6h1v1zm0-3h1v1H7V4zm0-3H6V0h1v1z\"\n    />\n  </SVGWrapper>\n);\n","/**\n * @module commutable\n */\nimport * as Immutable from \"immutable\";\nimport uuid from \"uuid/v4\";\n\nexport type ExecutionCount = number | null;\n\n// Mutable JSON types\nexport type PrimitiveImmutable = string | number | boolean | null;\nexport type JSONType = PrimitiveImmutable | JSONObject | JSONArray;\nexport interface JSONObject {\n  [key: string]: JSONType;\n}\nexport interface JSONArray extends Array<JSONType> {}\n\nexport type CellId = string;\nexport function createCellId(): CellId {\n  return uuid();\n}\n\n// On disk multi-line strings are used to accomodate line-by-line diffs in tools\n// like git and GitHub. They get converted to strings for the in-memory format.\nexport type MultiLineString = string | string[];\n\nexport type ImmutableJSONType =\n  | PrimitiveImmutable\n  | ImmutableJSONMap\n  | ImmutableJSONList;\n\n// Can't (easily) write circularly referenced types so this'll have to do for now\nexport type ImmutableJSONMap = Immutable.Map<string, any>;\nexport type ImmutableJSONList = Immutable.List<any>;\n\n/**\n * Media Bundles as they exist on disk from the notebook format\n * See https://nbformat.readthedocs.io/en/latest/format_description.html#display-data for docs\n * and https://github.com/jupyter/nbformat/blob/master/nbformat/v4/nbformat.v4.schema.json for the schema\n */\nexport interface OnDiskMediaBundle {\n  \"text/plain\"?: MultiLineString;\n  \"text/html\"?: MultiLineString;\n  \"text/latex\"?: MultiLineString;\n  \"text/markdown\"?: MultiLineString;\n  \"application/javascript\"?: MultiLineString;\n  \"image/png\"?: MultiLineString;\n  \"image/jpeg\"?: MultiLineString;\n  \"image/gif\"?: MultiLineString;\n  \"image/svg+xml\"?: MultiLineString;\n\n  // The JSON mimetype has some corner cases because of the protocol / format assuming the values\n  // in a media bundle are either:\n  //\n  //   * A string; which would be deserialized\n  //   * An array; which would have to be assumed to be a multiline string\n  //\n  \"application/json\"?: string | string[] | {};\n  \"application/vdom.v1+json\"?: {};\n  \"application/vnd.dataresource+json\"?: {};\n  \"text/vnd.plotly.v1+html\"?: MultiLineString | {};\n  \"application/vnd.plotly.v1+json\"?: {};\n  \"application/geo+json\"?: {};\n  \"application/x-nteract-model-debug+json\"?: {};\n  \"application/vnd.vega.v2+json\"?: {};\n  \"application/vnd.vega.v3+json\"?: {};\n  \"application/vnd.vegalite.v1+json\"?: {};\n  \"application/vnd.vegalite.v2+json\"?: {};\n\n  [key: string]: string | string[] | {} | undefined;\n}\n\n// Enumerating over all the media types we currently accept\nexport interface MediaBundle {\n  \"text/plain\"?: string;\n  \"text/html\"?: string;\n  \"text/latex\"?: string;\n  \"text/markdown\"?: string;\n  \"application/javascript\"?: string;\n  \"image/png\"?: string;\n  \"image/jpeg\"?: string;\n  \"image/gif\"?: string;\n  \"image/svg+xml\"?: string;\n  // All our JSON types can only be JSON Objects\n  \"application/json\"?: { [key: string]: any };\n  \"application/vdom.v1+json\"?: { [key: string]: any };\n  \"application/vnd.dataresource+json\"?: { [key: string]: any };\n  \"text/vnd.plotly.v1+html\"?: string | { [key: string]: any };\n  \"application/vnd.plotly.v1+json\"?: { [key: string]: any };\n  \"application/geo+json\"?: { [key: string]: any };\n  \"application/x-nteract-model-debug+json\"?: { [key: string]: any };\n  \"application/vnd.vega.v2+json\"?: { [key: string]: any };\n  \"application/vnd.vega.v3+json\"?: { [key: string]: any };\n  \"application/vnd.vegalite.v1+json\"?: { [key: string]: any };\n  \"application/vnd.vegalite.v2+json\"?: { [key: string]: any };\n  // Other media types can also come in that we don't recognize\n  [key: string]: string | string[] | {} | undefined;\n}\n\n/**\n * Turn nbformat multiline strings (arrays of strings for simplifying diffs) into strings\n */\nexport function demultiline(s: string | string[]): string {\n  if (Array.isArray(s)) {\n    return s.join(\"\");\n  }\n  return s;\n}\n\n/**\n * Split string into a list of strings delimited by newlines; useful for on-disk git comparisons;\n * and is the expectation for jupyter notebooks on disk\n */\nexport function remultiline(s: string | string[]): string[] {\n  if (Array.isArray(s)) {\n    // Assume already multiline string\n    return s;\n  }\n  // Split on newline and retain newline char\n  return s.split(/(.*?(?:\\r\\n|\\n))/g).filter(x => x !== \"\");\n}\n\nfunction isJSONKey(key: string) {\n  return /^application\\/(.*\\+)json$/.test(key);\n}\n\n// A type with all ownPropertyNames also readonly; works for all JSON types\ntype DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> };\n\n// Taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\nexport function deepFreeze<T>(object: T): DeepReadonly<T> {\n  // Retrieve the property names defined on object\n  const propNames = Object.getOwnPropertyNames(object);\n\n  // Freeze properties before freezing self\n  for (const name of propNames) {\n    // getOwnPropertyNames assures us we can index on name\n    const value = (object as any)[name];\n\n    (object as any)[name] =\n      value && typeof value === \"object\" ? deepFreeze(value) : value;\n  }\n\n  return (Object.freeze(object) as unknown) as DeepReadonly<T>;\n}\n\nexport function createFrozenMediaBundle(\n  mediaBundle: OnDiskMediaBundle\n): Readonly<MediaBundle> {\n  // Map over all the mimetypes; turning them into our in-memory format\n  //\n  // {\n  //   \"application/json\": {\"a\": 3; \"b\": 2};\n  //   \"text/html\": [\"<p>\\n\"; \"Hey\\n\"; \"</p>\"];\n  //   \"text/plain\": \"Hey\"\n  // }\n  //\n  // to\n  //\n  // {\n  //   \"application/json\": {\"a\": 3; \"b\": 2};\n  //   \"text/html\": \"<p>\\nHey\\n</p>\";\n  //   \"text/plain\": \"Hey\"\n  // }\n\n  // Since we have to convert from one type to another that has conflicting types; we need to hand convert it in a way that\n  // flow is able to verify correctly. The way we do that is create a new object that we declare with the type we want;\n  // set the keys and values we need; then seal the object with Object.freeze\n  const bundle: MediaBundle = {};\n\n  for (const key in mediaBundle) {\n    if (\n      !isJSONKey(key) &&\n      (typeof mediaBundle[key] === \"string\" || Array.isArray(mediaBundle[key]))\n    ) {\n      // Because it's a string; we can't mutate it anyways (and don't have to Object.freeze it)\n      bundle[key] = demultiline(mediaBundle[key] as MultiLineString);\n    } else {\n      // we now know it's an Object of some kind\n      bundle[key] = deepFreeze(mediaBundle[key]!);\n    }\n  }\n  return Object.freeze(bundle);\n}\n\nexport function createOnDiskMediaBundle(\n  mediaBundle: Readonly<MediaBundle>\n): OnDiskMediaBundle {\n  // Technically we could return just the mediaBundle as is\n  // return mediaBundle;\n  // However for the sake of on-disk readability we write out remultilined versions of the array and string ones\n\n  const freshBundle: OnDiskMediaBundle = {};\n  for (const key in mediaBundle) {\n    if (\n      !isJSONKey(key) &&\n      (typeof mediaBundle[key] === \"string\" || Array.isArray(mediaBundle[key]))\n    ) {\n      freshBundle[key] = remultiline(mediaBundle[key] as MultiLineString);\n    } else {\n      freshBundle[key] = mediaBundle[key];\n    }\n  }\n  return freshBundle;\n}\n","/**\n * @module commutable\n */\nimport { ImmutableOutput } from \"./outputs\";\n\nimport { ExecutionCount } from \"./primitives\";\n\nimport {\n  List as ImmutableList,\n  Map as ImmutableMap,\n  Record,\n  RecordOf\n} from \"immutable\";\n\n/* CodeCell Record Boilerplate */\n\nexport interface CodeCellParams {\n  cell_type: \"code\";\n  // Sadly untyped and widely unspecced\n  metadata: ImmutableMap<string, any>;\n  execution_count: ExecutionCount;\n  source: string;\n  outputs: ImmutableList<ImmutableOutput>;\n}\n\nexport const makeCodeCell = Record<CodeCellParams>({\n  cell_type: \"code\",\n  execution_count: null,\n  metadata: ImmutableMap({\n    collapsed: false,\n    outputHidden: false,\n    inputHidden: false\n  }),\n  source: \"\",\n  outputs: ImmutableList()\n});\n\nexport type ImmutableCodeCell = RecordOf<CodeCellParams>;\n\n/* MarkdownCell Record Boilerplate */\n\nexport interface MarkdownCellParams {\n  cell_type: \"markdown\";\n  source: string;\n  metadata: ImmutableMap<string, any>;\n}\n\nexport const makeMarkdownCell = Record<MarkdownCellParams>({\n  cell_type: \"markdown\",\n  metadata: ImmutableMap(),\n  source: \"\"\n});\n\nexport type ImmutableMarkdownCell = RecordOf<MarkdownCellParams>;\n\n/* RawCell Record Boilerplate */\n\nexport interface RawCellParams {\n  cell_type: \"raw\";\n  source: string;\n  metadata: ImmutableMap<string, any>;\n}\n\nexport const makeRawCell = Record<RawCellParams>({\n  cell_type: \"raw\",\n  metadata: ImmutableMap(),\n  source: \"\"\n});\n\nexport type ImmutableRawCell = RecordOf<RawCellParams>;\n\nexport type ImmutableCell =\n  | ImmutableMarkdownCell\n  | ImmutableCodeCell\n  | ImmutableRawCell;\n\nexport type CellType = \"raw\" | \"markdown\" | \"code\";\n","/**\n * @module commutable\n */\nimport {\n  fromJS as immutableFromJS,\n  List as ImmutableList,\n  Map as ImmutableMap,\n  Record,\n  RecordOf\n} from \"immutable\";\n\nimport {\n  createFrozenMediaBundle,\n  demultiline,\n  ExecutionCount,\n  JSONObject,\n  MediaBundle,\n  MultiLineString,\n  OnDiskMediaBundle,\n  remultiline\n} from \"./primitives\";\n\n/** ExecuteResult Record Boilerplate */\nexport interface ExecuteResultParams {\n  output_type: \"execute_result\";\n  execution_count: ExecutionCount;\n  data: Readonly<MediaBundle>;\n  metadata?: any;\n}\n\n// Used for initializing all output records\nconst emptyMediaBundle = Object.freeze({});\n\nexport const makeExecuteResult = Record<ExecuteResultParams>({\n  data: emptyMediaBundle,\n  execution_count: null,\n  metadata: ImmutableMap(),\n  output_type: \"execute_result\"\n});\n\nexport type ImmutableExecuteResult = RecordOf<ExecuteResultParams>;\n\n/** DisplayData Record Boilerplate */\n\nexport interface DisplayDataParams {\n  data: Readonly<MediaBundle>;\n  output_type: \"display_data\";\n  metadata?: any;\n}\n\nexport const makeDisplayData = Record<DisplayDataParams>({\n  data: emptyMediaBundle,\n  metadata: ImmutableMap(),\n  output_type: \"display_data\"\n});\n\nexport type ImmutableDisplayData = RecordOf<DisplayDataParams>;\n\n/** StreamOutput Record Boilerplate */\n\nexport interface StreamOutputParams {\n  output_type: \"stream\";\n  name: \"stdout\" | \"stderr\";\n  text: string;\n}\n\nexport const makeStreamOutput = Record<StreamOutputParams>({\n  name: \"stdout\",\n  output_type: \"stream\",\n  text: \"\"\n});\n\nexport type ImmutableStreamOutput = RecordOf<StreamOutputParams>;\n\n/** ErrorOutput Record Boilerplate */\n\nexport interface ErrorOutputParams {\n  output_type: \"error\";\n  ename: string;\n  evalue: string;\n  traceback: ImmutableList<string>;\n}\n\nexport const makeErrorOutput = Record<ErrorOutputParams>({\n  ename: \"\",\n  evalue: \"\",\n  output_type: \"error\",\n  traceback: ImmutableList()\n});\n\nexport type ImmutableErrorOutput = RecordOf<ErrorOutputParams>;\n\n//////////////\n\nexport type ImmutableOutput =\n  | ImmutableExecuteResult\n  | ImmutableDisplayData\n  | ImmutableStreamOutput\n  | ImmutableErrorOutput;\n\n//////// OUTPUTS /////\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                             Output Types\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nexport interface OnDiskExecuteResult {\n  output_type: \"execute_result\";\n  execution_count: ExecutionCount;\n  data: OnDiskMediaBundle;\n  metadata: JSONObject;\n  transient?: JSONObject;\n}\n\nexport interface OnDiskDisplayData {\n  output_type: \"display_data\";\n  data: OnDiskMediaBundle;\n  metadata: JSONObject;\n  transient?: JSONObject;\n}\n\nexport interface OnDiskStreamOutput {\n  output_type: \"stream\";\n  name: \"stdout\" | \"stderr\";\n  text: MultiLineString;\n}\n\nexport interface OnDiskErrorOutput {\n  output_type: \"error\";\n  ename: string;\n  evalue: string;\n  traceback: string[];\n}\n\nexport type OnDiskOutput =\n  | OnDiskExecuteResult\n  | OnDiskDisplayData\n  | OnDiskStreamOutput\n  | OnDiskErrorOutput;\n\n/**\n * Converts a mutable representation of an output to an immutable representation.\n *\n * @param output The mutable output that will be converted.\n *\n * @returns ImmutableOutput An immutable representation of the same output.\n */\nexport function createImmutableOutput(output: OnDiskOutput): ImmutableOutput {\n  switch (output.output_type) {\n    case \"execute_result\":\n      return makeExecuteResult({\n        data: createFrozenMediaBundle(output.data),\n        execution_count: output.execution_count,\n        metadata: immutableFromJS(output.metadata)\n      });\n    case \"display_data\":\n      return makeDisplayData({\n        data: createFrozenMediaBundle(output.data),\n        metadata: immutableFromJS(output.metadata)\n      });\n    case \"stream\":\n      return makeStreamOutput({\n        name: output.name,\n        text: demultiline(output.text)\n      });\n    case \"error\":\n      return makeErrorOutput({\n        ename: output.ename,\n        evalue: output.evalue,\n        output_type: \"error\",\n        // Note: this is one of the cases where the Array of strings (for\n        // traceback) is part of the format, not a multiline string\n        traceback: ImmutableList(output.traceback)\n      });\n    default:\n      // Since we're well typed, output is never. However we can still get new output types we don't handle\n      // and need to fail hard instead of making indeterminate behavior\n      const unknownOutput = output as any;\n      if (unknownOutput.output_type) {\n        throw new TypeError(\n          `Output type ${(output as any).output_type} not recognized`\n        );\n      }\n      throw new TypeError(\n        `Output structure not known: ${JSON.stringify(output)}`\n      );\n  }\n}\n","/**\n * @module commutable\n */\nimport {\n  fromJS as immutableFromJS,\n  List as ImmutableList,\n  Map as ImmutableMap\n} from \"immutable\";\n\nimport {\n  CellId,\n  createFrozenMediaBundle,\n  demultiline,\n  JSONObject,\n  MediaBundle,\n  MultiLineString\n} from \"./primitives\";\n\nimport { makeNotebookRecord } from \"./notebook\";\n\nimport {\n  ImmutableCell,\n  ImmutableCodeCell,\n  ImmutableMarkdownCell,\n  ImmutableRawCell,\n  makeCodeCell,\n  makeMarkdownCell,\n  makeRawCell\n} from \"./cells\";\n\nimport {\n  ImmutableOutput,\n  makeDisplayData,\n  makeErrorOutput,\n  makeExecuteResult,\n  makeStreamOutput,\n  OnDiskErrorOutput\n} from \"./outputs\";\n\nimport { appendCell, CellStructure } from \"./structures\";\nimport { MarkdownCell, RawCell } from \"./v4\";\n\nconst VALID_MIMETYPES = {\n  text: \"text/plain\",\n  latex: \"text/latex\",\n  png: \"image/png\",\n  jpeg: \"image/jpeg\",\n  svg: \"image/svg+xml\",\n  html: \"text/html\",\n  javascript: \"application/x-javascript\",\n  json: \"application/javascript\",\n  pdf: \"application/pdf\"\n};\ntype MimeTypeKey = keyof typeof VALID_MIMETYPES;\ntype MimePayload = { [P in MimeTypeKey]?: MultiLineString };\n\ninterface MimeOutput<T extends string = string> extends MimePayload {\n  output_type: T;\n  prompt_number?: number;\n  metadata: object;\n}\n\nexport interface ExecuteResult extends MimeOutput<\"pyout\"> {}\nexport interface DisplayData extends MimeOutput<\"display_data\"> {}\nexport interface ErrorOutput {\n  output_type: \"error\" | \"pyerr\";\n  ename: string;\n  evalue: string;\n  traceback: string[];\n}\n\nexport interface StreamOutput {\n  output_type: \"stream\";\n  stream: string;\n  text: MultiLineString;\n}\n\nexport type Output = ExecuteResult | DisplayData | StreamOutput | ErrorOutput;\n\nexport interface HeadingCell {\n  cell_type: \"heading\";\n  metadata: JSONObject;\n  source: MultiLineString;\n  level: number;\n}\n\nexport interface CodeCell {\n  cell_type: \"code\";\n  language: string;\n  collapsed: boolean;\n  metadata: JSONObject;\n  input: MultiLineString;\n  prompt_number: number;\n  outputs: Output[];\n}\n\nexport type Cell = RawCell | MarkdownCell | HeadingCell | CodeCell;\n\nexport interface Worksheet {\n  cells: Cell[];\n  metadata: object;\n}\n\nexport interface NotebookV3 {\n  worksheets: Worksheet[];\n  metadata: object;\n  nbformat: 3;\n  nbformat_minor: number;\n}\n\nfunction createImmutableMarkdownCell(\n  cell: MarkdownCell\n): ImmutableMarkdownCell {\n  return makeMarkdownCell({\n    cell_type: cell.cell_type,\n    source: demultiline(cell.source),\n    metadata: immutableFromJS(cell.metadata)\n  });\n}\n\n/**\n * Handle the old v3 version of the media\n */\nfunction createImmutableMediaBundle(output: MimeOutput): Readonly<MediaBundle> {\n  const mediaBundle: { [key: string]: MultiLineString | undefined } = {};\n  for (const key of Object.keys(output)) {\n    // v3 had non-media types for rich media\n    if (key in VALID_MIMETYPES) {\n      mediaBundle[VALID_MIMETYPES[key as MimeTypeKey]] =\n        output[key as keyof MimePayload];\n    }\n  }\n  return createFrozenMediaBundle(mediaBundle);\n}\n\nfunction createImmutableOutput(output: Output): ImmutableOutput {\n  switch (output.output_type) {\n    case \"pyout\":\n      return makeExecuteResult({\n        execution_count: output.prompt_number,\n        // Note strangeness with v4 API\n        data: createImmutableMediaBundle(output),\n        metadata: immutableFromJS(output.metadata)\n      });\n    case \"display_data\":\n      return makeDisplayData({\n        data: createImmutableMediaBundle(output),\n        metadata: immutableFromJS(output.metadata)\n      });\n    case \"stream\":\n      // Default to stdout in all cases unless it's stderr\n      const name = output.stream === \"stderr\" ? \"stderr\" : \"stdout\";\n\n      return makeStreamOutput({\n        name,\n        text: demultiline(output.text)\n      });\n    case \"pyerr\":\n      return makeErrorOutput({\n        ename: output.ename,\n        evalue: output.evalue,\n        traceback: ImmutableList(output.traceback)\n      });\n    default:\n      throw new TypeError(`Output type ${output.output_type} not recognized`);\n  }\n}\n\nfunction createImmutableCodeCell(cell: CodeCell): ImmutableCodeCell {\n  return makeCodeCell({\n    cell_type: cell.cell_type,\n    source: demultiline(cell.input),\n    outputs: ImmutableList(cell.outputs.map(createImmutableOutput)),\n    execution_count: cell.prompt_number,\n    metadata: immutableFromJS(cell.metadata)\n  });\n}\n\nfunction createImmutableRawCell(cell: RawCell): ImmutableRawCell {\n  return makeRawCell({\n    cell_type: cell.cell_type,\n    source: demultiline(cell.source),\n    metadata: immutableFromJS(cell.metadata)\n  });\n}\n\nfunction createImmutableHeadingCell(cell: HeadingCell): ImmutableMarkdownCell {\n  // v3 heading cells are just markdown cells in v4+\n  return makeMarkdownCell({\n    cell_type: \"markdown\",\n    source: Array.isArray(cell.source)\n      ? demultiline(\n          cell.source.map(line =>\n            Array(cell.level)\n              .join(\"#\")\n              .concat(\" \")\n              .concat(line)\n          )\n        )\n      : cell.source,\n    metadata: immutableFromJS(cell.metadata)\n  });\n}\n\nfunction createImmutableCell(cell: Cell) {\n  switch (cell.cell_type) {\n    case \"markdown\":\n      return createImmutableMarkdownCell(cell);\n    case \"code\":\n      return createImmutableCodeCell(cell);\n    case \"raw\":\n      return createImmutableRawCell(cell);\n    case \"heading\":\n      return createImmutableHeadingCell(cell);\n    default:\n      throw new TypeError(`Cell type ${(cell as any).cell_type} unknown`);\n  }\n}\n\nexport function fromJS(notebook: NotebookV3) {\n  if (!isNotebookV3(notebook)) {\n    notebook = notebook as any;\n    throw new TypeError(\n      `Notebook is not a valid v3 notebook. v3 notebooks must be of form 3.x\n      It lists nbformat v${notebook.nbformat}.${notebook.nbformat_minor}`\n    );\n  }\n\n  const starterCellStructure: CellStructure = {\n    cellOrder: ImmutableList<CellId>().asMutable(),\n    cellMap: ImmutableMap<CellId, ImmutableCell>().asMutable()\n  };\n\n  const cellStructure = ([] as CellStructure[]).concat.apply(\n    [],\n    notebook.worksheets.map(worksheet =>\n      worksheet.cells.reduce(\n        (cellStruct, cell) => appendCell(cellStruct, createImmutableCell(cell)),\n        starterCellStructure\n      )\n    )\n  )[0];\n\n  return makeNotebookRecord({\n    cellOrder: cellStructure.cellOrder.asImmutable(),\n    cellMap: cellStructure.cellMap.asImmutable(),\n    nbformat_minor: notebook.nbformat_minor,\n    nbformat: 4,\n    metadata: immutableFromJS(notebook.metadata)\n  });\n}\n\nexport function isNotebookV3(value: any): value is NotebookV3 {\n  return (\n    value &&\n    typeof value === \"object\" &&\n    value.nbformat === 3 &&\n    value.nbformat_minor >= 0\n  );\n}\n","// Due to the on-disk format needing to be written out in an explicit order, we disable ordering for this file\n// tslint:disable:object-literal-sort-keys\n/**\n * @module commutable\n */\n/*\n * Functions in this module are provided for converting from Jupyter Notebook\n * Format v4 to nteract's in-memory format, affectionately referred to as\n * commutable.\n *\n * See: https://github.com/jupyter/nbformat/blob/62d6eb8803616d198eaa2024604d1fe923f2a7b3/nbformat/v4/nbformat.v4.schema.json\n *\n * The main goal here is consistency and compliance with the v4 spec. The types\n * contained in here (non Immutable ones) are constrained to the disk based\n * notebook format.\n *\n */\n\nimport {\n  fromJS as immutableFromJS,\n  List as ImmutableList,\n  Map as ImmutableMap,\n  Set as ImmutableSet\n} from \"immutable\";\n\nimport { ImmutableNotebook, makeNotebookRecord } from \"./notebook\";\n\nimport {\n  CellId,\n  createFrozenMediaBundle,\n  createOnDiskMediaBundle,\n  demultiline,\n  ExecutionCount,\n  JSONObject,\n  MultiLineString,\n  OnDiskMediaBundle,\n  remultiline\n} from \"./primitives\";\n\nimport {\n  ImmutableCell,\n  ImmutableCodeCell,\n  ImmutableMarkdownCell,\n  ImmutableRawCell,\n  makeCodeCell,\n  makeMarkdownCell,\n  makeRawCell\n} from \"./cells\";\n\nimport {\n  createImmutableOutput,\n  ImmutableOutput,\n  OnDiskOutput\n} from \"./outputs\";\n\nimport { appendCell, CellStructure } from \"./structures\";\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                              Cell Types\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nexport interface CodeCell {\n  cell_type: \"code\";\n  metadata: JSONObject;\n  execution_count: ExecutionCount;\n  source: MultiLineString;\n  outputs: OnDiskOutput[];\n}\n\nexport interface MarkdownCell {\n  cell_type: \"markdown\";\n  metadata: JSONObject;\n  source: MultiLineString;\n}\n\nexport interface RawCell {\n  cell_type: \"raw\";\n  metadata: JSONObject;\n  source: MultiLineString;\n}\n\nexport type Cell = CodeCell | MarkdownCell | RawCell;\n\nexport interface NotebookV4 {\n  cells: Cell[];\n  metadata: JSONObject;\n  nbformat: 4;\n  nbformat_minor: number;\n}\n\n/**\n * Converts a mutable representation of metadata to an immutable representation.\n *\n * @param metadata A JSON representation of notebook metadata.\n *\n * @returns ImmutableMetadata An immutable representation of the metadata.\n */\nfunction createImmutableMetadata(metadata: JSONObject) {\n  return ImmutableMap(metadata).map((v, k: string) => {\n    if (k !== \"tags\") {\n      return v;\n    }\n\n    if (Array.isArray(v)) {\n      return ImmutableSet(v);\n    }\n\n    // The notebook spec requires that this field is an Array of strings\n    return ImmutableSet();\n  });\n}\n\nfunction createImmutableRawCell(cell: RawCell): ImmutableRawCell {\n  return makeRawCell({\n    cell_type: cell.cell_type,\n    source: demultiline(cell.source),\n    metadata: createImmutableMetadata(cell.metadata)\n  });\n}\n\nfunction createImmutableMarkdownCell(\n  cell: MarkdownCell\n): ImmutableMarkdownCell {\n  return makeMarkdownCell({\n    cell_type: cell.cell_type,\n    source: demultiline(cell.source),\n    metadata: createImmutableMetadata(cell.metadata)\n  });\n}\n\nfunction createImmutableCodeCell(cell: CodeCell): ImmutableCodeCell {\n  return makeCodeCell({\n    cell_type: cell.cell_type,\n    source: demultiline(cell.source),\n    outputs: ImmutableList(cell.outputs.map(createImmutableOutput)),\n    execution_count: cell.execution_count,\n    metadata: createImmutableMetadata(cell.metadata)\n  });\n}\n\n/**\n * Converts a JSON representation of a cell of any type to the correct\n * immutable representation, per the v4 nbformat specification.\n *\n * @param cell A JSON representation of a cell.\n *\n * @returns An immutable representation of the same cell.\n */\nfunction createImmutableCell(cell: Cell): ImmutableCell {\n  switch (cell.cell_type) {\n    case \"markdown\":\n      return createImmutableMarkdownCell(cell);\n    case \"code\":\n      return createImmutableCodeCell(cell);\n    case \"raw\":\n      return createImmutableRawCell(cell);\n    default:\n      throw new TypeError(`Cell type ${(cell as any).cell_type} unknown`);\n  }\n}\n\nexport function fromJS(notebook: NotebookV4) {\n  if (!isNotebookV4(notebook)) {\n    notebook = notebook as any;\n    throw new TypeError(\n      `Notebook is not a valid v4 notebook. v4 notebooks must be of form 4.x\n       It lists nbformat v${notebook.nbformat}.${notebook.nbformat_minor}`\n    );\n  }\n\n  // Since we're doing N cell operations all at once, switch to mutable then\n  // switch back after.\n  const starterCellStructure: CellStructure = {\n    cellOrder: ImmutableList<CellId>().asMutable(),\n    cellMap: ImmutableMap<CellId, ImmutableCell>().asMutable()\n  };\n\n  const cellStructure = notebook.cells.reduce(\n    (cellStruct, cell) => appendCell(cellStruct, createImmutableCell(cell)),\n    starterCellStructure\n  );\n\n  return makeNotebookRecord({\n    cellOrder: cellStructure.cellOrder.asImmutable(),\n    cellMap: cellStructure.cellMap.asImmutable(),\n    nbformat_minor: notebook.nbformat_minor,\n    nbformat: 4,\n    metadata: immutableFromJS(notebook.metadata)\n  });\n}\n\nfunction metadataToJS(immMetadata: ImmutableMap<string, any>) {\n  return immMetadata.toJS() as JSONObject;\n}\n\nfunction outputToJS(output: ImmutableOutput): OnDiskOutput {\n  switch (output.output_type) {\n    case \"execute_result\":\n      return {\n        output_type: output.output_type,\n        execution_count: output.execution_count,\n        data: createOnDiskMediaBundle(output.data),\n        metadata: output.metadata.toJS()\n      };\n    case \"display_data\":\n      return {\n        output_type: output.output_type,\n        data: createOnDiskMediaBundle(output.data),\n        metadata: output.metadata.toJS()\n      };\n    case \"stream\":\n      return {\n        output_type: output.output_type,\n        name: output.name,\n        text: remultiline(output.text)\n      };\n    case \"error\":\n      return {\n        output_type: output.output_type,\n        ename: output.ename,\n        evalue: output.evalue,\n        // Note: this is one of the cases where the Array of strings (for\n        // traceback) is part of the format, not a multiline string\n        traceback: output.traceback.toJS()\n      };\n  }\n}\n\nfunction markdownCellToJS(immCell: ImmutableMarkdownCell): MarkdownCell {\n  return {\n    cell_type: \"markdown\",\n    source: remultiline(immCell.source),\n    metadata: metadataToJS(immCell.metadata)\n  };\n}\n\n/**\n * Converts an immutable representation of a code cell to a JSON representation.\n *\n * @param immCell An immutable representation of a code cell.\n *\n * @returns A JSON representation of the same code cell.\n */\nfunction codeCellToJS(immCell: ImmutableCodeCell): CodeCell {\n  return {\n    cell_type: \"code\",\n    source: remultiline(immCell.source),\n    outputs: immCell.outputs.map(outputToJS).toArray(),\n    execution_count: immCell.execution_count,\n    metadata: metadataToJS(immCell.metadata)\n  };\n}\n\n/**\n * Converts an immutable representation of a raw cell to a JSON representation.\n *\n * @param immCell An immutable representation of a raw cell.\n *\n * @returns A JSON representation of the same raw cell.\n */\nfunction rawCellToJS(immCell: ImmutableRawCell): RawCell {\n  return {\n    cell_type: \"raw\",\n    source: remultiline(immCell.source),\n    metadata: metadataToJS(immCell.get(\"metadata\", ImmutableMap()))\n  };\n}\n\n/**\n * Converts an immutable cell to a JSON cell.\n *\n * @param immCell An immutable representation of a cell.\n *\n * @returns A JSON representation of the same cell.\n */\nfunction cellToJS(immCell: ImmutableCell): Cell {\n  switch (immCell.cell_type) {\n    case \"markdown\":\n      return markdownCellToJS(immCell);\n    case \"code\":\n      return codeCellToJS(immCell);\n    case \"raw\":\n      return rawCellToJS(immCell);\n    default:\n      throw new TypeError(\"Cell type unknown at runtime\");\n  }\n}\n\n/**\n * Converts an immutable representation of a notebook to a JSON representation.\n *\n * @param immnb The immutable representation of a notebook.\n *\n * @returns The JSON representation of a notebook.\n */\nexport function toJS(immnb: ImmutableNotebook): NotebookV4 {\n  const plainNotebook = immnb.toObject();\n  const plainCellOrder: string[] = plainNotebook.cellOrder.toArray();\n  const plainCellMap: {\n    [key: string]: ImmutableCell;\n  } = plainNotebook.cellMap.toObject();\n\n  const cells = plainCellOrder.map((cellId: string) =>\n    cellToJS(plainCellMap[cellId])\n  );\n\n  return {\n    cells,\n    metadata: plainNotebook.metadata.toJS() as JSONObject,\n    nbformat: 4,\n    nbformat_minor: plainNotebook.nbformat_minor\n  };\n}\n\nexport function isNotebookV4(value: any): value is NotebookV4 {\n  return (\n    value &&\n    typeof value === \"object\" &&\n    value.nbformat === 4 &&\n    value.nbformat_minor >= 0\n  );\n}\n","/**\n * @module commutable\n */\n/**\n *\n * This is the top level data structure for in memory data structures,\n * and allows converting from on-disk v4 and v3 Jupyter Notebooks\n *\n */\nimport * as v3 from \"./v3\";\nimport * as v4 from \"./v4\";\n\nimport { List as ImmutableList, Map as ImmutableMap, Record } from \"immutable\";\n\nimport { ImmutableCell } from \"./cells\";\nimport { CellId, JSONType } from \"./primitives\";\n\nexport interface NotebookRecordParams {\n  cellOrder: ImmutableList<CellId>;\n  cellMap: ImmutableMap<CellId, ImmutableCell>;\n  nbformat_minor: number;\n  nbformat: number;\n  metadata: ImmutableMap<string, any>;\n}\n\nexport const makeNotebookRecord = Record<NotebookRecordParams>({\n  cellOrder: ImmutableList(),\n  cellMap: ImmutableMap(),\n  nbformat_minor: 0,\n  nbformat: 4,\n  metadata: ImmutableMap()\n});\n\nexport type ImmutableNotebook = Record<NotebookRecordParams> &\n  Readonly<NotebookRecordParams>;\n\nfunction freezeReviver<T extends JSONType>(_k: string, v: T) {\n  return Object.freeze(v);\n}\n\nexport type Notebook = v4.NotebookV4 | v3.NotebookV3;\n\n/**\n * Converts a string representation of a notebook into a JSON representation.\n *\n * @param notebookString A string representation of a notebook.\n *\n * @returns A JSON representation of the same notebook.\n */\nexport function parseNotebook(notebookString: string): Notebook {\n  return JSON.parse(notebookString, freezeReviver);\n}\n\nexport function fromJS(notebook: Notebook | ImmutableNotebook) {\n  if (Record.isRecord(notebook)) {\n    if (notebook.has(\"cellOrder\") && notebook.has(\"cellMap\")) {\n      return notebook;\n    }\n    throw new TypeError(\n      \"commutable was passed an Immutable.Record structure that is not a notebook\"\n    );\n  }\n\n  if (v4.isNotebookV4(notebook)) {\n    if (\n      Array.isArray(notebook.cells) &&\n      typeof notebook.metadata === \"object\"\n    ) {\n      return v4.fromJS(notebook);\n    }\n  } else if (v3.isNotebookV3(notebook)) {\n    return v3.fromJS(notebook);\n  }\n\n  if (notebook.nbformat) {\n    throw new TypeError(\n      `nbformat v${notebook.nbformat}.${notebook.nbformat_minor} not recognized`\n    );\n  }\n\n  throw new TypeError(\"This notebook format is not supported\");\n}\n\n/**\n * Converts an immutable representation of a notebook to a JSON representation of the\n * notebook using the v4 of the nbformat specification.\n *\n * @param immnb The immutable representation of a notebook.\n *\n * @returns The JSON representation of a notebook.\n */\nexport function toJS(immnb: ImmutableNotebook): v4.NotebookV4 {\n  const minorVersion: number | null = immnb.get(\"nbformat_minor\", null);\n\n  if (\n    immnb.get(\"nbformat\") === 4 &&\n    typeof minorVersion === \"number\" &&\n    minorVersion >= 0\n  ) {\n    return v4.toJS(immnb);\n  }\n  throw new TypeError(\"Only notebook formats 3 and 4 are supported!\");\n}\n\n/**\n * Converts a JSON representation of a notebook into a string representation.\n *\n * @param notebook The JSON representation of a notebook.\n *\n * @returns A string containing the notebook data.\n */\nexport function stringifyNotebook(notebook: v4.NotebookV4) {\n  return JSON.stringify(notebook, null, 2);\n}\n","/**\n * @module commutable\n */\nimport uuid from \"uuid/v4\";\n\nimport { CellId, createCellId } from \"./primitives\";\n\nimport { ImmutableNotebook, makeNotebookRecord } from \"./notebook\";\n\nimport { ImmutableCell, makeCodeCell, makeMarkdownCell } from \"./cells\";\n\nimport { List as ImmutableList, Map as ImmutableMap } from \"immutable\";\n\n// The cell creators here are a bit duplicative\nexport const createCodeCell = makeCodeCell;\nexport const createMarkdownCell = makeMarkdownCell;\n\nexport const emptyCodeCell = createCodeCell();\nexport const emptyMarkdownCell = createMarkdownCell();\n\n// These are all kind of duplicative now that we're on records.\n// Since we export these though, they're left for\n// backwards compatiblity\nexport const defaultNotebook = makeNotebookRecord();\nexport const createNotebook = makeNotebookRecord;\nexport const emptyNotebook = makeNotebookRecord();\n\nexport interface CellStructure {\n  cellOrder: ImmutableList<CellId>;\n  cellMap: ImmutableMap<CellId, ImmutableCell>;\n}\n\n/**\n * A function that appends a new cell to a CellStructure object.\n *\n * @param cellStructure The cellOrder and cellMap of the current notebook\n * @param immutableCell The cell that will be inserted into the cellStructure\n * @param id The id of the new cell, defaults to a new UUID\n *\n * @returns Cell structure with the new cell appended at the end\n */\nexport function appendCell(\n  cellStructure: CellStructure,\n  immutableCell: ImmutableCell,\n  id: CellId = createCellId()\n): CellStructure {\n  return {\n    cellOrder: cellStructure.cellOrder.push(id),\n    cellMap: cellStructure.cellMap.set(id, immutableCell)\n  };\n}\n\n/**\n * A function that appends a cell to an immutable notebook.\n *\n * @param immnb An immutable data structure representing the notebook that will be modified\n * @param immCell The new cell that will be inserted into the notebook\n *\n * @returns The modified notebook\n */\nexport function appendCellToNotebook(\n  immnb: ImmutableNotebook,\n  immCell: ImmutableCell\n): ImmutableNotebook {\n  return immnb.withMutations(nb => {\n    const cellStructure: CellStructure = {\n      cellOrder: nb.get(\"cellOrder\"),\n      cellMap: nb.get(\"cellMap\")\n    };\n    const { cellOrder, cellMap } = appendCell(cellStructure, immCell);\n    return nb.set(\"cellOrder\", cellOrder).set(\"cellMap\", cellMap);\n  });\n}\n\n/**\n * Inserts a cell with cellID at a given index within the notebook.\n *\n * @param notebook The notebook the cell will be inserted into.\n * @param cell The cell that will be inserted\n * @param cellID The ID of the cell.\n * @param index The position we would like to insert the cell at\n *\n * @returns The modified notebook.\n */\nexport function insertCellAt(\n  notebook: ImmutableNotebook,\n  cell: ImmutableCell,\n  cellId: string,\n  index: number\n): ImmutableNotebook {\n  return notebook.withMutations(nb =>\n    nb\n      .setIn([\"cellMap\", cellId], cell)\n      .set(\"cellOrder\", nb.get(\"cellOrder\").insert(index, cellId))\n  );\n}\n\n/**\n * Inserts a new cell with cellID before an existing cell with priorCellID\n * in the notebook.\n *\n * @param notebook The notebook the cell will be inserted into.\n * @param cell The cell that will be inserted\n * @param cellID The ID of the cell.\n * @param priorCellID The ID of the existing cell.\n */\nexport function insertCellAfter(\n  notebook: ImmutableNotebook,\n  cell: ImmutableCell,\n  cellId: string,\n  priorCellId: string\n): ImmutableNotebook {\n  return insertCellAt(\n    notebook,\n    cell,\n    cellId,\n    notebook.get(\"cellOrder\").indexOf(priorCellId) + 1\n  );\n}\n\n/**\n * Deprecated: Delete a cell with CellID at a given location.\n *\n * Note that this function is deprecated in favor of `deleteCell`.\n *\n * @param notebook The notebook containing the cell.\n * @param cellID The ID of the cell that will be deleted.\n *\n * @returns The modified notebook\n *\n * @deprecated use `deleteCell()` instead\n */\nexport function removeCell(\n  notebook: ImmutableNotebook,\n  cellId: string\n): ImmutableNotebook {\n  console.log(\n    \"Deprecation Warning: removeCell() is being deprecated. Please use deleteCell() instead\"\n  );\n\n  return deleteCell(notebook, cellId);\n}\n\n/**\n * Delete a cell with CellID at a given location.\n *\n * @param notebook The notebook containing the cell.\n * @param cellID The ID of the cell that will be deleted.\n *\n * @returns The modified notebook\n */\nexport function deleteCell(\n  notebook: ImmutableNotebook,\n  cellId: string\n): ImmutableNotebook {\n  return notebook\n    .removeIn([\"cellMap\", cellId])\n    .update(\"cellOrder\", cellOrder => cellOrder.filterNot(id => id === cellId));\n}\n\n/**\n * A new 'monocell' notebook with a single empty code cell. This function is useful\n * if you are looking to initialize a fresh, new notebook.\n */\nexport const monocellNotebook = appendCellToNotebook(\n  emptyNotebook,\n  emptyCodeCell\n);\n","/**\n * @module commutable\n */\n// API Exports\n\nexport * from \"./primitives\";\nexport * from \"./structures\";\nexport * from \"./outputs\";\nexport * from \"./cells\";\nexport * from \"./notebook\";\n","/**\n * @module rx-jupyter\n */\n/** tslint:disable:jsdoc-format */\nimport Cookies from \"js-cookie\";\nimport { AjaxRequest, AjaxResponse } from \"rxjs/ajax\";\n\nexport const normalizeBaseURL = (url = \"\") => url.replace(/\\/+$/, \"\");\n\nexport interface ServerConfig {\n  endpoint?: string;\n  url?: string;\n  token?: string;\n  xsrfToken?: string;\n  crossDomain?: boolean;\n  ajaxOptions?: Partial<AjaxRequest>;\n  wsProtocol?: string | string[];\n}\n\n/**\n * Creates an AJAX request to connect to a given server. This function\n * handles setting the authorization tokens on the request.\n *\n * @param serverConfig Details about the server to connect to.\n * @param uri The URL to connect to, not including the base URL\n * @param opts A set of options to pass to the AJAX request. We mimic jquery.ajax support of a cache option here.\n *\n * @returns A fully-configured AJAX request for connecting to the server.\n */\nexport const createAJAXSettings = (\n  serverConfig: ServerConfig,\n  uri = \"/\",\n  opts: Partial<AjaxRequest & { cache?: boolean }> = {}\n): AjaxRequest => {\n  const baseURL = normalizeBaseURL(serverConfig.endpoint || serverConfig.url);\n  let url = `${baseURL}${uri}`;\n  if (opts.cache === false) {\n    const parsed = new URL(url);\n    parsed.searchParams.set(\"_\", Date.now().toString());\n    url = parsed.href;\n  }\n\n  // Use the server config provided token if available before trying cookies\n  const xsrfToken = serverConfig.xsrfToken || Cookies.get(\"_xsrf\");\n  const headers = {\n    ...(xsrfToken && { \"X-XSRFToken\": xsrfToken }),\n    ...(serverConfig.token && {\n      Authorization: `token ${serverConfig.token}`\n    })\n  };\n\n  // Merge in our typical settings for responseType, allow setting additional\n  // options like the method\n  const settings = {\n    url,\n    responseType: \"json\",\n    createXHR: () => new XMLHttpRequest(),\n    ...serverConfig,\n    ...serverConfig.ajaxOptions,\n    ...opts,\n    // Make sure we merge in the auth headers with user given headers\n    headers: {\n      ...headers,\n      ...opts.headers,\n      ...(serverConfig.ajaxOptions && serverConfig.ajaxOptions.headers)\n    }\n  };\n  delete settings.endpoint;\n  delete settings.cache;\n  return settings;\n};\n\n/**\n * RxJS's AjaxResponse sets `response` as any when we can declare the type returned.\n *\n * This interface is meant to be internal, used as:\n *\n * ```\n   ajax('/api/contents') as Observable<JupyterAjaxResponse<Contents>>\n   ```\n * or as\n * ```\n   ajax('/api/contents').map(resp => {\n     if(resp.response.type === \"notebook\")\n   })\n   ```\n *\n * NOTE: the response can still be invalid and should likely be validated\n */\nexport interface JupyterAjaxResponse<ResponseType, ErrorType = string>\n  extends AjaxResponse {\n  response: ResponseType | ErrorType;\n}\n","/**\n * @module rx-jupyter\n */\nimport { Notebook } from \"@nteract/commutable\";\nimport querystring from \"querystring\";\nimport { Observable } from \"rxjs\";\nimport { ajax, AjaxRequest } from \"rxjs/ajax\";\nimport urljoin from \"url-join\";\nimport { createAJAXSettings, JupyterAjaxResponse, ServerConfig } from \"./base\";\n\nconst formURI = (path: string) => urljoin(\"/api/contents/\", path);\n\nconst formCheckpointURI = (path: string, checkpointID: string) =>\n  urljoin(\"/api/contents/\", path, \"checkpoints\", checkpointID);\n\nexport type FileType = \"directory\" | \"file\" | \"notebook\";\n\n/*********************************************\n * Contents API request and response payloads\n *********************************************/\n\n/**\n * Just the Stat call portion of the contents API\n * (no content property)\n */\nexport interface IStatContent<FT extends FileType = FileType> {\n  name: string;\n  path: string;\n  type: FT;\n  writable: boolean;\n  created: string;\n  last_modified: string;\n  mimetype: string;\n  format: string;\n}\n\n/**\n * For directory listings and when a GET is performed against content with ?content=0\n * the content field is null\n */\nexport interface IEmptyContent<FT extends FileType = FileType>\n  extends IStatContent<FT> {\n  content: null;\n}\n\n/**\n * Full Payloads from the contents API\n */\nexport interface IContent<FT extends FileType = FileType>\n  extends IStatContent<FT> {\n  content: FT extends \"file\"\n    ? string\n    : FT extends \"notebook\"\n    ? Notebook\n    : FT extends \"directory\"\n    ? Array<IEmptyContent<FT>>\n    : null;\n}\n\n/**\n * Creates an AjaxObservable for removing content.\n *\n * @param serverConfig The server configuration\n * @param path The path to the content\n *\n * @returns An Observable with the request response\n */\nexport const remove = (serverConfig: ServerConfig, path: string) =>\n  ajax(\n    createAJAXSettings(serverConfig, formURI(path), {\n      method: \"DELETE\"\n    })\n  );\n\ninterface IGetParams {\n  type: \"file\" | \"directory\" | \"notebook\";\n  format: \"text\" | \"base64\" | string;\n  content: 0 | 1;\n}\n\n/**\n * Creates an AjaxObservable for getting content at a path\n *\n * @param serverConfig The server configuration\n * @param path The content to fetch\n * @param params type, format, content\n * @param params.type file type, one of 'file', 'directory', 'notebook'\n * @param params.format How file content should be returned, e.g. 'text', 'base64'\n * @param params.content Return content or not (0 => no content, 1 => content please)\n *\n * @returns An Observable with the request response\n */\nexport function get(\n  serverConfig: ServerConfig,\n  path: string,\n  params: Partial<IGetParams> = {}\n) {\n  let uri = formURI(path);\n  const query = querystring.stringify(params);\n  if (query.length > 0) {\n    uri = `${uri}?${query}`;\n  }\n\n  // NOTE: If the user requests with params.content === 0\n  // Then the response is IEmptyContent\n  return ajax(\n    createAJAXSettings(serverConfig, uri, { cache: false })\n  ) as Observable<JupyterAjaxResponse<IContent<FileType>>>;\n}\n\n/**\n * Creates an AjaxObservable for renaming a file.\n *\n * @param serverConfig The server configuration\n * @param path The content to rename.\n * @param model The data to send in the server request\n *\n * @returns An Observable with the request response\n */\nexport function update<FT extends FileType>(\n  serverConfig: ServerConfig,\n  path: string,\n  model: Partial<IContent>\n) {\n  return ajax(\n    createAJAXSettings(serverConfig, formURI(path), {\n      body: model,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"PATCH\"\n    })\n  );\n}\n\n/**\n * Creates an AjaxObservable for creating content\n *\n * @param serverConfig The server configuration\n * @param path The path to the content\n * @param model The data to send in the server request\n *\n * @returns An Observable with the request response\n */\nexport function create<FT extends FileType>(\n  serverConfig: ServerConfig,\n  path: string,\n  model: Partial<IContent<FT>> & { type: FT }\n) {\n  return ajax(\n    createAJAXSettings(serverConfig, formURI(path), {\n      body: model,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\"\n    })\n  );\n}\n\n/**\n * Creates an AjaxObservable for saving the file in the location specified by\n * name and path in the model.\n *\n * @param serverConfig  The server configuration\n * @param path The path to the content\n * @param model The data to send in the server request\n *\n * @returns An Observable with the request response\n */\nexport function save<FT extends FileType>(\n  serverConfig: ServerConfig,\n  path: string,\n  model: Partial<IContent<FT>>\n) {\n  return ajax(\n    createAJAXSettings(serverConfig, formURI(path), {\n      body: model,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"PUT\"\n    })\n  ) as Observable<\n    JupyterAjaxResponse<{ path: string; [property: string]: string }>\n  >;\n}\n\n/**\n * Creates an AjaxObservable for listing checkpoints for a given file.\n *\n * @param serverConfig The server configuration\n * @param path The content containing checkpoints to be listed.\n *\n * @returns An Observable with the request response\n */\nexport const listCheckpoints = (serverConfig: ServerConfig, path: string) =>\n  ajax(\n    createAJAXSettings(serverConfig, formCheckpointURI(path, \"\"), {\n      cache: false,\n      method: \"GET\"\n    })\n  );\n\n/**\n * Creates an AjaxObservable for creating a new checkpoint with the current state of a file.\n * With the default Jupyter FileContentsManager, only one checkpoint is supported,\n * so creating new checkpoints clobbers existing ones.\n *\n * @param serverConfig The server configuration\n * @param path The content containing the checkpoint to be created\n *\n * @returns An Observable with the request response\n */\nexport const createCheckpoint = (serverConfig: ServerConfig, path: string) =>\n  ajax(\n    createAJAXSettings(serverConfig, formCheckpointURI(path, \"\"), {\n      method: \"POST\"\n    })\n  );\n\n/**\n * Creates an AjaxObservable for deleting a checkpoint for a given file.\n *\n * @param  serverConfig The server configuration\n * @param  path The content containing the checkpoint to be deleted\n * @param  checkpointID ID of checkpoint to be deleted\n *\n * @returns An Observable with the request response\n */\nexport const deleteCheckpoint = (\n  serverConfig: ServerConfig,\n  path: string,\n  checkpointID: string\n) =>\n  ajax(\n    createAJAXSettings(serverConfig, formCheckpointURI(path, checkpointID), {\n      method: \"DELETE\"\n    })\n  );\n\n/**\n * Creates an AjaxObservable for restoring a file to a specified checkpoint.\n *\n * @param serverConfig The server configuration\n * @param path The content to restore to a previous checkpoint\n * @param checkpointID ID of checkpoint to be used for restoration\n *\n * @returns An Observable with the request response\n */\nexport const restoreFromCheckpoint = (\n  serverConfig: ServerConfig,\n  path: string,\n  checkpointID: string\n) =>\n  ajax(\n    createAJAXSettings(serverConfig, formCheckpointURI(path, checkpointID), {\n      method: \"POST\"\n    })\n  );\n","/**\n * @module rx-jupyter\n */\nimport { Subject, Subscriber } from \"rxjs\";\nimport { ajax } from \"rxjs/ajax\";\nimport { delay, retryWhen, share, tap } from \"rxjs/operators\";\nimport { webSocket } from \"rxjs/webSocket\";\nimport urljoin from \"url-join\";\nimport URLSearchParams from \"url-search-params\";\nimport { createAJAXSettings, ServerConfig } from \"./base\";\n\nimport { JupyterMessage } from \"@nteract/messaging\";\n\n/**\n * Creates an AjaxObservable for listing running kernels.\n *\n * @param serverConfig The server configuration\n *\n * @returns An Observable with the request response\n */\nexport const list = (serverConfig: ServerConfig) =>\n  ajax(createAJAXSettings(serverConfig, \"/api/kernels\", { cache: false }));\n\n/**\n * Creates an AjaxObservable for getting info about a kernel.\n *\n * @param serverConfig The server configuration\n * @param id The id of the kernel to fetch\n *\n * @returns An Observable with the request response\n */\nexport const get = (serverConfig: ServerConfig, id: string) =>\n  ajax(\n    createAJAXSettings(serverConfig, `/api/kernels/${id}`, {\n      cache: false\n    })\n  );\n\n/**\n * Creates an AjaxObservable for starting a kernel.\n *\n * @param serverConfig The server configuration\n * @param name The name of the kernel to start\n * @param path The path to start the kernel in\n *\n * @returns An Observable with the request response\n */\nexport const start = (serverConfig: ServerConfig, name: string, path: string) =>\n  ajax(\n    createAJAXSettings(serverConfig, \"/api/kernels\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\",\n      body: { path, name }\n    })\n  );\n\n/**\n * Creates an AjaxObservable for killing a kernel.\n *\n * @param serverConfig The server configuration\n * @param id The id of the kernel to kill\n *\n * @returns An Observable with the request response\n */\nexport const kill = (serverConfig: ServerConfig, id: string) =>\n  ajax(\n    createAJAXSettings(serverConfig, `/api/kernels/${id}`, { method: \"DELETE\" })\n  );\n\n/**\n * Creates an AjaxObservable for interrupting a kernel.\n *\n * @param serverConfig The server configuration\n * @param id The id of the kernel to interupt\n *\n * @returns An Observable with the request response\n */\nexport const interrupt = (serverConfig: ServerConfig, id: string) =>\n  ajax(\n    createAJAXSettings(serverConfig, `/api/kernels/${id}/interrupt`, {\n      method: \"POST\"\n    })\n  );\n\n/**\n * Creates an AjaxObservable for restarting a kernel.\n *\n * @param serverConfig The server configuration\n * @param id The id of the kernel to restart\n *\n * @returns An Observable with the request response\n */\nexport const restart = (serverConfig: ServerConfig, id: string) =>\n  ajax(\n    createAJAXSettings(serverConfig, `/api/kernels/${id}/restart`, {\n      method: \"POST\"\n    })\n  );\n\n/**\n * Creates a Websocket URL that can be used to initialize a\n * connection with a kernel.\n *\n * @param serverConfig The server configuration\n * @param kernelID The ID of the kernel to connect to\n * @param sessionID The ID of the session to connect as\n *\n * @returns A string with the fully formed Websocket URL\n */\nexport const formWebSocketURL = (\n  serverConfig: ServerConfig,\n  kernelID: string,\n  sessionID?: string\n): string => {\n  const params = new URLSearchParams();\n  if (serverConfig.token) {\n    params.append(\"token\", serverConfig.token);\n  }\n  if (sessionID) {\n    params.append(\"session_id\", sessionID);\n  }\n\n  const q = params.toString();\n  const suffix = q !== \"\" ? `?${q}` : \"\";\n\n  const url = urljoin(\n    serverConfig.endpoint || \"\",\n    `/api/kernels/${kernelID}/channels${suffix}`\n  );\n\n  return url.replace(/^http(s)?/, \"ws$1\");\n};\n\n/**\n * Creates a connection to a kernel with the given kernelID scoped under\n * a particular sessionID.\n *\n * @param serverConfig The server configuration\n * @param kernelID The ID of the kernel to connect to\n * @param sessionID The ID of the session to connect as\n *\n * @returns A websocket Subject that can be subscribed to\n */\nexport const connect = (\n  serverConfig: ServerConfig,\n  kernelID: string,\n  sessionID?: string\n): Subject<any> => {\n  const wsSubject = webSocket<JupyterMessage>({\n    url: formWebSocketURL(serverConfig, kernelID, sessionID),\n    protocol: serverConfig.wsProtocol\n  });\n\n  wsSubject.pipe(\n    retryWhen(error$ => {\n      // Keep track of how many times we've already re-tried\n      let counter = 0;\n      const maxRetries = 100;\n\n      return error$.pipe(\n        tap(e => {\n          counter++;\n          // This will only retry on error when it's a close event that is not\n          // from a .complete() of the websocket subject\n          if (counter > maxRetries || e instanceof Event === false) {\n            console.error(\n              `bubbling up Error on websocket after retrying ${counter} times out of ${maxRetries}`,\n              e\n            );\n            throw e;\n          } else {\n            // We'll retry at this point\n            console.log(\"attempting to retry kernel connection after error\", e);\n          }\n        }),\n        delay(1000)\n      );\n    }),\n    // The websocket subject is multicast and we need the retryWhen logic to retain that property\n    share()\n  );\n\n  // Create a subject that does some of the handling inline for the session\n  // and ensuring it's serialized\n  return Subject.create(\n    Subscriber.create(\n      (message?: JupyterMessage) => {\n        if (typeof message === \"object\") {\n          const sessionizedMessage = {\n            ...message,\n            header: {\n              session: sessionID,\n              ...message.header\n            }\n          };\n\n          wsSubject.next(sessionizedMessage);\n        } else {\n          console.error(\"Message must be an object, the app sent\", message);\n        }\n      },\n      (e: Error) => wsSubject.error(e),\n      () => wsSubject.complete()\n    ), // Subscriber\n    // Subject.create takes a subscriber and an observable. We're only\n    // overriding the subscriber here so we pass the subject on as an\n    // observable as the second argument to Subject.create (since it's\n    // _also_ an observable)\n    wsSubject\n  );\n};\n","/**\n * @module rx-jupyter\n */\nimport { Observable } from \"rxjs\";\nimport { ajax, AjaxResponse } from \"rxjs/ajax\";\nimport { createAJAXSettings, ServerConfig } from \"./base\";\n\n/**\n * Creates an AjaxObservable for listing avaialble kernelspecs.\n *\n * @param serverConfig The server configuration\n *\n * @return An Observable with the request response\n */\nexport const list = (serverConfig: ServerConfig): Observable<AjaxResponse> =>\n  ajax(createAJAXSettings(serverConfig, \"/api/kernelspecs\", { cache: false }));\n\n/**\n * Returns the specification of available kernels with the given\n * kernel name.\n *\n * @param serverConfig The server configuration\n * @param name The name of the kernel\n *\n * @returns An Observable with the request reponse\n */\nexport const get = (\n  serverConfig: ServerConfig,\n  name: string\n): Observable<AjaxResponse> =>\n  ajax(\n    createAJAXSettings(serverConfig, `/api/kernelspecs/${name}`, {\n      cache: false\n    })\n  );\n","/**\n * @module rx-jupyter\n */\nimport { Observable } from \"rxjs\";\nimport { ajax, AjaxResponse } from \"rxjs/ajax\";\nimport { createAJAXSettings, ServerConfig } from \"./base\";\n\n/**\n * Creates an AjaxObservable for listing available sessions.\n *\n * @param serverConfig The server configuration\n * @param sessionID Universally unique id for session to be requested.\n *\n * @returns An Observable with the request response\n */\nexport const list = (serverConfig: ServerConfig): Observable<AjaxResponse> =>\n  ajax(createAJAXSettings(serverConfig, \"/api/sessions\", { cache: false }));\n\n/**\n * Creates an AjaxObservable for getting a particular session's information.\n *\n * @param serverConfig The server configuration\n * @param sessionID Universally unique id for session to be requested\n *\n * @returns An Observable with the request/response\n */\nexport const get = (\n  serverConfig: ServerConfig,\n  sessionID: string\n): Observable<AjaxResponse> =>\n  ajax(\n    createAJAXSettings(serverConfig, `/api/sessions/${sessionID}`, {\n      cache: false\n    })\n  );\n\n/**\n * Creates an AjaxObservable for destroying a particular session.\n *\n * @param serverConfig The server configuration\n * @param sessionID Unique id for session to be requested\n *\n * @returns An Observable with the request/response\n */\nexport const destroy = (\n  serverConfig: ServerConfig,\n  sessionID: string\n): Observable<AjaxResponse> =>\n  ajax(\n    createAJAXSettings(serverConfig, `/api/sessions/${sessionID}`, {\n      method: \"DELETE\"\n    })\n  );\n\n/**\n * Creates an AjaxObservable for updating a session.\n *\n * @param serverConfig The server configuration\n * @param sessionID Unique identifier for session to be changed\n * @param body Payload containing new kernel_name, new kernel_id,\n * name of the new session, and the new path.\n *\n * @returns An Observable with the request/response\n */\nexport const update = (\n  serverConfig: ServerConfig,\n  sessionID: string,\n  body: object\n): Observable<AjaxResponse> =>\n  ajax(\n    createAJAXSettings(serverConfig, `/api/sessions/${sessionID}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body\n    })\n  );\n\n/**\n * Creates an AjaxObservable for getting a particular session's information.\n *\n * @param serverConfig  The server configuration\n * @param body Payload containing kernel name, kernel_id, session\n * name, and path for creation of a new session.\n *\n * @returns An Observable with the request/response\n */\nexport const create = (\n  serverConfig: ServerConfig,\n  body: object\n): Observable<AjaxResponse> =>\n  ajax(\n    createAJAXSettings(serverConfig, \"/api/sessions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body\n    })\n  );\n","/**\n * @module rx-jupyter\n */\nimport { ajax, AjaxResponse } from \"rxjs/ajax\";\nimport { createAJAXSettings, ServerConfig as _ServerConfig } from \"./base\";\n\n// Workaround an issue with re-exporting an interface by type aliasing it\nexport type ServerConfig = _ServerConfig;\n\nimport { Observable } from \"rxjs\";\nimport * as contents from \"./contents\";\nimport * as kernels from \"./kernels\";\nimport * as kernelspecs from \"./kernelspecs\";\nimport * as sessions from \"./sessions\";\nimport * as terminals from \"./terminals\";\n\n/**\n * Get the version of the API for a given server.\n *\n * @param serverConfig The server configuration\n *\n * @returns An Observable containing the API version information\n */\nexport const apiVersion = (\n  serverConfig: ServerConfig\n): Observable<AjaxResponse> => ajax(createAJAXSettings(serverConfig, \"/api\"));\n\n/**\n * Creates an AjaxObservable for shutting down a notebook server.\n *\n * @param serverConfig The server configuration\n *\n * @returns An Observable with the request/response\n */\nexport const shutdown = (\n  serverConfig: ServerConfig\n): Observable<AjaxResponse> =>\n  ajax(createAJAXSettings(serverConfig, \"/api/shutdown\", { method: \"POST\" }));\n\nexport { kernels, kernelspecs, sessions, contents, terminals };\n","/**\n * @module messaging\n */\nimport uuid from \"uuid/v4\";\nimport {\n  ExecuteRequest,\n  JupyterMessage,\n  JupyterMessageHeader,\n  MessageType\n} from \"./types\";\n\nexport type Channel = \"shell\" | \"iopub\" | \"stdin\";\n\n/**\n * Returns which channel, iopub or stdin or shell, to send a kernel message\n * through.\n *\n * @param messageType The message type to fetch a channel for\n *\n * @returns The channel to send a kernel message through\n */\nfunction whichChannel(messageType?: MessageType): Channel {\n  switch (messageType) {\n    case \"execute_request\":\n    case \"inspect_request\":\n    case \"kernel_info_request\":\n    case \"complete_request\":\n    case \"history_request\":\n    case \"is_complete_request\":\n    case \"comm_info_request\":\n    case \"shutdown_request\":\n      return \"shell\";\n    case \"display_data\":\n    case \"stream\":\n    case \"update_display_data\":\n    case \"execute_input\":\n    case \"execute_result\":\n    case \"error\":\n    case \"status\":\n    case \"clear_output\":\n      return \"iopub\";\n    case \"input_request\":\n    case \"input_reply\":\n      return \"stdin\";\n    default:\n      // We fallthrough to handle the comm messages separately as well as\n      // unknown message types\n      break;\n  }\n\n  // NOTE: The Kernel listens for COMM messages on the Shell channel,\n  //       and the Frontend listens for them on the IOPub channel.\n  // HACK: Since nteract is only frontends at the moment, no kernels implemented\n  //       we simply assume this is destined for a frontend. Revisit as needed.\n  if (\n    messageType === \"comm_open\" ||\n    messageType === \"comm_msg\" ||\n    messageType === \"comm_close\"\n  ) {\n    return \"shell\";\n  }\n\n  // Likely safe to assume the message goes on shell\n  // the developer can override this otherwise\n  return \"shell\";\n}\n\n/**\n * Returns a fully-formatted kernel message.\n *\n * @param header An object containing the message type and session information\n * @param content The message type-specific contents to send in the kernel message\n *\n * @returns The fully-formatted kernel message\n */\nexport function message<MT extends MessageType>(\n  header: { msg_type: MT; username?: string; session?: string },\n  content: object = {}\n): JupyterMessage<MT> {\n  const channel: Channel = whichChannel(header.msg_type);\n  return {\n    header: {\n      msg_id: uuid(),\n      date: new Date().toISOString(),\n      version: \"5.2\",\n\n      // These fields _should_ get overridden by those provided in `header`\n      // We supply them as a fallback here\n      username: header.username || \"nteract\",\n      msg_type: header.msg_type,\n      session: header.session || uuid()\n    },\n    metadata: {},\n    parent_header: {},\n    content,\n    channel,\n    buffers: new Uint8Array()\n  };\n}\n\n/**\n * Creates a header for a kernel message of a given type.\n *\n * @param msg_type The message type to create a header for\n *\n * @returns A complete header for the message\n */\nfunction createHeader<MT extends MessageType>(\n  msg_type: MT\n): JupyterMessageHeader<MT> {\n  return {\n    msg_id: uuid(),\n    date: new Date().toISOString(),\n    version: \"5.2\",\n    msg_type,\n\n    // These fields get overriden by enchannel implementations, we supply them\n    // as a fallback here\n    username: \"nteract\",\n    session: uuid()\n  };\n}\n\n/**\n * An execute request creator\n *\n * > executeRequest('print(\"hey\")', { 'silent': true })\n * { header:\n *    { msg_id: 'f344cc6b-4308-4405-a8e8-a166b0345579',\n *      date: 2017-10-23T22:33:39.970Z,\n *      version: '5.0',\n *      msg_type: 'execute_request',\n *      username: 'kyle',\n *      session: '123' },\n *   metadata: {},\n *   parent_header: {},\n *   content:\n *    { code: 'print(\"hey\")',\n *      silent: false,\n *      store_history: true,\n *      user_expressions: {},\n *      allow_stdin: true,\n *      stop_on_error: false } }\n *\n * @param code The code to execute\n * @param options The options for the execute request\n *\n * @returns A complete execute_request message\n */\nexport function executeRequest(\n  code: string = \"\",\n  options: {\n    silent?: boolean;\n    store_history?: boolean;\n    user_expressions?: object;\n    allow_stdin?: boolean;\n    stop_on_error?: boolean;\n  } = {}\n): ExecuteRequest {\n  const channel: Channel = whichChannel(\"execute_request\");\n\n  return {\n    header: createHeader(\"execute_request\"),\n    metadata: {},\n    parent_header: {},\n    content: {\n      code,\n      silent: false,\n      store_history: true,\n      user_expressions: {},\n      allow_stdin: false,\n      stop_on_error: false,\n      ...options\n    },\n    channel,\n    buffers: new Uint8Array()\n  };\n}\n\n////// OUTPUT MESSAGE TYPES //////\n\n/**\n * Creates a display_data message.\n *\n * ref: http://jupyter-client.readthedocs.io/en/stable/messaging.html#display-data\n * > displayData({username: 'rgbkrk', session: '123'}, {data: {'text/html': '<b>sup</b>'}})\n * { header:\n *    { msg_id: '24e95ce7-73d5-4c5f-9ef0-ff8547779690',\n *      date: 2017-10-23T22:57:58.704Z,\n *      version: '5.1',\n *      msg_type: 'display_data',\n *      username: 'rgbkrk',\n *      session: '123' },\n *   metadata: {},\n *   parent_header: {},\n *   content:\n *    { data: { 'text/html': '<b>sup</b>' },\n *      metadata: {},\n *      transient: {} } }\n */\nexport function displayData(\n  content: {\n    data?: object;\n    metadata?: object;\n    transient?: object;\n  },\n  msg_type: MessageType = \"display_data\"\n): JupyterMessage<MessageType, any> {\n  return message(\n    {\n      msg_type\n    },\n    {\n      data: {},\n      metadata: {},\n      transient: {},\n      ...content\n    }\n  );\n}\n\n/**\n * Creates an update_display_data message.\n *\n * http://jupyter-client.readthedocs.io/en/stable/messaging.html#update-display-data\n */\nexport function updateDisplayData(content: {\n  data?: object;\n  metadata?: object;\n  transient?: object;\n}): JupyterMessage<MessageType, any> {\n  // TODO: Enforce the transient display_id here?\n  const m: JupyterMessage<MessageType, any> = displayData(\n    content,\n    \"update_display_data\"\n  );\n  return m;\n}\n\n/**\n * Creates a message containing information about the result of an execution.\n *\n * http://jupyter-client.readthedocs.io/en/stable/messaging.html#id6\n */\nexport function executeResult(content: {\n  execution_count: number;\n  data?: object;\n  metadata?: object;\n  transient?: object;\n}) {\n  // TODO: Enforce the transient display_id here?\n  const m = displayData(content, \"execute_result\");\n  m.content.execution_count = content.execution_count;\n  return m;\n}\n\n/**\n * Creates an error message to indicate when an exception has occurred during\n * code execution.\n *\n * http://jupyter-client.readthedocs.io/en/stable/messaging.html#execution-errors\n */\nexport function error(content: {\n  ename?: string;\n  evalue?: string;\n  traceback?: string[];\n}) {\n  return message(\n    {\n      msg_type: \"error\"\n    },\n    {\n      ename: \"\",\n      evalue: \"\",\n      traceback: [],\n      ...content\n    }\n  );\n}\n\n/**\n * Creates a stream message.\n *\n * http://jupyter-client.readthedocs.io/en/stable/messaging.html#streams-stdout-stderr-etc\n *\n * @param content The message type and its contents.\n */\nexport function stream(content: { name: \"stdout\" | \"stderr\"; text: string }) {\n  return message(\n    {\n      msg_type: \"stream\"\n    },\n    content\n  );\n}\n\n///// EXECUTE_REPLY /////\n\n/**\n * Creates a message containing the response from a kernel execute request.\n *\n * http://jupyter-client.readthedocs.io/en/stable/messaging.html#execution-results\n */\nexport function executeReply(content: {\n  status: string;\n  execution_count: number;\n  payload?: object[];\n  user_expressions?: object;\n}) {\n  // TODO: This function could be better typed. It's a bit dual headed though since:\n  //         * `status: ok` carries payloads\n  //         * `status: error` carries error info that is also in error output\n  return message(\n    {\n      msg_type: \"execute_reply\"\n    },\n    content\n  );\n}\n\n/**\n * Creates a status message published by the kernel to indicate its state.\n *\n * @param execution_state The kernel's execution state\n */\nexport function status(execution_state: \"busy\" | \"idle\" | \"starting\") {\n  return message(\n    {\n      msg_type: \"status\"\n    },\n    {\n      execution_state\n    }\n  );\n}\n\n/**\n *\n * @param content\n */\nexport function clearOutput(content?: { wait: boolean }) {\n  return message(\n    {\n      msg_type: \"clear_output\"\n    },\n    content\n  );\n}\n\n/**\n *\n * @param content\n */\nexport function executeInput(content: {\n  code: string;\n  execution_count: number;\n}) {\n  return message(\n    {\n      msg_type: \"execute_input\"\n    },\n    content\n  );\n}\n\n/**\n * Creates a message to request information about a kernel.\n *\n * @returns A kernel_info_request message\n */\nexport function kernelInfoRequest() {\n  return message({ msg_type: \"kernel_info_request\" });\n}\n\n/**\n * Creates a message to request the shutdown of a kernel.\n *\n * @param content An options object containing whether or not to restart the kernel\n *\n * @returns A shutdown_request message\n */\nexport function shutdownRequest(\n  content: { restart?: boolean } = { restart: false }\n): JupyterMessage<\"shutdown_request\", { restart?: boolean }> {\n  return message({ msg_type: \"shutdown_request\" }, content);\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport { JSONObject, MediaBundle } from \"@nteract/commutable\";\n\n/** Error handling types */\ninterface ReactErrorInfo {\n  componentStack: string;\n}\n\ninterface Caught {\n  error: Error;\n  info: ReactErrorInfo;\n}\n\nexport interface RichMediaProps {\n  /**\n   * Object of media type → data\n   *\n   * E.g.\n   *\n   * ```js\n   * {\n   *   \"text/plain\": \"raw text\",\n   * }\n   * ```\n   *\n   * See [Jupyter message spec](http://jupyter-client.readthedocs.io/en/stable/messaging.html#display-data)\n   * for more detail.\n   *\n   */\n  data: Readonly<MediaBundle>;\n  /**\n   * custom settings, typically keyed by media type\n   */\n  metadata: Readonly<JSONObject>;\n  /**\n   * React elements that accept media bundle data, will get passed data[mimetype]\n   */\n  children: React.ReactElement<any> | React.ReactNodeArray | null | undefined;\n\n  renderError(param: {\n    error: Error;\n    info: ReactErrorInfo;\n    data: MediaBundle;\n    metadata: object;\n    children: React.ReactNode;\n  }): React.ReactElement<any>;\n}\n\n/* We make the RichMedia component an error boundary in case of any <Media /> component erroring */\ninterface State {\n  caughtError?: Caught | null;\n}\n\nconst ErrorFallbackDiv = styled.div`\n  backgroundcolor: ghostwhite;\n  color: black;\n  font-weight: 600;\n  display: block;\n  padding: 10px;\n  margin-bottom: 20px;\n`;\n\nconst ErrorFallback = (caught: Caught) => (\n  <ErrorFallbackDiv>\n    <h3>{caught.error.toString()}</h3>\n    <details>\n      <summary>stack trace</summary>\n      <pre>{caught.info.componentStack}</pre>\n    </details>\n  </ErrorFallbackDiv>\n);\n\nexport class RichMedia extends React.PureComponent<RichMediaProps, State> {\n  static defaultProps: Partial<RichMediaProps> = {\n    data: {},\n    metadata: {},\n    renderError: ErrorFallback\n  };\n\n  state: Partial<State> = {};\n\n  componentDidCatch(error: Error, info: ReactErrorInfo) {\n    this.setState({ caughtError: { error, info } });\n  }\n\n  choose = (\n    children: RichMediaProps[\"children\"]\n  ): null | React.ReactElement<any> => {\n    // We must pick only one child to render\n    let chosenOne: React.ReactElement<any> | null = null;\n\n    const data = this.props.data;\n\n    // Find the first child element that matches something in this.props.data\n    React.Children.forEach(children, child => {\n      if (chosenOne) {\n        // Already have a selection\n        return;\n      }\n      const childElement = child;\n\n      if (\n        !childElement ||\n        typeof childElement === \"string\" ||\n        typeof childElement === \"number\"\n      ) {\n        return;\n      }\n\n      if (childElement.type === RichMedia) {\n        // One of our children is itself a RichMedia we can defer to\n        chosenOne = this.choose(childElement.props.children);\n        return;\n      }\n\n      if (\n        childElement.props &&\n        childElement.props.mediaType &&\n        childElement.props.mediaType in data\n      ) {\n        chosenOne = childElement;\n        return;\n      }\n    });\n\n    return chosenOne;\n  };\n\n  render() {\n    if (this.state.caughtError) {\n      return this.props.renderError({\n        ...this.state.caughtError,\n        data: this.props.data,\n        metadata: this.props.metadata,\n        children: this.props.children\n      });\n    }\n\n    const chosenOne = this.choose(this.props.children);\n\n    // If we didn't find a match, render nothing\n    if (chosenOne === null || !chosenOne.props.mediaType) {\n      return null;\n    }\n\n    const mediaType = chosenOne.props.mediaType;\n\n    return React.cloneElement(chosenOne, {\n      data: this.props.data[mediaType],\n      metadata: this.props.metadata[mediaType]\n    });\n  }\n}\n\nexport default RichMedia;\n","// We might only need this as a devDependency as it is only here for flow\nimport { ImmutableOutput } from \"@nteract/commutable\";\nimport * as React from \"react\";\n\nimport styled from \"styled-components\";\ninterface Props {\n  /**\n   * React elements that accept Output\n   */\n  children: React.ReactNode;\n  /**\n   * The raw output\n   */\n  output: ImmutableOutput;\n\n  renderError(param: {\n    error: Error | null;\n    info: ReactErrorInfo;\n    output: ImmutableOutput;\n    children: React.ReactNode;\n  }): React.ReactElement<any>;\n}\n\ninterface Caught {\n  error: Error | null;\n  info: ReactErrorInfo;\n}\n\ninterface State {\n  caughtError: Caught | null;\n}\n\ninterface ReactErrorInfo {\n  componentStack: string;\n}\n\nconst ErrorFallbackDiv = styled.div`\n  backgroundcolor: ghostwhite;\n  color: black;\n  font-weight: 600;\n  display: block;\n  padding: 10px;\n  margin-bottom: 20px;\n`;\n\nconst ErrorFallback = (caught: Caught) => (\n  <ErrorFallbackDiv>\n    {caught.error ? <h3>{caught.error.toString()}</h3> : null}\n    <details>\n      <summary>stack trace</summary>\n      <pre>{caught.info.componentStack}</pre>\n    </details>\n  </ErrorFallbackDiv>\n);\n\nexport class Output extends React.PureComponent<Props, State> {\n  static defaultProps = {\n    output: null,\n    renderError: ErrorFallback\n  };\n\n  readonly state: State = { caughtError: null };\n\n  componentDidCatch(error: Error | null, info: ReactErrorInfo) {\n    const caughtError: Caught = {\n      error,\n      info\n    };\n    this.setState({\n      caughtError\n    });\n  }\n\n  render() {\n    if (this.state.caughtError) {\n      return this.props.renderError({\n        ...this.state.caughtError,\n        output: this.props.output,\n        children: this.props.children\n      });\n    }\n\n    // We must pick only one child to render\n    let chosenOne: React.ReactChild | null = null;\n\n    if (this.props.output == null) {\n      return null;\n    }\n\n    const output_type = this.props.output.output_type;\n\n    // Find the first child element that matches something in this.props.data\n    React.Children.forEach(this.props.children, child => {\n      if (typeof child === \"string\" || typeof child === \"number\") {\n        return;\n      }\n\n      const childElement = child;\n      if (chosenOne) {\n        // Already have a selection\n        return;\n      }\n      if (\n        childElement.props &&\n        childElement.props.output_type &&\n        childElement.props.output_type === output_type\n      ) {\n        chosenOne = childElement;\n        return;\n      }\n    });\n\n    // If we didn't find a match, render nothing\n    if (chosenOne === null) {\n      return null;\n    }\n\n    // Render the output component that handles this output type\n    return React.cloneElement(chosenOne, { output: this.props.output });\n  }\n}\n\nexport default Output;\n","import { AnserJsonEntry, ansiToJson } from \"anser\";\nimport { escapeCarriageReturn } from \"escape-carriage\";\nimport * as React from \"react\";\n\nconst LINK_REGEX = /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/;\n\n/**\n * Converts ANSI strings into JSON output.\n * @name ansiToJSON\n * @function\n * @param {String} input The input string.\n * @return {Array} The parsed input.\n */\nfunction ansiToJSON(input: string, use_classes = false) {\n  input = escapeCarriageReturn(input);\n  return ansiToJson(input, {\n    json: true,\n    remove_empty: true,\n    use_classes\n  });\n}\n\n/**\n * Create a class string.\n * @name createClass\n * @function\n * @param {AnserJsonEntry}.\n * @return {String} class name(s)\n */\nfunction createClass(bundle: AnserJsonEntry) {\n  let classNames: string = \"\";\n\n  if (!bundle.bg && !bundle.fg) {\n    return null;\n  }\n  if (bundle.bg) {\n    classNames += bundle.bg + \" \";\n  }\n  if (bundle.fg) {\n    classNames += bundle.fg + \" \";\n  }\n\n  classNames = classNames.substring(0, classNames.length - 1);\n  return classNames;\n}\n\n/**\n * Create the style attribute.\n * @name createStyle\n * @function\n * @param {AnserJsonEntry}.\n * @return {Object} returns the style object\n */\nfunction createStyle(bundle: AnserJsonEntry) {\n  const style: { backgroundColor?: string; color?: string } = {};\n  if (bundle.bg) {\n    style.backgroundColor = `rgb(${bundle.bg})`;\n  }\n  if (bundle.fg) {\n    style.color = `rgb(${bundle.fg})`;\n  }\n\n  return style;\n}\n\n/**\n * Converts an Anser bundle into a React Node.\n * @param linkify whether links should be converting into clickable anchor tags.\n * @param useClasses should render the span with a class instead of style.\n * @param bundle Anser output.\n */\n\nfunction convertBundleIntoReact(\n  linkify: boolean,\n  useClasses: boolean,\n  bundle: AnserJsonEntry,\n  key: number\n) {\n  const style = useClasses ? null : createStyle(bundle);\n  const className = useClasses ? createClass(bundle) : null;\n\n  if (!linkify) {\n    return React.createElement(\n      \"span\",\n      { style, key, className },\n      bundle.content\n    );\n  }\n\n  const words = bundle.content.split(\" \").reduce(\n    (words: React.ReactNode[], word: string, index: number) => {\n      // If this isn't the first word, re-add the space removed from split.\n      if (index !== 0) {\n        words.push(\" \");\n      }\n\n      // If  this isn't a link, just return the word as-is.\n      if (!LINK_REGEX.test(word)) {\n        words.push(word);\n        return words;\n      }\n\n      words.push(\n        React.createElement(\n          \"a\",\n          {\n            key: index,\n            href: word,\n            target: \"_blank\"\n          },\n          `${word}`\n        )\n      );\n      return words;\n    },\n    [] as React.ReactNode[]\n  );\n  return React.createElement(\"span\", { style, key, className }, words);\n}\n\ndeclare interface Props {\n  children: string;\n  linkify: boolean;\n  className?: string;\n  useClasses?: boolean;\n}\n\nexport default function Ansi(props: Props) {\n  const { className, useClasses, children, linkify } = props;\n  return React.createElement(\n    \"code\",\n    { className },\n    ansiToJSON(children, !!useClasses).map(\n      convertBundleIntoReact.bind(null, linkify, !!useClasses)\n    )\n  );\n}","import Ansi from \"ansi-to-react\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport { ImmutableErrorOutput } from \"@nteract/commutable\";\n\ninterface Props {\n  className?: string;\n  output: ImmutableErrorOutput;\n  output_type: \"error\";\n}\n\nconst PlainKernelOutputError = (props: Partial<Props>) => {\n  const { output } = props;\n  if (!output) {\n    return null;\n  }\n\n  const { ename, evalue, traceback } = output;\n\n  // Allow traceback to be Immutable.List or Array\n  const joinedTraceback =\n    typeof traceback.join === \"function\" ? traceback.join(\"\\n\") : traceback;\n\n  const kernelOutputError = [];\n\n  if (joinedTraceback) {\n    kernelOutputError.push(joinedTraceback);\n  } else {\n    if (ename && evalue) {\n      kernelOutputError.push(`${ename}: ${evalue}`);\n    }\n  }\n\n  return (\n    <Ansi className={props.className} linkify={false}>\n      {kernelOutputError.join(\"\\n\")}\n    </Ansi>\n  );\n};\n\nexport const KernelOutputError = styled(PlainKernelOutputError)`\n  white-space: pre-wrap;\n`;\n\nKernelOutputError.defaultProps = {\n  output_type: \"error\"\n};\n\nKernelOutputError.displayName = \"KernelOutputError\";\n\nexport default KernelOutputError;\n","import * as React from \"react\";\n\nimport { ImmutableDisplayData } from \"@nteract/commutable\";\n\nimport { RichMedia, RichMediaProps } from \"./rich-media\";\n\ninterface Props {\n  /**\n   * The literal type of output, used for routing with the `<Output />` element\n   */\n  output_type: \"display_data\";\n  output: ImmutableDisplayData;\n  /**\n   * React elements that accept media bundle data, will get passed `data[mediaType]`\n   */\n  children: RichMediaProps[\"children\"];\n}\n\nexport const DisplayData = (props: Props) => {\n  const { output, children } = props;\n  if (!output) {\n    return null;\n  }\n\n  return (\n    <RichMedia data={output.data} metadata={output.metadata}>\n      {children}\n    </RichMedia>\n  );\n};\n\nDisplayData.defaultProps = {\n  output_type: \"display_data\",\n  output: null\n};\n\nexport default DisplayData;\n","import { ImmutableExecuteResult, MediaBundle } from \"@nteract/commutable\";\nimport * as React from \"react\";\n\nimport { RichMedia, RichMediaProps } from \"./rich-media\";\n\ninterface Props {\n  /**\n   * The literal type of output, used for routing with the `<Output />` element\n   */\n  output_type: \"execute_result\";\n  output?: ImmutableExecuteResult;\n\n  /**\n   * React elements that accept media bundle data, will get passed `data[mediaType]`\n   */\n  children: RichMediaProps[\"children\"];\n}\n\nexport const ExecuteResult = (props: Partial<Props>) => {\n  const { output, children } = props;\n  if (!output) {\n    return null;\n  }\n\n  return (\n    <RichMedia data={output.data} metadata={output.metadata}>\n      {children}\n    </RichMedia>\n  );\n};\n\nExecuteResult.defaultProps = {\n  output: null,\n  output_type: \"execute_result\"\n};\n\nexport default ExecuteResult;\n","import { ImmutableStreamOutput } from \"@nteract/commutable\";\nimport Ansi from \"ansi-to-react\";\nimport * as React from \"react\";\n\ninterface Props {\n  output_type: \"stream\";\n  output: ImmutableStreamOutput;\n}\n\nexport class StreamText extends React.PureComponent<Props> {\n  static defaultProps = {\n    output: null,\n    output_type: \"stream\"\n  };\n\n  render() {\n    const { output } = this.props;\n    if (!output) {\n      return null;\n    }\n    const { text, name } = output;\n\n    return (\n      <Ansi linkify={false} className={`\"nteract-display-area-${name}`}>\n        {text}\n      </Ansi>\n    );\n  }\n}\n\nexport default StreamText;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport outputStyle from \"../outputStyle\";\n\ninterface Props {\n  /**\n   * The HTML string that will be rendered.\n   */\n  data: string;\n  /**\n   * The media type associated with the HTML\n   * string. This defaults to text/html.\n   */\n  mediaType: \"text/html\";\n}\n\n// Note: createRange and Range must be polyfilled on older browsers with\n//       https://github.com/timdown/rangy\nexport function createFragment(html: string): Node {\n  /**\n   * createFragment takes in an HTML string and outputs a DOM element that is\n   * treated as if it originated on the page \"like normal\".\n   * @type {Node} - https://developer.mozilla.org/en-US/docs/Web/API/Node\n   */\n  // Create a range to ensure that scripts are invoked from within the HTML\n  const range = document.createRange();\n  const fragment = range.createContextualFragment(html);\n  return fragment;\n}\n\nconst StyledDiv = styled.div`\n  ${outputStyle}\n`;\n\nexport class HTML extends React.PureComponent<Props> {\n  static defaultProps = {\n    data: \"\",\n    mediaType: \"text/html\"\n  };\n\n  el?: HTMLElement | null;\n\n  componentDidMount(): void {\n    // clear out all DOM element children\n    // This matters on server side render otherwise we'll get both the `innerHTML`ed\n    // version + the fragment version right after each other\n    // In the desktop app (and successive loads with tools like commuter) this\n    // will be a no-op\n    if (!this.el) {\n      return;\n    }\n    while (this.el.firstChild) {\n      this.el.removeChild(this.el.firstChild);\n    }\n    // DOM element appended with a real DOM Node fragment\n    this.el.appendChild(createFragment(this.props.data));\n  }\n\n  componentDidUpdate(): void {\n    if (!this.el) {\n      return;\n    }\n    // clear out all DOM element children\n    while (this.el.firstChild) {\n      this.el.removeChild(this.el.firstChild);\n    }\n    this.el.appendChild(createFragment(this.props.data));\n  }\n\n  render() {\n    return (\n      <StyledDiv\n        dangerouslySetInnerHTML={{ __html: this.props.data }}\n        ref={el => {\n          this.el = el;\n        }}\n      />\n    );\n  }\n}\n\nexport default HTML;\n","export default `\n& a {\n  color: var(--link-color-unvisited, blue);\n}\n\n& a:visited {\n  color: var(--link-color-visited, blue);\n}\n\n& code {\n  font-family: \"Source Code Pro\";\n  white-space: pre-wrap;\n  font-size: 14px;\n}\n\n& pre {\n  white-space: pre-wrap;\n  font-size: 14px;\n  word-wrap: break-word;\n}\n\n& img {\n  display: block;\n  max-width: 100%;\n}\n\n& kbd {\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 0.1em 0.5em;\n  margin: 0 0.2em;\n  box-shadow: 0 1px 0px rgba(0, 0, 0, 0.2), 0 0 0 2px #fff inset;\n  background-color: #f7f7f7;\n}\n\n& table {\n  border-collapse: collapse;\n}\n\n& th,\n& td,\n/* for legacy output handling */\n& .th,\n& .td {\n  padding: 0.5em 1em;\n  border: 1px solid var(--theme-app-border, #cbcbcb);\n}\n\n& th {\n  text-align: left;\n}\n\n& blockquote {\n  padding: 0.75em 0.5em 0.75em 1em;\n  background: var(--theme-cell-output-bg, white);\n  border-left: 0.5em solid #ddd;\n}\n\n& blockquote::before {\n  display: block;\n  height: 0;\n  content: \"“\";\n  margin-left: -0.95em;\n  font: italic 400%/1 Open Serif, Georgia, \"Times New Roman\", serif;\n  color: solid var(--theme-app-border, #cbcbcb);\n}\n\n/* for nested paragraphs in block quotes */\n& blockquote p {\n  display: inline;\n}\n\n& dd {\n  display: block;\n  -webkit-margin-start: 40px;\n}\n& dl {\n  display: block;\n  -webkit-margin-before: 1__qem;\n  -webkit-margin-after: 1em;\n  -webkit-margin-start: 0;\n  -webkit-margin-end: 0;\n}\n\n& dt {\n  display: block;\n}\n\n& dl {\n  width: 100%;\n  overflow: hidden;\n  padding: 0;\n  margin: 0;\n}\n\n& dt {\n  font-weight: bold;\n  float: left;\n  width: 20%;\n  /* adjust the width; make sure the total of both is 100% */\n  padding: 0;\n  margin: 0;\n}\n\n& dd {\n  float: left;\n  width: 80%;\n  /* adjust the width; make sure the total of both is 100% */\n  padding: 0;\n  margin: 0;\n}\n\n/** Adaptation for the R kernel's inline lists **/\n& .list-inline li {\n  display: inline;\n  padding-right: 20px;\n  text-align: center;\n}`;\n","import * as React from \"react\";\nimport JSONTree from \"react-json-tree\";\n\nconst defaultTheme = {\n  base00: \"transparent\",\n  base01: \"#073642\",\n  base02: \"#586e75\",\n  base03: \"#657b83\",\n  base04: \"#839496\",\n  base05: \"#93a1a1\",\n  base06: \"#eee8d5\",\n  base07: \"#fdf6e3\",\n  base08: \"#dc322f\",\n  base09: \"#cb4b16\",\n  base0A: \"#b58900\",\n  base0B: \"#66BB6A\",\n  base0C: \"#2aa198\",\n  base0D: \"#268bd2\",\n  base0E: \"#6c71c4\",\n  base0F: \"#d33682\"\n};\n\nconst darkTheme = Object.assign({}, defaultTheme, { base0B: \"#EDF3F7\" });\n\ninterface Props {\n  data: object;\n  mediaType: \"application/json\";\n  theme: string;\n  metadata: { expanded: boolean };\n}\n\n/** @component */\nexport class Json extends React.PureComponent<Props> {\n  static defaultProps = {\n    data: null,\n    mediaType: \"application/json\",\n    theme: \"light\",\n    metadata: { expanded: true }\n  };\n\n  //   #3435\n  shouldExpandNode = (): boolean => {\n    if (this.props.metadata && this.props.metadata.expanded) {\n      return true;\n    }\n    return false;\n  };\n\n  render() {\n    const theme = this.props.theme === \"dark\" ? darkTheme : defaultTheme;\n    return (\n      <JSONTree\n        data={this.props.data}\n        theme={theme}\n        invertTheme={false}\n        hideRoot\n        shouldExpandNode={this.shouldExpandNode}\n      />\n    );\n  }\n}\n\nexport default Json;\n","import React from \"react\";\n\ninterface Props {\n  data: string;\n  mediaType: \"image/svg+xml\";\n}\n\nexport class SVG extends React.PureComponent<Props> {\n  static defaultProps = {\n    data: \"\",\n    mediaType: \"image/svg+xml\"\n  };\n\n  el?: HTMLElement | null;\n\n  componentDidMount(): void {\n    if (this.el) {\n      this.el.insertAdjacentHTML(\"beforeend\", this.props.data);\n    }\n  }\n\n  componentDidUpdate(): void {\n    if (!this.el) {\n      return;\n    }\n    // clear out all DOM element children\n    while (this.el.firstChild) {\n      this.el.removeChild(this.el.firstChild);\n    }\n    this.el.insertAdjacentHTML(\"beforeend\", this.props.data);\n  }\n\n  render() {\n    return (\n      <div\n        ref={el => {\n          this.el = el;\n        }}\n      />\n    );\n  }\n}\n\nexport default SVG;\n","import Ansi from \"ansi-to-react\";\nimport * as React from \"react\";\n\ninterface Props {\n  data: string;\n  mediaType: \"text/plain\";\n}\n\nexport const Plain = (props: Props) => (\n  <pre>\n    <Ansi linkify={false}>{props.data}</Ansi>\n  </pre>\n);\n\nPlain.defaultProps = {\n  data: \"\",\n  mediaType: \"text/plain\"\n};\n\nPlain.displayName = \"Plaintext\";\n\nexport default Plain;\n","import MarkdownComponent from \"@nteract/markdown\";\nimport * as React from \"react\";\n\ninterface Props {\n  /**\n   * Markdown text.\n   */\n  data: string;\n  /**\n   * Media type. Defaults to `text/markdown`.\n   * For more on media types, see: https://www.w3.org/TR/CSS21/media.html%23media-types.\n   */\n  mediaType: \"text/markdown\";\n}\n\nexport class Markdown extends React.PureComponent<Props> {\n  static defaultProps = {\n    data: \"\",\n    mediaType: \"text/markdown\"\n  };\n\n  render() {\n    return <MarkdownComponent source={this.props.data} />;\n  }\n}\n\nexport default Markdown;\n","import * as MathJax from \"@nteract/mathjax\";\nimport * as React from \"react\";\n\ninterface Props {\n  data: string;\n  mediaType: \"text/latex\";\n}\n\nexport class LaTeX extends React.PureComponent<Props> {\n  static defaultProps = {\n    data: \"\",\n    mediaType: \"text/latex\"\n  };\n\n  render() {\n    return <MathJax.Text>{this.props.data}</MathJax.Text>;\n  }\n}\n\nexport default LaTeX;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  data: string;\n  mediaType: \"image/png\" | \"image/jpeg\" | \"image/gif\";\n  metadata: { height?: number; width?: number };\n}\n\nconst ImageStyle = styled.img`\n  display: block;\n  max-width: 100%;\n`;\n\nexport function Image(props: Partial<Props>) {\n  let size = {};\n\n  if (props.metadata) {\n    const { width, height } = props.metadata;\n    size = { width, height };\n  }\n\n  return (\n    <ImageStyle\n      alt=\"\"\n      src={`data:${props.mediaType};base64,${props.data}`}\n      {...size}\n    />\n  );\n}\n\nImage.defaultProps = {\n  data: \"\",\n  mediaType: \"image/jpeg\"\n};\n\nexport default Image;\n","export { RichMedia } from \"./components/rich-media\";\nexport { Output } from \"./components/output\";\nexport { KernelOutputError } from \"./components/kernel-output-error\";\nexport { DisplayData } from \"./components/display-data\";\nexport { ExecuteResult } from \"./components/execute-result\";\nexport { StreamText } from \"./components/stream-text\";\n\nimport * as Media from \"./components/media\";\n\nexport { Media };\n","/**\n * @module actions\n */\nimport { ContentRef, KernelRef, KernelspecInfo } from \"@nteract/types\";\n\nimport * as actionTypes from \"../actionTypes\";\n\nimport { contents } from \"rx-jupyter\";\n\nexport const changeContentName = (payload: {\n  filepath: string;\n  contentRef: ContentRef;\n  prevFilePath: string;\n}): actionTypes.ChangeContentName => ({\n  type: actionTypes.CHANGE_CONTENT_NAME,\n  payload\n});\n\nexport const changeContentNameFulfilled = (payload: {\n  filepath: string;\n  contentRef: ContentRef;\n  prevFilePath: string;\n}): actionTypes.ChangeContentNameFulfilled => ({\n  type: actionTypes.CHANGE_CONTENT_NAME_FULFILLED,\n  payload\n});\n\nexport const changeContentNameFailed = (payload: {\n  basepath: string;\n  filepath: string;\n  error: Error;\n  contentRef: ContentRef;\n  prevFilePath: string;\n}): actionTypes.ChangeContentNameFailed => ({\n  type: actionTypes.CHANGE_CONTENT_NAME_FAILED,\n  payload\n});\n\nexport const fetchContent = (\n  payload: actionTypes.FetchContent[\"payload\"]\n): actionTypes.FetchContent => ({\n  type: actionTypes.FETCH_CONTENT,\n  payload\n});\n\nexport const fetchContentFulfilled = (payload: {\n  filepath: string;\n  model: contents.IContent;\n  kernelRef: KernelRef;\n  contentRef: ContentRef;\n}): actionTypes.FetchContentFulfilled => ({\n  type: actionTypes.FETCH_CONTENT_FULFILLED,\n  payload\n});\n\nexport const fetchContentFailed = (payload: {\n  filepath: string;\n  error: Error;\n  kernelRef: KernelRef;\n  contentRef: ContentRef;\n}): actionTypes.FetchContentFailed => ({\n  type: actionTypes.FETCH_CONTENT_FAILED,\n  payload,\n  error: true\n});\n\nexport function changeFilename(payload: {\n  filepath?: string;\n  contentRef: ContentRef;\n}): actionTypes.ChangeFilenameAction {\n  return {\n    type: actionTypes.CHANGE_FILENAME,\n    payload\n  };\n}\n\nexport function downloadContent(payload: {\n  contentRef: ContentRef;\n}): actionTypes.DownloadContent {\n  return {\n    type: actionTypes.DOWNLOAD_CONTENT,\n    payload\n  };\n}\n\nexport function downloadContentFailed(payload: {\n  contentRef: ContentRef;\n}): actionTypes.DownloadContentFailed {\n  return {\n    type: actionTypes.DOWNLOAD_CONTENT_FAILED,\n    payload\n  };\n}\n\nexport function downloadContentFulfilled(payload: {\n  contentRef: ContentRef;\n}): actionTypes.DownloadContentFulfilled {\n  return {\n    type: actionTypes.DOWNLOAD_CONTENT_FULFILLED,\n    payload\n  };\n}\n\nexport function save(payload: { contentRef: ContentRef }): actionTypes.Save {\n  return {\n    type: actionTypes.SAVE,\n    payload\n  };\n}\n\nexport function saveAs(payload: {\n  filepath: string;\n  contentRef: ContentRef;\n}): actionTypes.SaveAs {\n  return {\n    type: actionTypes.SAVE_AS,\n    payload\n  };\n}\n\nexport function saveFailed(payload: {\n  error: Error;\n  contentRef: ContentRef;\n}): actionTypes.SaveFailed {\n  return {\n    type: actionTypes.SAVE_FAILED,\n    payload,\n    error: true\n  };\n}\n\nexport function saveFulfilled(payload: {\n  contentRef: ContentRef;\n  model: any;\n}): actionTypes.SaveFulfilled {\n  return {\n    type: actionTypes.SAVE_FULFILLED,\n    payload\n  };\n}\n\n// TODO: New Notebook action should use a kernel spec type\nexport function newNotebook(payload: {\n  kernelSpec: KernelspecInfo;\n  cwd: string;\n  kernelRef: KernelRef;\n  contentRef: ContentRef;\n}): actionTypes.NewNotebook {\n  return {\n    type: actionTypes.NEW_NOTEBOOK,\n    payload: {\n      kernelSpec: payload.kernelSpec,\n      cwd: payload.cwd || process.cwd(), // Desktop should be passing in the cwd\n      kernelRef: payload.kernelRef,\n      contentRef: payload.contentRef\n    }\n  };\n}\n\nexport function updateFileText(payload: {\n  contentRef: ContentRef;\n  text: string;\n}): actionTypes.UpdateFileText {\n  return {\n    type: actionTypes.UPDATE_FILE_TEXT,\n    payload: {\n      contentRef: payload.contentRef,\n      text: payload.text\n    }\n  };\n}\n","// NOTE: These are just default middlewares here for now until we figure out how\n// to divide up the desktop app and this core package\n\nimport { isCollection } from \"immutable\";\nimport { createLogger } from \"redux-logger\";\n\nimport { Middleware } from \"redux\";\n\nimport * as selectors from \"@nteract/selectors\";\n\ninterface ErrorAction {\n  type: string;\n  error?: boolean;\n  payload?: any;\n}\n\nexport const errorMiddleware = (store: any, console = global.console) => (\n  next: any\n) => (action: ErrorAction) => {\n  if (!(action.type.includes(\"ERROR\") || action.error)) {\n    return next(action);\n  }\n  console.error(action);\n  let errorText;\n\n  if (action.payload) {\n    if (\n      action.payload instanceof Object &&\n      action.payload.error instanceof Error\n    ) {\n      errorText = action.payload.error.message;\n    } else {\n      errorText = JSON.stringify(action.payload, null, 2);\n    }\n  } else {\n    errorText = JSON.stringify(action, null, 2);\n  }\n\n  const state = store.getState();\n  const notificationSystem = selectors.notificationSystem(state);\n  if (notificationSystem) {\n    notificationSystem.addNotification({\n      title: action.type,\n      message: errorText,\n      dismissible: true,\n      position: \"tr\",\n      level: \"error\"\n    });\n  }\n  return next(action);\n};\n\nexport function logger(): Middleware {\n  const craftedLogger = createLogger({\n    // predicate: (getState, action) => action.type.includes('COMM'),\n    stateTransformer: (state: any) =>\n      Object.keys(state).reduce(\n        (prev, key) =>\n          Object.assign({}, prev, {\n            [key]: isCollection(state[key]) ? state[key].toJS() : state[key]\n          }),\n        {}\n      )\n  });\n  return craftedLogger;\n}\n","import React from \"react\";\n\ninterface Props {\n  /**\n   * The JavaScript code that we would like to execute.\n   */\n  data: string;\n  /**\n   * The media type associated with our component.\n   */\n  mediaType: \"text/javascript\";\n}\n\nexport function runCodeHere(el: HTMLElement | null, code: string): any {\n  if (!el) {\n    return;\n  }\n  // Compatibility with Jupyter/notebook JS evaluation.  Set element so\n  // the user has a handle on the context of the current output.\n  const element = el;\n  try {\n    // tslint:disable-next-line:no-eval\n    return eval(code);\n  } catch (err) {\n    const pre = document.createElement(\"pre\");\n    pre.style.whiteSpace = \"pre-wrap\";\n    if (err.stack) {\n      pre.textContent = err.stack;\n    } else {\n      pre.textContent = err;\n    }\n    element.appendChild(pre);\n    return err;\n  }\n}\n\nexport class JavaScript extends React.PureComponent<Props> {\n  static defaultProps = {\n    data: \"\",\n    mediaType: \"application/javascript\"\n  };\n\n  el!: HTMLElement | null;\n\n  componentDidMount(): void {\n    runCodeHere(this.el, this.props.data);\n  }\n\n  componentDidUpdate(): void {\n    runCodeHere(this.el, this.props.data);\n  }\n\n  render() {\n    return (\n      <div\n        ref={el => {\n          this.el = el;\n        }}\n      />\n    );\n  }\n}\n\nexport default JavaScript;\n","/**\n * @module actions\n */\nimport { CellId, CellType } from \"@nteract/commutable\";\nimport { ContentRef, KernelRef } from \"@nteract/types\";\n\nimport { JSONObject } from \"@nteract/commutable\";\nimport * as actionTypes from \"../actionTypes\";\n\nexport function setExecutionState(payload: {\n  kernelStatus: string;\n  kernelRef: KernelRef;\n}): actionTypes.SetExecutionStateAction {\n  return {\n    type: actionTypes.SET_EXECUTION_STATE,\n    payload\n  };\n}\n\nexport function clearOutputs(payload: {\n  id?: string;\n  contentRef: ContentRef;\n}): actionTypes.ClearOutputs {\n  return {\n    type: actionTypes.CLEAR_OUTPUTS,\n    payload\n  };\n}\n\nexport function clearAllOutputs(payload: {\n  contentRef: ContentRef;\n}): actionTypes.ClearAllOutputs {\n  return {\n    type: actionTypes.CLEAR_ALL_OUTPUTS,\n    payload\n  };\n}\n\nexport function moveCell(payload: {\n  id: string;\n  destinationId: string;\n  above: boolean;\n  contentRef: ContentRef;\n}): actionTypes.MoveCell {\n  return {\n    type: actionTypes.MOVE_CELL,\n    payload\n  };\n}\n\nexport function deleteCell(payload: {\n  id?: string;\n  contentRef: ContentRef;\n}): actionTypes.DeleteCell {\n  return {\n    type: actionTypes.DELETE_CELL,\n    payload\n  };\n}\n\nexport function createCellBelow(payload: {\n  id?: CellId;\n  cellType: CellType;\n  source: string;\n  contentRef: ContentRef;\n}): actionTypes.CreateCellBelow {\n  return {\n    type: actionTypes.CREATE_CELL_BELOW,\n    payload\n  };\n}\n\nexport function createCellAbove(payload: {\n  cellType: CellType;\n  id?: string;\n  contentRef: ContentRef;\n}): actionTypes.CreateCellAbove {\n  return {\n    type: actionTypes.CREATE_CELL_ABOVE,\n    payload\n  };\n}\n\n// Deprecation Warning: removeCell() is being deprecated. Please use deleteCell() instead\nexport function removeCell(payload: {\n  id?: string;\n  contentRef: ContentRef;\n}): actionTypes.RemoveCell {\n  return {\n    type: actionTypes.REMOVE_CELL,\n    payload\n  };\n}\n\n// Deprecation Warning: createCellAfter() is being deprecated. Please use createCellBelow() instead\nexport function createCellAfter(payload: {\n  id?: CellId;\n  cellType: CellType;\n  source: string;\n  contentRef: ContentRef;\n}): actionTypes.CreateCellAfter {\n  return {\n    type: actionTypes.CREATE_CELL_AFTER,\n    payload\n  };\n}\n\n// Deprecation Warning: createCellBefore is deprecated. Please use createCellAbove() instead\nexport function createCellBefore(payload: {\n  cellType: CellType;\n  id?: string;\n  contentRef: ContentRef;\n}): actionTypes.CreateCellBefore {\n  return {\n    type: actionTypes.CREATE_CELL_BEFORE,\n    payload\n  };\n}\n\nexport function createCellAppend(payload: {\n  cellType: CellType;\n  contentRef: ContentRef;\n}): actionTypes.CreateCellAppend {\n  return {\n    type: actionTypes.CREATE_CELL_APPEND,\n    payload\n  };\n}\n\nexport function toggleParameterCell(payload: {\n  id: CellId;\n  contentRef: ContentRef;\n}): actionTypes.ToggleTagInCell {\n  // Tag comes via Papermill\n  return toggleTagInCell({\n    id: payload.id,\n    contentRef: payload.contentRef,\n    tag: \"parameters\"\n  });\n}\n\nexport function toggleTagInCell(payload: {\n  id: CellId;\n  contentRef: ContentRef;\n  tag: string;\n}): actionTypes.ToggleTagInCell {\n  return {\n    type: actionTypes.TOGGLE_TAG_IN_CELL,\n    payload\n  };\n}\n\n/**\n * setInCell can generically be used to set any attribute on a cell, including\n * and especially for changing metadata per cell.\n * @param {CellId} payload.id    cell ID\n * @param {Array<string>} payload.path  path within a cell to set\n * @param {any} payload.value what to set it to\n *\n * Example:\n *\n * > action = setInCell('123', ['metadata', 'cool'], true)\n * > documentReducer(state, action)\n * {\n *   ...\n *   '123': {\n *     'metadata': {\n *       'cool': true\n *     }\n *   }\n * }\n *\n */\nexport function setInCell<T>(payload: {\n  id: CellId;\n  path: string[];\n  value: T;\n  contentRef: ContentRef;\n}): actionTypes.SetInCell<T> {\n  return {\n    type: actionTypes.SET_IN_CELL,\n    payload\n  };\n}\n\nexport function updateCellSource(payload: {\n  id: CellId;\n  value: string;\n  contentRef: ContentRef;\n}): actionTypes.SetInCell<string> {\n  return setInCell({ ...payload, path: [\"source\"] });\n}\n\nexport function updateCellExecutionCount(payload: {\n  id: CellId;\n  value: number;\n  contentRef: ContentRef;\n}): actionTypes.SetInCell<number> {\n  return setInCell({ ...payload, path: [\"execution_count\"] });\n}\n\nexport function unhideAll(payload: {\n  outputHidden: boolean;\n  inputHidden: boolean;\n  contentRef: ContentRef;\n}): actionTypes.UnhideAll {\n  return {\n    type: \"UNHIDE_ALL\",\n    payload\n  };\n}\n\nexport function toggleCellOutputVisibility(payload: {\n  id?: CellId;\n  contentRef: ContentRef;\n}): actionTypes.ToggleCellOutputVisibility {\n  return {\n    type: actionTypes.TOGGLE_CELL_OUTPUT_VISIBILITY,\n    payload\n  };\n}\n\nexport function toggleCellInputVisibility(payload: {\n  id?: string;\n  contentRef: ContentRef;\n}): actionTypes.ToggleCellInputVisibility {\n  return {\n    type: actionTypes.TOGGLE_CELL_INPUT_VISIBILITY,\n    payload\n  };\n}\n\nexport function updateCellStatus(payload: {\n  id: string;\n  status: string;\n  contentRef: ContentRef;\n}): actionTypes.UpdateCellStatus {\n  return {\n    type: actionTypes.UPDATE_CELL_STATUS,\n    payload\n  };\n}\n\n/* Unlike focus next & previous, to set focus, we require an ID,\n     because the others are based on there already being a focused cell */\nexport function focusCell(payload: {\n  id: CellId;\n  contentRef: ContentRef;\n}): actionTypes.FocusCell {\n  return {\n    type: actionTypes.FOCUS_CELL,\n    payload\n  };\n}\n\nexport function focusNextCell(payload: {\n  id?: string;\n  createCellIfUndefined: boolean;\n  contentRef: ContentRef;\n}): actionTypes.FocusNextCell {\n  return {\n    type: actionTypes.FOCUS_NEXT_CELL,\n    payload\n  };\n}\n\nexport function focusNextCellEditor(payload: {\n  id?: string;\n  contentRef: ContentRef;\n}): actionTypes.FocusNextCellEditor {\n  return {\n    type: actionTypes.FOCUS_NEXT_CELL_EDITOR,\n    payload\n  };\n}\n\nexport function focusPreviousCell(payload: {\n  id?: string;\n  contentRef: ContentRef;\n}): actionTypes.FocusPreviousCell {\n  return {\n    type: actionTypes.FOCUS_PREVIOUS_CELL,\n    payload\n  };\n}\n\nexport function focusCellEditor(payload: {\n  id?: string;\n  contentRef: ContentRef;\n}): actionTypes.FocusCellEditor {\n  return {\n    type: actionTypes.FOCUS_CELL_EDITOR,\n    payload\n  };\n}\n\nexport function focusPreviousCellEditor(payload: {\n  id?: string;\n  contentRef: ContentRef;\n}): actionTypes.FocusPreviousCellEditor {\n  return {\n    type: actionTypes.FOCUS_PREVIOUS_CELL_EDITOR,\n    payload\n  };\n}\n\nexport function copyCell(payload: {\n  id?: CellId;\n  contentRef: ContentRef;\n}): actionTypes.CopyCell {\n  return {\n    type: actionTypes.COPY_CELL,\n    payload\n  };\n}\n\nexport function cutCell(payload: {\n  id?: CellId;\n  contentRef: ContentRef;\n}): actionTypes.CutCell {\n  return {\n    type: actionTypes.CUT_CELL,\n    payload\n  };\n}\n\nexport function pasteCell(payload: {\n  contentRef: ContentRef;\n}): actionTypes.PasteCell {\n  return {\n    type: actionTypes.PASTE_CELL,\n    payload\n  };\n}\n\nexport function changeCellType(payload: {\n  id?: CellId;\n  to: CellType;\n  contentRef: ContentRef;\n}): actionTypes.ChangeCellType {\n  return {\n    type: actionTypes.CHANGE_CELL_TYPE,\n    payload\n  };\n}\n\nexport function updateOutputMetadata(payload: {\n  id: CellId;\n  metadata: JSONObject;\n  contentRef: ContentRef;\n  index: number;\n  mediaType: string;\n}): actionTypes.UpdateOutputMetadata {\n  return {\n    type: actionTypes.UPDATE_OUTPUT_METADATA,\n    payload\n  };\n}\n","/**\n * @module actions\n */\nimport {\n  ContentRef,\n  KernelInfo,\n  KernelRef,\n  LocalKernelProps,\n  RemoteKernelProps\n} from \"@nteract/types\";\n\nimport { ExecuteRequest } from \"@nteract/messaging\";\nimport * as actionTypes from \"../actionTypes\";\n\nexport function launchKernelFailed(payload: {\n  error: Error;\n  kernelRef?: KernelRef;\n  contentRef?: ContentRef;\n}): actionTypes.LaunchKernelFailed {\n  return {\n    type: actionTypes.LAUNCH_KERNEL_FAILED,\n    payload,\n    error: true\n  };\n}\n\nexport function launchKernelSuccessful(payload: {\n  kernel: LocalKernelProps | RemoteKernelProps;\n  kernelRef: KernelRef;\n  contentRef: ContentRef;\n  selectNextKernel: boolean;\n}): actionTypes.NewKernelAction {\n  return {\n    type: actionTypes.LAUNCH_KERNEL_SUCCESSFUL,\n    payload\n  };\n}\n\nexport function launchKernel(payload: {\n  kernelSpec: any;\n  cwd: string;\n  kernelRef: KernelRef;\n  selectNextKernel: boolean;\n  contentRef: ContentRef;\n}): actionTypes.LaunchKernelAction {\n  return {\n    type: actionTypes.LAUNCH_KERNEL,\n    payload\n  };\n}\n\nexport function changeKernelByName(payload: {\n  kernelSpecName: any;\n  oldKernelRef?: KernelRef | null;\n  contentRef: ContentRef;\n}): actionTypes.ChangeKernelByName {\n  return {\n    type: actionTypes.CHANGE_KERNEL_BY_NAME,\n    payload\n  };\n}\n\nexport function launchKernelByName(payload: {\n  kernelSpecName: any;\n  cwd: string;\n  kernelRef: KernelRef;\n  selectNextKernel: boolean;\n  contentRef: ContentRef;\n}): actionTypes.LaunchKernelByNameAction {\n  return {\n    type: actionTypes.LAUNCH_KERNEL_BY_NAME,\n    payload\n  };\n}\n\nexport function kernelRawStdout(payload: {\n  text: string;\n  kernelRef: KernelRef;\n}): actionTypes.KernelRawStdout {\n  return {\n    type: actionTypes.KERNEL_RAW_STDOUT,\n    payload\n  };\n}\n\nexport function kernelRawStderr(payload: {\n  text: string;\n  kernelRef: KernelRef;\n}): actionTypes.KernelRawStderr {\n  return {\n    type: actionTypes.KERNEL_RAW_STDERR,\n    payload\n  };\n}\n\nexport function killKernel(payload: {\n  restarting: boolean;\n  kernelRef?: KernelRef | null;\n}): actionTypes.KillKernelAction {\n  return {\n    type: actionTypes.KILL_KERNEL,\n    payload\n  };\n}\n\nexport function killKernelFailed(payload: {\n  error: Error;\n  kernelRef?: KernelRef | null;\n}): actionTypes.KillKernelFailed {\n  return {\n    type: actionTypes.KILL_KERNEL_FAILED,\n    payload,\n    error: true\n  };\n}\n\nexport function killKernelSuccessful(payload: {\n  kernelRef?: KernelRef | null;\n}): actionTypes.KillKernelSuccessful {\n  return {\n    type: actionTypes.KILL_KERNEL_SUCCESSFUL,\n    payload\n  };\n}\n\nexport function interruptKernel(payload: {\n  kernelRef?: KernelRef | null;\n}): actionTypes.InterruptKernel {\n  return {\n    type: actionTypes.INTERRUPT_KERNEL,\n    payload\n  };\n}\n\nexport function interruptKernelSuccessful(payload: {\n  kernelRef?: KernelRef | null;\n}): actionTypes.InterruptKernelSuccessful {\n  return {\n    type: actionTypes.INTERRUPT_KERNEL_SUCCESSFUL,\n    payload\n  };\n}\n\nexport function interruptKernelFailed(payload: {\n  error: Error;\n  kernelRef?: KernelRef | null;\n}): actionTypes.InterruptKernelFailed {\n  return {\n    type: actionTypes.INTERRUPT_KERNEL_FAILED,\n    payload,\n    error: true\n  };\n}\n\nexport function restartKernel(payload: {\n  outputHandling: actionTypes.RestartKernelOutputHandling;\n  kernelRef?: KernelRef | null;\n  contentRef: ContentRef;\n}): actionTypes.RestartKernel {\n  return {\n    type: actionTypes.RESTART_KERNEL,\n    payload\n  };\n}\n\nexport function restartKernelFailed(payload: {\n  error: Error;\n  kernelRef: KernelRef;\n  contentRef: ContentRef;\n}): actionTypes.RestartKernelFailed {\n  return {\n    type: actionTypes.RESTART_KERNEL_FAILED,\n    payload,\n    error: true\n  };\n}\n\nexport function restartKernelSuccessful(payload: {\n  kernelRef: KernelRef;\n  contentRef: ContentRef;\n}): actionTypes.RestartKernelSuccessful {\n  return {\n    type: actionTypes.RESTART_KERNEL_SUCCESSFUL,\n    payload\n  };\n}\n\nexport function sendExecuteRequest(payload: {\n  id: string;\n  message: ExecuteRequest;\n  contentRef: ContentRef;\n}): actionTypes.SendExecuteRequest {\n  return {\n    type: actionTypes.SEND_EXECUTE_REQUEST,\n    payload\n  };\n}\nexport function executeCell(payload: {\n  id: string;\n  contentRef: ContentRef;\n}): actionTypes.ExecuteCell {\n  return {\n    type: actionTypes.EXECUTE_CELL,\n    payload\n  };\n}\n\nexport function executeAllCells(payload: {\n  contentRef: ContentRef;\n}): actionTypes.ExecuteAllCells {\n  return {\n    type: actionTypes.EXECUTE_ALL_CELLS,\n    payload\n  };\n}\n\nexport function executeAllCellsBelow(payload: {\n  contentRef: ContentRef;\n}): actionTypes.ExecuteAllCellsBelow {\n  return {\n    type: actionTypes.EXECUTE_ALL_CELLS_BELOW,\n    payload\n  };\n}\n\nexport function executeFocusedCell(payload: {\n  contentRef: ContentRef;\n}): actionTypes.ExecuteFocusedCell {\n  return {\n    type: actionTypes.EXECUTE_FOCUSED_CELL,\n    payload\n  };\n}\n\nexport function executeCanceled(payload: {\n  id: string;\n  contentRef: ContentRef;\n}): actionTypes.ExecuteCanceled {\n  return {\n    type: actionTypes.EXECUTE_CANCELED,\n    payload\n  };\n}\n\nexport function executeFailed(payload: {\n  error: Error;\n  contentRef?: ContentRef;\n}): actionTypes.ExecuteFailed {\n  return {\n    type: actionTypes.EXECUTE_FAILED,\n    error: true,\n    payload\n  };\n}\n\nexport function deleteConnectionFileFailed(payload: {\n  error: Error;\n  kernelRef: KernelRef;\n}): actionTypes.DeleteConnectionFileFailedAction {\n  return {\n    type: actionTypes.DELETE_CONNECTION_FILE_FAILED,\n    payload,\n    error: true\n  };\n}\n\nexport function deleteConnectionFileSuccessful(payload: {\n  kernelRef: KernelRef;\n}): actionTypes.DeleteConnectionFileSuccessfulAction {\n  return {\n    type: actionTypes.DELETE_CONNECTION_FILE_SUCCESSFUL,\n    payload\n  };\n}\n\nexport function shutdownReplySucceeded(payload: {\n  content: { restart: boolean };\n  kernelRef: KernelRef;\n}): actionTypes.ShutdownReplySucceeded {\n  return {\n    type: actionTypes.SHUTDOWN_REPLY_SUCCEEDED,\n    payload\n  };\n}\n\nexport function shutdownReplyTimedOut(payload: {\n  error: Error;\n  kernelRef: KernelRef;\n}): actionTypes.ShutdownReplyTimedOut {\n  return {\n    type: actionTypes.SHUTDOWN_REPLY_TIMED_OUT,\n    payload,\n    error: true\n  };\n}\n\nexport function setKernelInfo(payload: {\n  kernelRef: KernelRef;\n  info: KernelInfo;\n}): actionTypes.SetKernelInfo {\n  return {\n    type: actionTypes.SET_KERNEL_INFO,\n    payload\n  };\n}\n","/**\n * @module actions\n */\nimport {\n  ContentRef,\n  HostRef,\n  KernelspecProps,\n  KernelspecsRef\n} from \"@nteract/types\";\n\nimport * as actionTypes from \"../actionTypes\";\n\nexport const fetchKernelspecs = (payload: {\n  kernelspecsRef: KernelspecsRef;\n  hostRef: HostRef;\n}): actionTypes.FetchKernelspecs => ({\n  type: actionTypes.FETCH_KERNELSPECS,\n  payload\n});\n\nexport const fetchKernelspecsFulfilled = (payload: {\n  kernelspecsRef: KernelspecsRef;\n  hostRef: HostRef;\n  defaultKernelName: string;\n  kernelspecs: { [kernelspec: string]: KernelspecProps };\n}): actionTypes.FetchKernelspecsFulfilled => ({\n  type: actionTypes.FETCH_KERNELSPECS_FULFILLED,\n  payload\n});\n\nexport const fetchKernelspecsFailed = (payload: {\n  kernelspecsRef: KernelspecsRef;\n  error: object;\n}): actionTypes.FetchKernelspecsFailed => ({\n  type: actionTypes.FETCH_KERNELSPECS_FAILED,\n  payload\n});\n\n// \"legacy\" action that pushes kernelspec info back up\n// for the notebook document\nexport function setKernelspecInfo(payload: {\n  kernelInfo: any;\n  contentRef: ContentRef;\n}): actionTypes.SetKernelspecInfo {\n  return {\n    type: actionTypes.SET_KERNELSPEC_INFO,\n    payload\n  };\n}\n","/**\n * @module actions\n */\nimport {\n  CellId,\n  JSONObject,\n  MediaBundle,\n  OnDiskOutput\n} from \"@nteract/commutable\";\n\nimport * as actionTypes from \"../actionTypes\";\n\nimport {\n  ContentRef,\n  HostId,\n  HostRef,\n  KernelRef,\n  LanguageInfoMetadata,\n  PayloadMessage\n} from \"@nteract/types\";\n\nexport * from \"./cells\";\nexport * from \"./contents\";\nexport * from \"./kernels\";\nexport * from \"./kernelspecs\";\n\nexport const openModal = (payload: { modalType: string }) => ({\n  type: actionTypes.OPEN_MODAL,\n  payload\n});\n\nexport const closeModal = () => ({\n  type: actionTypes.CLOSE_MODAL\n});\n\nexport const addHost = (payload: {\n  hostRef: HostRef;\n  host: {\n    id?: HostId | null;\n    type: \"jupyter\" | \"local\";\n    defaultKernelName: string;\n    token?: string | null;\n    serverUrl?: string;\n    crossDomain?: boolean | null;\n  };\n}) => ({\n  type: actionTypes.ADD_HOST,\n  payload\n});\n\nexport const removeHost = (payload: { hostRef: HostRef }) => ({\n  type: actionTypes.REMOVE_HOST,\n  payload\n});\n\nexport function overwriteMetadataField(payload: {\n  field: string;\n  value: any;\n  contentRef: ContentRef;\n}): actionTypes.OverwriteMetadataField {\n  return {\n    type: actionTypes.OVERWRITE_METADATA_FIELD,\n    payload\n  };\n}\n\nexport function deleteMetadataField(payload: {\n  field: string;\n  contentRef: ContentRef;\n}): actionTypes.DeleteMetadataField {\n  return {\n    type: actionTypes.DELETE_METADATA_FIELD,\n    payload\n  };\n}\n\nexport function setNotificationSystem(\n  notificationSystem: any\n): actionTypes.SetNotificationSystemAction {\n  return {\n    type: actionTypes.SET_NOTIFICATION_SYSTEM,\n    payload: {\n      notificationSystem\n    }\n  };\n}\n\nexport function setGithubToken(\n  githubToken: string\n): actionTypes.SetGithubTokenAction {\n  return {\n    type: actionTypes.SET_GITHUB_TOKEN,\n    payload: {\n      githubToken\n    }\n  };\n}\n\nexport function setConfigAtKey<T>(\n  key: string,\n  value: T\n): actionTypes.SetConfigAction<T> {\n  return {\n    type: actionTypes.SET_CONFIG_AT_KEY,\n    payload: {\n      key,\n      value\n    }\n  };\n}\n\nexport function setTheme(theme: string): actionTypes.SetConfigAction<string> {\n  return setConfigAtKey(\"theme\", theme);\n}\n\nexport function setCursorBlink(\n  value: string\n): actionTypes.SetConfigAction<string> {\n  return setConfigAtKey(\"cursorBlinkRate\", value);\n}\n\nexport function toggleOutputExpansion(payload: {\n  id: string;\n  contentRef: ContentRef;\n}): actionTypes.ToggleCellExpansion {\n  return {\n    type: actionTypes.TOGGLE_OUTPUT_EXPANSION,\n    payload\n  };\n}\n\nexport const loadConfig = () => ({ type: actionTypes.LOAD_CONFIG });\nexport const saveConfig = () => ({ type: actionTypes.SAVE_CONFIG });\nexport const doneSavingConfig = () => ({\n  type: actionTypes.DONE_SAVING_CONFIG\n});\n\ninterface ConfigPayload {\n  config: { [key: string]: string; theme: string };\n}\n\nexport const configLoaded = (\n  payload: ConfigPayload\n): actionTypes.MergeConfigAction => ({\n  payload,\n  type: actionTypes.MERGE_CONFIG\n});\n\n/**\n * Action creator for comm_open messages\n * @param  {jmp.Message} a comm_open message\n * @return {Object}      COMM_OPEN action\n */\nexport function commOpenAction(message: any) {\n  // invariant: expects a comm_open message\n  return {\n    type: actionTypes.COMM_OPEN,\n    data: message.content.data,\n    metadata: message.content.metadata,\n    comm_id: message.content.comm_id,\n    target_name: message.content.target_name,\n    target_module: message.content.target_module,\n    // Pass through the buffers\n    buffers: message.blob || message.buffers\n    // NOTE: Naming inconsistent between jupyter notebook and jmp\n    //       see https://github.com/n-riesco/jmp/issues/14\n    //       We just expect either one\n  };\n}\n\n/**\n * Action creator for comm_msg messages\n * @param  {jmp.Message} a comm_msg\n * @return {Object}      COMM_MESSAGE action\n */\nexport function commMessageAction(message: any) {\n  return {\n    type: actionTypes.COMM_MESSAGE,\n    comm_id: message.content.comm_id,\n    data: message.content.data,\n    // Pass through the buffers\n    buffers: message.blob || message.buffers\n    // NOTE: Naming inconsistent between jupyter notebook and jmp\n    //       see https://github.com/n-riesco/jmp/issues/14\n    //       We just expect either one\n  };\n}\n\nexport function appendOutput(payload: {\n  id: CellId;\n  output: OnDiskOutput;\n  contentRef: ContentRef;\n}): actionTypes.AppendOutput {\n  return {\n    type: actionTypes.APPEND_OUTPUT,\n    payload\n  };\n}\n\nexport function acceptPayloadMessage(payload: {\n  id: CellId;\n  // TODO: Properly type acceptPayloadMessage as taking jupyter payload message\n  // Not to be confused with a redux style action payload\n  payload: PayloadMessage;\n  contentRef: ContentRef;\n}): actionTypes.AcceptPayloadMessage {\n  return {\n    type: actionTypes.ACCEPT_PAYLOAD_MESSAGE,\n    payload\n  };\n}\n\nexport function updateDisplay(payload: {\n  content: {\n    data: MediaBundle;\n    metadata: JSONObject;\n    transient: { display_id: string };\n  };\n  contentRef: ContentRef;\n}): actionTypes.UpdateDisplay {\n  return {\n    type: actionTypes.UPDATE_DISPLAY,\n    payload\n  };\n}\n\nexport function updateDisplayFailed(payload: {\n  error: Error;\n  contentRef: ContentRef;\n}): actionTypes.UpdateDisplayFailed {\n  return {\n    type: actionTypes.UPDATE_DISPLAY_FAILED,\n    payload,\n    error: true\n  };\n}\n\nexport function setLanguageInfo(payload: {\n  langInfo: LanguageInfoMetadata;\n  kernelRef: KernelRef;\n  contentRef: ContentRef;\n}): actionTypes.SetLanguageInfo {\n  return {\n    type: actionTypes.SET_LANGUAGE_INFO,\n    payload\n  };\n}\n\nexport function publishGist(payload: {\n  contentRef: ContentRef;\n}): actionTypes.PublishGist {\n  return {\n    type: actionTypes.PUBLISH_GIST,\n    payload\n  };\n}\n\nexport function removeTransform(\n  payload: actionTypes.RemoveTransform[\"payload\"]\n): actionTypes.RemoveTransform {\n  return {\n    type: actionTypes.REMOVE_TRANSFORM,\n    payload\n  };\n}\n\nexport function addTransform(\n  payload: actionTypes.AddTransform[\"payload\"]\n): actionTypes.AddTransform {\n  return {\n    type: actionTypes.ADD_TRANSFORM,\n    payload\n  };\n}\n\nexport function coreError(payload: Error): actionTypes.CoreError {\n  return {\n    type: \"CORE/ERROR\",\n    payload,\n    error: true\n  };\n}\n","/**\n * @module actions\n */\n\nexport * from \"./actions/index\";\nexport * from \"./actionTypes/index\";\n","import * as React from \"react\";\n\nexport interface MathJaxObject {\n  Hub: {\n    Register: {\n      StartupHook(str: string, cb: () => void): void;\n      MessageHook(str: string, cb: (msg: string) => void): void;\n    };\n    processSectionDelay: number;\n    getJaxFor(node: HTMLElement): any;\n    Config(options: object): void;\n    Queue(elements: any[], onRender?: () => void): void;\n  };\n}\n\nexport interface MathJaxContextValue {\n  MathJax?: MathJaxObject;\n  input: \"tex\" | \"ascii\";\n  // Allow detecting if there's a <Provider> above a <Consumer>\n  hasProviderAbove?: boolean;\n}\n\nconst contextValue: MathJaxContextValue = {\n  MathJax: undefined,\n  input: \"tex\",\n  hasProviderAbove: undefined\n};\n\nconst MathJaxContext: React.Context<MathJaxContextValue> = React.createContext(\n  contextValue\n);\n\nexport default MathJaxContext;\n","// Extracted from https://github.com/eldargab/load-script\n\ninterface Options {\n  type: string;\n  charset: string;\n  async: any;\n  text?: string;\n  attrs?: { [key: string]: any };\n}\n\ntype Callback = (script: HTMLScriptElement, error?: Error) => void;\n\nconst defaultOptions = {\n  type: \"text/javascript\",\n  charset: \"utf8\",\n  async: false,\n  text: undefined,\n  attrs: undefined\n};\n\nexport function load(src: string, opts?: Options | Callback, cb?: Callback) {\n  const head = document.head || document.getElementsByTagName(\"head\")[0];\n  const script = document.createElement(\"script\");\n\n  if (typeof opts === \"function\") {\n    cb = opts;\n    opts = defaultOptions;\n  }\n\n  opts = opts || defaultOptions;\n  cb = cb || (() => {});\n\n  script.type = opts.type || \"text/javascript\";\n  script.charset = opts.charset || \"utf8\";\n  script.async = \"async\" in opts ? !!opts.async : true;\n  script.src = src;\n\n  if (opts.attrs) {\n    setAttributes(script, opts.attrs);\n  }\n\n  if (opts.text) {\n    script.text = `${opts.text}`;\n  }\n\n  const onend = \"onload\" in script ? stdOnEnd : ieOnEnd;\n  onend(script, cb);\n\n  // some good legacy browsers (firefox) fail the 'in' detection above\n  // so as a fallback we always set onload\n  // old IE will ignore this and new IE will set onload\n  if (!script.onload) {\n    stdOnEnd(script, cb);\n  }\n\n  head.appendChild(script);\n}\n\nfunction setAttributes(\n  script: HTMLScriptElement,\n  attrs: { [key: string]: any }\n) {\n  for (const attr in attrs) {\n    if (attrs.hasOwnProperty(attr)) {\n      script.setAttribute(attr, attrs[attr]);\n    }\n  }\n}\n\nfunction stdOnEnd(script: any, cb: Callback) {\n  script.onload = function() {\n    this.onerror = this.onload = null;\n    cb(script);\n  };\n  script.onerror = function() {\n    // this.onload = null here is necessary\n    // because even IE9 works not like others\n    this.onerror = this.onload = null;\n    cb(script, new Error(`Failed to load ${this.src}`));\n  };\n}\n\nfunction ieOnEnd(script: any, cb: Callback) {\n  script.onreadystatechange = function() {\n    if (this.readyState !== \"complete\" && this.readyState !== \"loaded\") {\n      return;\n    }\n    this.onreadystatechange = null;\n    cb(script); // there is no way to catch loading errors in IE8\n  };\n}\n\nexport default load;\n","import * as React from \"react\";\n\nimport MathJaxContext, { MathJaxContextValue, MathJaxObject } from \"./context\";\nimport loadScript from \"./load-script\";\n\n// MathJax expected to be a global and may be undefined\ndeclare var MathJax: MathJaxObject | undefined;\n\ninterface Props {\n  src?: string;\n  children: React.ReactNode;\n  input: \"ascii\" | \"tex\";\n  delay: number;\n  options: object;\n  loading: React.ReactNode;\n  noGate: boolean;\n  didFinishTypeset?(): void;\n  onLoad?(): void;\n  onError(err: Error): void;\n}\n\ntype State = MathJaxContextValue;\n\n/**\n * MathJax Provider\n */\nexport default class Provider extends React.Component<Props, State> {\n  static defaultProps = {\n    src:\n      \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML\",\n    input: \"tex\",\n    didFinishTypeset: null,\n    delay: 0,\n    options: {},\n    loading: null,\n    noGate: false,\n    onLoad: null,\n    onError: (err: Error) => {\n      console.error(err);\n    }\n  };\n\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (state.input !== props.input) {\n      return { ...state, input: props.input };\n    }\n    return null;\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      MathJax: undefined,\n      input: this.props.input,\n      hasProviderAbove: true\n    };\n  }\n\n  componentDidMount() {\n    const src = this.props.src;\n\n    if (src === undefined) {\n      return this.onLoad();\n    }\n    if (typeof MathJax === \"undefined\" || !MathJax || !MathJax.Hub) {\n      return loadScript(src, this.onLoad);\n    }\n    this.onLoad();\n  }\n\n  onLoad = () => {\n    if (typeof MathJax === \"undefined\" || !MathJax || !MathJax.Hub) {\n      this.props.onError(\n        new Error(\"MathJax not really loaded even though onLoad called\")\n      );\n      return;\n    }\n\n    const options = this.props.options;\n    if (options != null && Object.keys(options).length > 0) {\n      MathJax.Hub.Config(options);\n    }\n\n    MathJax.Hub.Register.StartupHook(\"End\", () => {\n      if (typeof MathJax === \"undefined\" || !MathJax) {\n        this.props.onError(\n          new Error(\"MathJax became undefined in the middle of processing\")\n        );\n        return;\n      }\n      MathJax.Hub.processSectionDelay = this.props.delay;\n\n      if (this.props.didFinishTypeset) {\n        this.props.didFinishTypeset();\n      }\n    });\n\n    MathJax.Hub.Register.MessageHook(\n      \"Math Processing Error\",\n      (message: string) => {\n        if (this.props.onError) {\n          this.props.onError(new Error(message));\n        }\n      }\n    );\n\n    if (this.props.onLoad) {\n      this.props.onLoad();\n    }\n\n    this.setState({\n      MathJax\n    });\n  };\n\n  render() {\n    return (\n      <MathJaxContext.Provider value={this.state}>\n        {this.props.children}\n      </MathJaxContext.Provider>\n    );\n  }\n}\n","import * as React from \"react\";\n\nconst types = {\n  ascii: \"asciimath\",\n  tex: \"tex\"\n};\n\nimport MathJaxContext, { MathJaxContextValue } from \"./context\";\nimport Provider from \"./provider\";\n\ninterface Props {\n  inline: boolean;\n  children: string;\n  onRender?: () => void;\n}\n\nclass MathJaxNode_ extends React.Component<Props & MathJaxContextValue> {\n  script?: HTMLScriptElement;\n  nodeRef: React.RefObject<HTMLSpanElement>;\n\n  constructor(props: Props & MathJaxContextValue) {\n    super(props);\n\n    this.nodeRef = React.createRef();\n  }\n\n  /**\n   * Render the math once the node is mounted\n   */\n  componentDidMount() {\n    this.typeset();\n  }\n\n  /**\n   * Update the jax, force update if the display mode changed\n   */\n  componentDidUpdate(prevProps: Props & MathJaxContextValue) {\n    const forceUpdate =\n      prevProps.inline !== this.props.inline ||\n      prevProps.children !== this.props.children;\n    this.typeset(forceUpdate);\n  }\n\n  /**\n   * Clear the math when unmounting the node\n   */\n  componentWillUnmount() {\n    this.clear();\n  }\n\n  /**\n   * Clear the jax\n   */\n  clear() {\n    const MathJax = this.props.MathJax;\n\n    if (!MathJax) {\n      return;\n    }\n\n    if (!this.script) {\n      return;\n    }\n\n    const jax = MathJax.Hub.getJaxFor(this.script);\n\n    if (jax) {\n      jax.Remove();\n    }\n  }\n\n  /**\n   * Update math in the node\n   * @param { Boolean } forceUpdate\n   */\n  typeset(forceUpdate: boolean = false) {\n    const { MathJax } = this.props;\n\n    if (!MathJax || !MathJax.Hub) {\n      throw Error(\n        \"Could not find MathJax while attempting typeset! It's likely the MathJax script hasn't been loaded or MathJax.Context is not in the hierarchy.\"\n      );\n    }\n\n    const text = this.props.children;\n\n    if (forceUpdate) {\n      this.clear();\n    }\n\n    if (forceUpdate || !this.script) {\n      this.setScriptText(text);\n    }\n\n    if (!this.script) {\n      return;\n    }\n\n    const reprocess = [\"Reprocess\", MathJax.Hub, this.script];\n\n    if (!this.props.onRender) {\n      MathJax.Hub.Queue(reprocess);\n    } else {\n      MathJax.Hub.Queue(reprocess, this.props.onRender);\n    }\n  }\n\n  /**\n   * Create a script\n   * @param { String } text\n   */\n  setScriptText(text: string) {\n    const inline = this.props.inline;\n    const type = types[this.props.input];\n    if (!this.script) {\n      this.script = document.createElement(\"script\");\n      this.script.type = `math/${type}; ${inline ? \"\" : \"mode=display\"}`;\n\n      this.nodeRef.current!.appendChild(this.script);\n    }\n\n    // It _should_ be defined at this point, we'll just return at this point now\n    if (!this.script) {\n      return;\n    }\n\n    this.script.text = text;\n  }\n\n  render() {\n    return <span ref={this.nodeRef} />;\n  }\n}\n\nexport default class MathJaxNode extends React.PureComponent<Props> {\n  static defaultProps = {\n    inline: false,\n    onRender: null\n  };\n\n  render() {\n    return (\n      <MathJaxContext.Consumer>\n        {({ MathJax, input, hasProviderAbove }: MathJaxContextValue) => {\n          // If there is no <Provider /> in the above tree, create our own\n          if (!hasProviderAbove) {\n            return (\n              <Provider>\n                <MathJaxNode {...this.props} />\n              </Provider>\n            );\n          }\n\n          if (!MathJax) {\n            return null;\n          }\n\n          return (\n            <MathJaxNode_\n              inline={this.props.inline}\n              onRender={this.props.onRender}\n              input={input}\n              MathJax={MathJax}\n              hasProviderAbove={hasProviderAbove}\n            >\n              {this.props.children}\n            </MathJaxNode_>\n          );\n        }}\n      </MathJaxContext.Consumer>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport MathJaxContext, { MathJaxContextValue } from \"./context\";\nimport Provider from \"./provider\";\n\ninterface Props {\n  children: string;\n  onRender?: () => void;\n}\n\nclass MathJaxText_ extends React.Component<Props & MathJaxContextValue> {\n  nodeRef: React.RefObject<HTMLDivElement>;\n\n  constructor(props: Props & MathJaxContextValue) {\n    super(props);\n    this.nodeRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.typeset();\n  }\n\n  componentDidUpdate() {\n    this.typeset();\n  }\n\n  typeset() {\n    const { MathJax } = this.props;\n\n    if (!MathJax || !MathJax.Hub) {\n      throw Error(\n        \"Could not find MathJax while attempting typeset! It's likely the MathJax script hasn't been loaded or MathJax.Context is not in the hierarchy.\"\n      );\n    }\n    const typeset = [\"Typeset\", MathJax.Hub, this.nodeRef.current];\n\n    if (!this.props.onRender) {\n      MathJax.Hub.Queue(typeset);\n    } else {\n      MathJax.Hub.Queue(typeset, this.props.onRender);\n    }\n  }\n\n  render() {\n    return <div ref={this.nodeRef}>{this.props.children}</div>;\n  }\n}\n\nclass MathJaxText extends React.PureComponent<Props> {\n  static defaultProps = {\n    onRender: null\n  };\n\n  render() {\n    return (\n      <MathJaxContext.Consumer>\n        {({ MathJax, input, hasProviderAbove }: MathJaxContextValue) => {\n          // If there is no <Provider /> in the above tree, create our own\n          if (!hasProviderAbove) {\n            return (\n              <Provider>\n                <MathJaxText {...this.props} />\n              </Provider>\n            );\n          }\n\n          if (!MathJax) {\n            return null;\n          }\n\n          return (\n            <MathJaxText_\n              onRender={this.props.onRender}\n              input={input}\n              MathJax={MathJax}\n              hasProviderAbove={hasProviderAbove}\n            >\n              {this.props.children}\n            </MathJaxText_>\n          );\n        }}\n      </MathJaxContext.Consumer>\n    );\n  }\n}\n\nexport default MathJaxText;\n","export { default as Node } from \"./node\";\nexport { default as Text } from \"./text\";\nexport { default as Context } from \"./context\";\nexport { default as Provider } from \"./provider\";\n","import trim from \"trim-trailing-lines\";\n\nconst C_NEWLINE = \"\\n\";\nconst C_TAB = \"\\t\";\nconst C_SPACE = \" \";\nconst C_DOLLAR = \"$\";\n\nconst MIN_FENCE_COUNT = 2;\nconst CODE_INDENT_COUNT = 4;\n\nexport default function blockPlugin(this: any, _opts: object) {\n  function blockTokenizer(eat: any, value: string, silent: boolean) {\n    const length = value.length + 1;\n    let index = 0;\n    let subvalue = \"\";\n    let character;\n\n    /* Eat initial spacing. */\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character !== C_SPACE && character !== C_TAB) {\n        break;\n      }\n\n      subvalue += character;\n      index++;\n    }\n\n    const indent = index;\n\n    /* Eat the fence. */\n    character = value.charAt(index);\n\n    if (character !== C_DOLLAR) {\n      return;\n    }\n\n    index++;\n    const marker = character;\n    let fenceCount = 1;\n    subvalue += character;\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character !== marker) {\n        break;\n      }\n\n      subvalue += character;\n      fenceCount++;\n      index++;\n    }\n\n    if (fenceCount < MIN_FENCE_COUNT) {\n      return;\n    }\n\n    /* Eat everything after the fence. */\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character === C_NEWLINE) {\n        break;\n      }\n      if (character === C_DOLLAR) {\n        return;\n      }\n\n      subvalue += character;\n      index++;\n    }\n\n    character = value.charAt(index);\n\n    if (silent) {\n      return true;\n    }\n\n    const now = eat.now();\n    now.column += subvalue.length;\n    now.offset += subvalue.length;\n\n    let closing = \"\";\n    let exdentedClosing = \"\";\n    let content = \"\";\n    let exdentedContent = \"\";\n\n    /* Eat content. */\n    while (index < length) {\n      character = value.charAt(index);\n      content += closing;\n      exdentedContent += exdentedClosing;\n      closing = exdentedClosing = \"\";\n\n      if (character !== C_NEWLINE) {\n        content += character;\n        exdentedClosing += character;\n        index++;\n        continue;\n      }\n\n      /* Add the newline to `subvalue` if its the first\n       * character.  Otherwise, add it to the `closing`\n       * queue. */\n      if (content) {\n        closing += character;\n        exdentedClosing += character;\n      } else {\n        subvalue += character;\n      }\n\n      let queue = \"\";\n      index++;\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character !== C_SPACE) {\n          break;\n        }\n\n        queue += character;\n        index++;\n      }\n\n      closing += queue;\n      exdentedClosing += queue.slice(indent);\n\n      if (queue.length >= CODE_INDENT_COUNT) {\n        continue;\n      }\n\n      queue = \"\";\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character !== marker) {\n          break;\n        }\n\n        queue += character;\n        index++;\n      }\n\n      closing += queue;\n      exdentedClosing += queue;\n\n      if (queue.length < fenceCount) {\n        continue;\n      }\n\n      queue = \"\";\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character === C_NEWLINE) {\n          break;\n        }\n\n        closing += character;\n        exdentedClosing += character;\n        index++;\n      }\n\n      break;\n    }\n\n    subvalue += content + closing;\n    const trimmedContent = trim(exdentedContent);\n    return eat(subvalue)({\n      type: \"math\",\n      value: trimmedContent,\n      data: {\n        hName: \"div\",\n        hProperties: {\n          className: \"math\"\n        },\n        hChildren: [\n          {\n            type: \"text\",\n            value: trimmedContent\n          }\n        ]\n      }\n    });\n  }\n\n  const Parser = this.Parser;\n\n  // Inject blockTokenizer\n  const blockTokenizers = Parser.prototype.blockTokenizers;\n  const blockMethods = Parser.prototype.blockMethods;\n  blockTokenizers.math = blockTokenizer;\n  blockMethods.splice(blockMethods.indexOf(\"fencedCode\") + 1, 0, \"math\");\n\n  // Inject math to interrupt rules\n  const interruptParagraph = Parser.prototype.interruptParagraph;\n  const interruptList = Parser.prototype.interruptList;\n  const interruptBlockquote = Parser.prototype.interruptBlockquote;\n  interruptParagraph.splice(interruptParagraph.indexOf(\"fencedCode\") + 1, 0, [\n    \"math\"\n  ]);\n  interruptList.splice(interruptList.indexOf(\"fencedCode\") + 1, 0, [\"math\"]);\n  interruptBlockquote.splice(interruptBlockquote.indexOf(\"fencedCode\") + 1, 0, [\n    \"math\"\n  ]);\n\n  const Compiler = this.Compiler;\n\n  // Stringify for math block\n  if (Compiler != null) {\n    const visitors = Compiler.prototype.visitors;\n    visitors.math = (node: any) => {\n      return `$$\\n${node.value}\\n$$`;\n    };\n  }\n}\n","function locator(value: string, fromIndex: number) {\n  return value.indexOf(\"$\", fromIndex);\n}\n\nconst ESCAPED_INLINE_MATH = /^\\\\\\$/;\nconst INLINE_MATH = /^\\$((?:\\\\\\$|[^$])+)\\$/;\nconst INLINE_MATH_DOUBLE = /^\\$\\$((?:\\\\\\$|[^$])+)\\$\\$/;\n\nexport default function inlinePlugin(this: any, _opts: object) {\n  function inlineTokenizer(eat: any, value: string, silent: boolean) {\n    let isDouble = true;\n    let match = INLINE_MATH_DOUBLE.exec(value);\n    if (!match) {\n      match = INLINE_MATH.exec(value);\n      isDouble = false;\n    }\n    const escaped = ESCAPED_INLINE_MATH.exec(value);\n\n    if (escaped) {\n      /* istanbul ignore if - never used (yet) */\n      if (silent) {\n        return true;\n      }\n      return eat(escaped[0])({\n        type: \"text\",\n        value: \"$\"\n      });\n    }\n\n    if (value.slice(-2) === \"\\\\$\") {\n      return eat(value)({\n        type: \"text\",\n        value: `${value.slice(0, -2)}$`\n      });\n    }\n\n    if (match) {\n      /* istanbul ignore if - never used (yet) */\n      if (silent) {\n        return true;\n      }\n\n      const endingDollarInBackticks =\n        match[0].includes(\"`\") && value.slice(match[0].length).includes(\"`\");\n      if (endingDollarInBackticks) {\n        const toEat = value.slice(0, value.indexOf(\"`\"));\n        return eat(toEat)({\n          type: \"text\",\n          value: toEat\n        });\n      }\n\n      const trimmedContent = match[1].trim();\n\n      if (isDouble) {\n        return eat(match[0])({\n          type: \"math\",\n          value: trimmedContent,\n          data: {\n            hName: \"div\",\n            hProperties: {\n              className: \"math\"\n            },\n            hChildren: [\n              {\n                type: \"text\",\n                value: trimmedContent\n              }\n            ]\n          }\n        });\n      }\n\n      return eat(match[0])({\n        type: \"inlineMath\",\n        value: trimmedContent,\n        data: {\n          hName: \"span\",\n          hProperties: {\n            className: \"inlineMath\"\n          },\n          hChildren: [\n            {\n              type: \"text\",\n              value: trimmedContent\n            }\n          ]\n        }\n      });\n    }\n  }\n  inlineTokenizer.locator = locator;\n\n  const Parser = this.Parser;\n\n  // Inject inlineTokenizer\n  const inlineTokenizers = Parser.prototype.inlineTokenizers;\n  const inlineMethods = Parser.prototype.inlineMethods;\n  inlineTokenizers.math = inlineTokenizer;\n  inlineMethods.splice(inlineMethods.indexOf(\"text\"), 0, \"math\");\n\n  const Compiler = this.Compiler;\n\n  // Stringify for math inline\n  if (Compiler != null) {\n    const visitors = Compiler.prototype.visitors;\n    visitors.inlineMath = (node: any) => {\n      return `$${node.value}$`;\n    };\n  }\n}\n","import blockPlugin from \"./block\";\nimport inlinePlugin from \"./inline\";\n\nexport function mathPlugin(this: any, opts: object = {}) {\n  blockPlugin.call(this, opts);\n  inlinePlugin.call(this, opts);\n}\n\nexport default mathPlugin;\n","import * as MathJax from \"@nteract/mathjax\";\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport RemarkMathPlugin from \"./remark-math\";\n\nconst math = (props: { value: string }): React.ReactNode => (\n  <MathJax.Node>{props.value}</MathJax.Node>\n);\n\nconst inlineMath = (props: { value: string }): React.ReactNode => (\n  <MathJax.Node inline>{props.value}</MathJax.Node>\n);\n\nconst MarkdownRender = (props: ReactMarkdown.ReactMarkdownProps) => {\n  const newProps = {\n    // https://github.com/rexxars/react-markdown#options\n    ...props,\n    escapeHtml: false,\n    plugins: [RemarkMathPlugin],\n    renderers: {\n      ...props.renderers,\n      math,\n      inlineMath\n    } as any\n  };\n\n  return <ReactMarkdown {...newProps} />;\n};\n\nexport default MarkdownRender;\n","/**\n * @module epics\n */\nimport { createMessage, ofMessageType } from \"@nteract/messaging\";\nimport { ofType } from \"redux-observable\";\nimport { ActionsObservable } from \"redux-observable\";\nimport { merge } from \"rxjs\";\nimport { map, retry, switchMap } from \"rxjs/operators\";\n\nimport {\n  commMessageAction,\n  commOpenAction,\n  LAUNCH_KERNEL_SUCCESSFUL,\n  NewKernelAction\n} from \"@nteract/actions\";\n\n/**\n * creates a comm open message\n * @param  {string} comm_id       uuid\n * @param  {string} target_name   comm handler\n * @param  {any} data             up to the target handler\n * @param  {string} target_module [Optional] used to select a module that is responsible for handling the target_name\n * @return {jmp.Message}          Message ready to send on the shell channel\n */\nexport function createCommOpenMessage(\n  comm_id: string,\n  target_name: string,\n  data: any = {},\n  target_module: string\n) {\n  const msg = createMessage(\"comm_open\", {\n    content: { comm_id, target_name, data }\n  });\n  if (target_module) {\n    msg.content.target_module = target_module;\n  }\n  return msg;\n}\n\n/**\n * creates a comm message for sending to a kernel\n * @param  {string}     comm_id    unique identifier for the comm\n * @param  {Object}     data       any data to send for the comm\n * @param  {Uint8Array} buffers    arbitrary binary data to send on the comm\n * @return {jmp.Message}           jupyter message for comm_msg\n */\nexport function createCommMessage(\n  comm_id: string,\n  data: any = {},\n  buffers: Uint8Array = new Uint8Array([])\n) {\n  return createMessage(\"comm_msg\", { content: { comm_id, data }, buffers });\n}\n\n/**\n * creates a comm close message for sending to a kernel\n * @param  {Object} parent_header    header from a parent jupyter message\n * @param  {string}     comm_id      unique identifier for the comm\n * @param  {Object}     data         any data to send for the comm\n * @return {jmp.Message}             jupyter message for comm_msg\n */\nexport function createCommCloseMessage(\n  parent_header: any,\n  comm_id: string,\n  data: any = {}\n) {\n  return createMessage(\"comm_close\", {\n    content: { comm_id, data },\n    parent_header\n  });\n}\n\n/**\n * creates all comm related actions given a new kernel action\n * @param  {Object} launchKernelAction a LAUNCH_KERNEL_SUCCESSFUL action\n * @return {ActionsObservable}          all actions resulting from comm messages on this kernel\n */\nexport function commActionObservable(action: NewKernelAction) {\n  const {\n    payload: { kernel }\n  } = action;\n  const commOpenAction$ = kernel.channels.pipe(\n    ofMessageType(\"comm_open\"),\n    map(commOpenAction)\n  );\n\n  const commMessageAction$ = kernel.channels.pipe(\n    ofMessageType(\"comm_msg\"),\n    map(commMessageAction)\n  );\n\n  return merge(commOpenAction$, commMessageAction$).pipe(retry());\n}\n\n/**\n * An epic that emits comm actions from the backend kernel\n * @param  {ActionsObservable} action$ Action Observable from redux-observable\n * @param  {redux.Store} store   the redux store\n * @return {ActionsObservable}         Comm actions\n */\nexport const commListenEpic = (action$: ActionsObservable<NewKernelAction>) =>\n  action$.pipe(\n    // A LAUNCH_KERNEL_SUCCESSFUL action indicates we have a new channel\n    ofType(LAUNCH_KERNEL_SUCCESSFUL),\n    switchMap(commActionObservable)\n  );\n","/**\n * @module epics\n */\nimport { stringifyNotebook, toJS } from \"@nteract/commutable\";\nimport { Notebook } from \"@nteract/commutable\";\nimport FileSaver from \"file-saver\";\nimport { sample } from \"lodash\";\nimport { Action } from \"redux\";\nimport { ofType } from \"redux-observable\";\nimport { ActionsObservable, StateObservable } from \"redux-observable\";\nimport { contents, ServerConfig } from \"rx-jupyter\";\nimport { empty, from, interval, Observable, ObservableInput, of } from \"rxjs\";\nimport { catchError, map, mergeMap, switchMap, tap } from \"rxjs/operators\";\n\nimport * as actions from \"@nteract/actions\";\nimport * as selectors from \"@nteract/selectors\";\nimport { AppState, ContentRef } from \"@nteract/types\";\nimport { AjaxResponse } from \"rxjs/ajax\";\n\nimport urljoin from \"url-join\";\n\nexport function updateContentEpic(\n  action$: ActionsObservable<actions.ChangeContentName>,\n  state$: StateObservable<AppState>\n) {\n  return action$.pipe(\n    ofType(actions.CHANGE_CONTENT_NAME),\n    switchMap(action => {\n      if (!action.payload || typeof action.payload.filepath !== \"string\") {\n        return of({\n          type: \"ERROR\",\n          error: true,\n          payload: { error: new Error(\"updating content needs a payload\") }\n        }) as any;\n      }\n\n      const state: any = state$.value;\n      const host: any = selectors.currentHost(state);\n\n      // Dismiss any usage that isn't targeting a jupyter server\n      if (host.type !== \"jupyter\") {\n        return empty();\n      }\n\n      const { contentRef, filepath, prevFilePath } = action.payload;\n      const serverConfig: ServerConfig = selectors.serverConfig(host);\n\n      return contents\n        .update(serverConfig, prevFilePath, { path: filepath.slice(1) })\n        .pipe(\n          tap(xhr => {\n            if (xhr.status !== 200) {\n              throw new Error(xhr.response);\n            }\n          }),\n          map(() => {\n            /*\n             * Modifying the url's file name in the browser.\n             * This effects back button behavior.\n             * Is there a better way to accomplish this?\n             */\n            window.history.replaceState(\n              {},\n              filepath,\n              urljoin(host.basePath, `/nteract/edit${filepath}`)\n            );\n\n            return actions.changeContentNameFulfilled({\n              contentRef: action.payload.contentRef,\n              filepath: action.payload.filepath,\n              prevFilePath\n            });\n          }),\n          catchError((xhrError: any) =>\n            of(\n              actions.changeContentNameFailed({\n                basepath: host.basepath,\n                filepath: action.payload.filepath,\n                prevFilePath,\n                error: xhrError,\n                contentRef: action.payload.contentRef\n              })\n            )\n          )\n        );\n    })\n  );\n}\n\nexport function fetchContentEpic(\n  action$: ActionsObservable<\n    | actions.FetchContent\n    | actions.FetchContentFailed\n    | actions.FetchContentFulfilled\n  >,\n  state$: StateObservable<AppState>\n) {\n  return action$.pipe(\n    ofType(actions.FETCH_CONTENT),\n    switchMap(action => {\n      if (!action.payload || typeof action.payload.filepath !== \"string\") {\n        return of({\n          type: \"ERROR\",\n          error: true,\n          payload: { error: new Error(\"fetching content needs a payload\") }\n        }) as any;\n      }\n\n      const state: any = state$.value;\n      const host: any = selectors.currentHost(state);\n\n      // Dismiss any usage that isn't targeting a jupyter server\n      if (host.type !== \"jupyter\") {\n        return empty();\n      }\n\n      const serverConfig: ServerConfig = selectors.serverConfig(host);\n\n      return contents\n        .get(\n          serverConfig,\n          (action as actions.FetchContent).payload.filepath,\n          (action as actions.FetchContent).payload.params\n        )\n        .pipe(\n          tap(xhr => {\n            if (xhr.status !== 200) {\n              throw new Error(xhr.response.toString());\n            }\n          }),\n          map(xhr => {\n            if (typeof xhr.response === \"string\") {\n              throw new Error(`Invalid API response: ${xhr.response}`);\n            }\n\n            return actions.fetchContentFulfilled({\n              filepath: action.payload.filepath,\n              model: xhr.response,\n              kernelRef: action.payload.kernelRef,\n              contentRef: action.payload.contentRef\n            });\n          }),\n          catchError((xhrError: any) =>\n            of(\n              actions.fetchContentFailed({\n                filepath: action.payload.filepath,\n                error: xhrError,\n                kernelRef: action.payload.kernelRef,\n                contentRef: action.payload.contentRef\n              })\n            )\n          )\n        );\n    })\n  );\n}\n\nexport function downloadString(\n  fileContents: string,\n  filepath: string,\n  contentType: string\n) {\n  const filename = filepath.split(\"/\").pop();\n  const blob = new Blob([fileContents], { type: contentType });\n  // NOTE: There is no callback for this, we have to rely on the browser\n  //       to do this well, so we assume it worked\n  FileSaver.saveAs(blob, filename);\n}\n\n// Generated with Python + SymPy\n// >>> import sympy\n// >>> import random\n// >>> random.sample(list(sympy.primerange(28000, 32000)), 30)\n\nconst someArbitraryPrimesAround30k = [\n  30137,\n  30713,\n  30593,\n  28403,\n  29153,\n  30509,\n  31727,\n  28229,\n  29327,\n  28867,\n  28201,\n  31907,\n  29167,\n  28433,\n  28151,\n  31063,\n  29833,\n  29243,\n  28901,\n  28909,\n  28607,\n  30517,\n  28307,\n  28547,\n  29009,\n  31183,\n  30773,\n  29017,\n  31601,\n  28109\n];\n\nexport function autoSaveCurrentContentEpic(\n  action$: ActionsObservable<Action>,\n  state$: StateObservable<AppState>\n) {\n  // Pick an autosave duration that won't have the exact same cycle as another open tab\n  const duration = sample(someArbitraryPrimesAround30k);\n\n  return interval(duration).pipe(\n    mergeMap(() => {\n      const state = state$.value;\n\n      const contentRef$ = from(\n        state.core.entities.contents.byRef\n          .filter(\n            // Don't bother with non-file and non-notebook types for saving\n            // (no dummy or directory)\n            content => content.type === \"file\" || content.type === \"notebook\"\n          )\n          .keys()\n      );\n\n      return contentRef$;\n    }),\n    /**\n     * TODO: Now that we are on redux observable 1.0.0, we should use the\n     * state$ stream to only save when the content has changed.\n     */\n    mergeMap((contentRef: ContentRef) => {\n      const state = state$.value;\n      const content = selectors.content(state, { contentRef });\n\n      let isVisible = false;\n\n      // document.hidden appears well supported\n      if (document.hidden) {\n        // Opera 12.10 and Firefox 18 and later support\n        isVisible = !document.hidden;\n      } else if ((document as any).msHidden) {\n        isVisible = !(document as any).msHidden;\n      } else if ((document as any).webkitHidden) {\n        isVisible = !(document as any).webkitHidden;\n      } else {\n        // Final fallback -- this will say the window is hidden when devtools is open or if the\n        // user is interacting with an iframe\n        isVisible = document.hasFocus();\n      }\n\n      if (\n        isVisible &&\n        // Don't bother saving nothing\n        content &&\n        // Only files and notebooks\n        (content.type === \"file\" || content.type === \"notebook\") &&\n        // Only save if they have a real filepath\n        content.filepath !== \"\"\n      ) {\n        return of(actions.save({ contentRef }));\n      } else {\n        return empty();\n      }\n    })\n  );\n}\n\nexport function saveContentEpic(\n  action$: ActionsObservable<actions.Save | actions.DownloadContent>,\n  state$: StateObservable<AppState>\n) {\n  return action$.pipe(\n    ofType(actions.SAVE, actions.DOWNLOAD_CONTENT),\n    mergeMap(\n      (\n        action: actions.Save | actions.DownloadContent\n      ):\n        | Observable<\n            | actions.DownloadContentFailed\n            | actions.DownloadContentFulfilled\n            | actions.SaveFailed\n            | actions.SaveFulfilled\n          >\n        | Observable<never> => {\n        const state = state$.value;\n\n        const host = selectors.currentHost(state);\n        if (host.type !== \"jupyter\") {\n          // Dismiss any usage that isn't targeting a jupyter server\n          return empty();\n        }\n        const contentRef = action.payload.contentRef;\n        const content = selectors.content(state, { contentRef });\n\n        // NOTE: This could save by having selectors for each model type\n        //       have toDisk() selectors\n        //       It will need to be cased off when we have more than one type\n        //       of content we actually save\n        if (!content) {\n          const errorPayload = {\n            error: new Error(\"Content was not set.\"),\n            contentRef: action.payload.contentRef\n          };\n          if (action.type === actions.DOWNLOAD_CONTENT) {\n            return of(actions.downloadContentFailed(errorPayload));\n          }\n          return of(actions.saveFailed(errorPayload));\n        }\n\n        if (content.type === \"directory\") {\n          // Don't save directories\n          return empty();\n        }\n\n        const filepath = content.filepath;\n\n        // This could be object for notebook, or string for files\n        let serializedData: Notebook | string;\n        let saveModel: Partial<contents.IContent<\"file\" | \"notebook\">> = {};\n        if (content.type === \"notebook\") {\n          const appVersion = selectors.appVersion(state);\n\n          // contents API takes notebook as raw JSON whereas downloading takes\n          // a string\n          serializedData = toJS(\n            content.model.notebook.setIn(\n              [\"metadata\", \"nteract\", \"version\"],\n              appVersion\n            )\n          );\n          saveModel = {\n            content: serializedData,\n            type: content.type\n          };\n        } else if (content.type === \"file\") {\n          serializedData = content.model.text;\n          saveModel = {\n            content: serializedData,\n            type: content.type,\n            format: \"text\"\n          };\n        } else {\n          // We shouldn't save directories\n          return empty();\n        }\n\n        switch (action.type) {\n          case actions.DOWNLOAD_CONTENT: {\n            // FIXME: Convert this to downloadString, so it works for both files & notebooks\n            if (\n              content.type === \"notebook\" &&\n              typeof serializedData === \"object\"\n            ) {\n              downloadString(\n                stringifyNotebook(serializedData),\n                filepath || \"notebook.ipynb\",\n                \"application/json\"\n              );\n            } else if (\n              content.type === \"file\" &&\n              typeof serializedData === \"string\"\n            ) {\n              downloadString(\n                serializedData,\n                filepath,\n                content.mimetype || \"application/octet-stream\"\n              );\n            } else {\n              // This shouldn't happen, is here for safety\n              return empty();\n            }\n            return of(\n              actions.downloadContentFulfilled({\n                contentRef: action.payload.contentRef\n              })\n            );\n          }\n          case actions.SAVE: {\n            const serverConfig: ServerConfig = selectors.serverConfig(host);\n\n            // Check to see if the file was modified since the last time we saved\n            // TODO: Determine how we handle what to do\n            // Don't bother doing this if the file is new(?)\n            return contents.get(serverConfig, filepath, { content: 0 }).pipe(\n              // Make sure that the modified time is within some delta\n              mergeMap(xhr => {\n                // TODO: What does it mean if we have a failed GET on the content\n                if (xhr.status !== 200) {\n                  throw new Error(xhr.response.toString());\n                }\n                if (typeof xhr.response === \"string\") {\n                  throw new Error(\n                    `jupyter server response invalid: ${xhr.response}`\n                  );\n                }\n\n                const model = xhr.response;\n\n                const diskDate = new Date(model.last_modified);\n                const inMemoryDate = content.lastSaved\n                  ? new Date(content.lastSaved)\n                  : // FIXME: I'm unsure if we don't have a date if we should default to the disk date\n                    diskDate;\n                const diffDate = diskDate.getTime() - inMemoryDate.getTime();\n\n                if (Math.abs(diffDate) > 600) {\n                  return of(\n                    actions.saveFailed({\n                      error: new Error(\"open in another tab possibly...\"),\n                      contentRef: action.payload.contentRef\n                    })\n                  );\n                }\n\n                return contents.save(serverConfig, filepath, saveModel).pipe(\n                  map((xhr: AjaxResponse) => {\n                    return actions.saveFulfilled({\n                      contentRef: action.payload.contentRef,\n                      model: xhr.response\n                    });\n                  }),\n                  catchError((error: Error) =>\n                    of(\n                      actions.saveFailed({\n                        error,\n                        contentRef: action.payload.contentRef\n                      })\n                    )\n                  )\n                );\n              })\n            );\n          }\n          default:\n            // NOTE: Our ofType should prevent reaching here, this\n            // is here merely as safety\n            return empty();\n        }\n      }\n    )\n  );\n}\n","/**\n * @module epics\n */\nimport {\n  Channels,\n  childOf,\n  createExecuteRequest,\n  ExecuteRequest,\n  executionCounts,\n  JupyterMessage,\n  kernelStatuses,\n  MessageType,\n  ofMessageType,\n  outputs,\n  payloads\n} from \"@nteract/messaging\";\nimport { ofType } from \"redux-observable\";\nimport { ActionsObservable, StateObservable } from \"redux-observable\";\nimport { empty, merge, Observable, Observer, of, throwError } from \"rxjs\";\nimport {\n  catchError,\n  concatMap,\n  filter,\n  groupBy,\n  map,\n  mapTo,\n  mergeAll,\n  mergeMap,\n  share,\n  switchMap,\n  takeUntil,\n  tap\n} from \"rxjs/operators\";\n\nimport * as actions from \"@nteract/actions\";\nimport { CellId, OnDiskOutput } from \"@nteract/commutable\";\nimport * as selectors from \"@nteract/selectors\";\nimport { AppState, ContentRef, PayloadMessage } from \"@nteract/types\";\n\nconst Immutable = require(\"immutable\");\n\n/**\n * Observe all the reactions to running code for cell with id.\n *\n * @param {Subject} channels - The standard channels specified in the Jupyter\n * specification.\n * @param {String} id - Universally Unique Identifier of cell to be executed.\n * @param {String} code - Source code to be executed.\n * @return {Observable<Action>} updatedOutputs - It returns an observable with\n * a stream of events that need to happen after a cell has been executed.\n */\nexport function executeCellStream(\n  channels: Channels,\n  id: string,\n  message: ExecuteRequest,\n  contentRef: ContentRef\n) {\n  if (!channels || !channels.pipe) {\n    return throwError(new Error(\"kernel not connected\"));\n  }\n\n  const executeRequest = message;\n\n  // All the streams intended for all frontends\n  const cellMessages: Observable<\n    JupyterMessage<MessageType, any>\n  > = channels.pipe(\n    childOf(executeRequest),\n    share()\n  );\n\n  // All the payload streams, intended for one user\n  const payloadStream = cellMessages.pipe(payloads());\n\n  const cellAction$ = merge(\n    payloadStream.pipe(\n      map((payload: PayloadMessage) =>\n        actions.acceptPayloadMessage({ id, payload, contentRef })\n      )\n    ),\n\n    // All actions for updating cell status\n    cellMessages.pipe(\n      kernelStatuses() as any,\n      map((status: string) =>\n        actions.updateCellStatus({ id, status, contentRef })\n      )\n    ),\n\n    // Update the input numbering: `[ ]`\n    cellMessages.pipe(\n      executionCounts() as any,\n      map((ct: number) =>\n        actions.updateCellExecutionCount({ id, value: ct, contentRef })\n      )\n    ),\n\n    // All actions for new outputs\n    cellMessages.pipe(\n      outputs() as any,\n      map((output: OnDiskOutput) =>\n        actions.appendOutput({ id, output, contentRef })\n      )\n    ),\n\n    // clear_output display message\n    cellMessages.pipe(\n      ofMessageType(\"clear_output\") as any,\n      mapTo(actions.clearOutputs({ id, contentRef }))\n    )\n  );\n\n  // On subscription, send the message\n  return Observable.create((observer: Observer<any>) => {\n    const subscription = cellAction$.subscribe(observer);\n    channels.next(executeRequest);\n    return subscription;\n  });\n}\n\nexport function createExecuteCellStream(\n  action$: ActionsObservable<\n    | actions.ExecuteCanceled\n    | actions.DeleteCell\n    | actions.LaunchKernelAction\n    | actions.LaunchKernelByNameAction\n    | actions.KillKernelAction\n    | actions.ExecuteCell\n    | actions.ExecuteFocusedCell\n  >,\n  state: any,\n  message: ExecuteRequest,\n  id: string,\n  contentRef: ContentRef\n): Observable<any> {\n  const kernel = selectors.currentKernel(state);\n\n  const channels = kernel ? kernel.channels : null;\n\n  const kernelConnected =\n    kernel &&\n    channels &&\n    !(kernel.status === \"starting\" || kernel.status === \"not connected\");\n\n  if (!kernelConnected || !channels) {\n    return of(\n      actions.executeFailed({\n        error: new Error(\"Kernel not connected!\"),\n        contentRef\n      })\n    );\n  }\n\n  const cellStream = executeCellStream(channels, id, message, contentRef).pipe(\n    takeUntil(\n      merge(\n        action$.pipe(\n          ofType(actions.EXECUTE_CANCELED, actions.DELETE_CELL),\n          filter(\n            (\n              action:\n                | actions.ExecuteCanceled\n                | actions.DeleteCell\n                | actions.LaunchKernelAction\n                | actions.LaunchKernelByNameAction\n                | actions.KillKernelAction\n                | actions.ExecuteCell\n                | actions.ExecuteFocusedCell\n            ) => (action as actions.ExecuteCanceled).payload.id === id\n          )\n        ),\n        action$.pipe(\n          ofType(\n            actions.LAUNCH_KERNEL,\n            actions.LAUNCH_KERNEL_BY_NAME,\n            actions.KILL_KERNEL\n          )\n        )\n      )\n    )\n  );\n\n  return merge(\n    // We make sure to propagate back to \"ourselves\" the actual message\n    // that we sent to the kernel with the sendExecuteRequest action\n    of(actions.sendExecuteRequest({ id, message, contentRef })),\n    // Merging it in with the actual stream\n    cellStream\n  );\n}\n\nexport function executeAllCellsEpic(\n  action$: ActionsObservable<\n    actions.ExecuteAllCells | actions.ExecuteAllCellsBelow\n  >,\n  state$: StateObservable<AppState>\n) {\n  return action$.pipe(\n    ofType(actions.EXECUTE_ALL_CELLS, actions.EXECUTE_ALL_CELLS_BELOW),\n    concatMap(\n      (action: actions.ExecuteAllCells | actions.ExecuteAllCellsBelow) => {\n        const state = state$.value;\n        const contentRef = action.payload.contentRef;\n\n        const model = selectors.model(state, { contentRef });\n        // If it's not a notebook, we shouldn't be here\n        if (!model || model.type !== \"notebook\") {\n          return empty();\n        }\n\n        let codeCellIds = Immutable.List();\n\n        if (action.type === actions.EXECUTE_ALL_CELLS) {\n          codeCellIds = selectors.notebook.codeCellIds(model);\n        } else if (action.type === actions.EXECUTE_ALL_CELLS_BELOW) {\n          codeCellIds = selectors.notebook.codeCellIdsBelow(model);\n        }\n        return of(\n          ...codeCellIds.map((id: CellId) =>\n            actions.executeCell({ id, contentRef: action.payload.contentRef })\n          )\n        );\n      }\n    )\n  );\n}\n\n/**\n * the execute cell epic processes execute requests for all cells, creating\n * inner observable streams of the running execution responses\n */\nexport function executeCellEpic(\n  action$: ActionsObservable<actions.ExecuteCell | actions.ExecuteFocusedCell>,\n  state$: any\n) {\n  return action$.pipe(\n    ofType(actions.EXECUTE_CELL, actions.EXECUTE_FOCUSED_CELL),\n    mergeMap((action: actions.ExecuteCell | actions.ExecuteFocusedCell) => {\n      if (action.type === actions.EXECUTE_FOCUSED_CELL) {\n        const contentRef = action.payload.contentRef;\n        const state = state$.value;\n        const model = selectors.model(state, { contentRef });\n        // If it's not a notebook, we shouldn't be here\n        if (!model || model.type !== \"notebook\") {\n          return empty();\n        }\n\n        const id = model.cellFocused;\n\n        if (!id) {\n          throw new Error(\"attempted to execute without an id\");\n        }\n        return of(\n          actions.executeCell({ id, contentRef: action.payload.contentRef })\n        );\n      }\n      return of(action);\n    }),\n    tap((action: actions.ExecuteCell) => {\n      if (!action.payload.id) {\n        throw new Error(\"execute cell needs an id\");\n      }\n    }),\n    // Split stream by cell IDs\n    groupBy((action: actions.ExecuteCell) => action.payload.id),\n    // Work on each cell's stream\n    map(cellAction$ =>\n      cellAction$.pipe(\n        // When a new EXECUTE_CELL comes in with the current ID, we create a\n        // a new stream and unsubscribe from the old one.\n        switchMap((action: actions.ExecuteCell) => {\n          const { id } = action.payload;\n\n          const state = state$.value;\n\n          const contentRef = action.payload.contentRef;\n          const model = selectors.model(state, { contentRef });\n\n          // If it's not a notebook, we shouldn't be here\n          if (!model || model.type !== \"notebook\") {\n            return empty();\n          }\n\n          const cell = selectors.notebook.cellById(model, {\n            id\n          });\n          if (!cell) {\n            return empty();\n          }\n\n          // We only execute code cells\n          if ((cell as any).get(\"cell_type\") === \"code\") {\n            const source = cell.get(\"source\", \"\");\n\n            const message = createExecuteRequest(source);\n\n            return createExecuteCellStream(\n              action$,\n              state,\n              message,\n              id,\n              action.payload.contentRef\n            ).pipe(\n              catchError((error, source) =>\n                merge(\n                  of(\n                    actions.executeFailed({\n                      error,\n                      contentRef: action.payload.contentRef\n                    })\n                  ),\n                  source\n                )\n              )\n            );\n          }\n          return empty();\n        })\n      )\n    ),\n    // Bring back all the inner Observables into one stream\n    mergeAll(),\n    catchError((error: Error, source) => {\n      // Either we ensure that all errors are caught when the action.payload.contentRef\n      // is in scope or we make this be a generic ERROR\n      return merge(\n        of(\n          actions.executeFailed({\n            error\n          })\n        ),\n        source\n      );\n    })\n  );\n}\n\nexport const updateDisplayEpic = (\n  action$: ActionsObservable<actions.NewKernelAction>\n) =>\n  // Global message watcher so we need to set up a feed for each new kernel\n  action$.pipe(\n    ofType(actions.LAUNCH_KERNEL_SUCCESSFUL),\n    switchMap((action: actions.NewKernelAction) =>\n      action.payload.kernel.channels.pipe(\n        ofMessageType(\"update_display_data\"),\n        map((msg: JupyterMessage) =>\n          actions.updateDisplay({\n            content: msg.content,\n            contentRef: action.payload.contentRef\n          })\n        ),\n        catchError(error =>\n          of(\n            actions.updateDisplayFailed({\n              error,\n              contentRef: action.payload.contentRef\n            })\n          )\n        )\n      )\n    )\n  );\n","/**\n * @module types\n */\nimport {\n  CellId,\n  emptyNotebook,\n  ImmutableCell,\n  ImmutableNotebook\n} from \"@nteract/commutable\";\nimport * as Immutable from \"immutable\";\n\nimport { KernelRef } from \"../..\";\n\nexport interface DocumentRecordProps {\n  type: \"notebook\";\n  notebook: ImmutableNotebook;\n  savedNotebook: ImmutableNotebook;\n  transient: Immutable.Map<string, any>; // has the keypaths for updating displays\n  // transient should be more fully typed (be a record itself)\n  // right now it's keypaths and then it looks like it's able to handle any per\n  // cell transient data that will be deleted when the kernel is restarted\n  cellPagers: any;\n  editorFocused?: CellId | null;\n  cellFocused?: CellId | null;\n  copied: ImmutableCell | null;\n  kernelRef?: KernelRef | null;\n}\nexport const makeDocumentRecord = Immutable.Record<DocumentRecordProps>({\n  type: \"notebook\",\n  notebook: emptyNotebook,\n  savedNotebook: emptyNotebook,\n  transient: Immutable.Map({\n    keyPathsForDisplays: Immutable.Map()\n  }),\n  cellPagers: Immutable.Map(),\n  editorFocused: null,\n  cellFocused: null,\n  copied: null,\n  kernelRef: null\n});\nexport type NotebookModel = Immutable.RecordOf<DocumentRecordProps>;\n\nexport interface NotebookContentRecordProps {\n  mimetype?: string | null;\n  created?: Date | null;\n  format: \"json\";\n  lastSaved?: Date | null;\n  model: NotebookModel;\n  filepath: string;\n  type: \"notebook\";\n  writable: boolean;\n  saving: boolean;\n  loading: boolean;\n  error?: object | null;\n}\n\nexport const makeNotebookContentRecord = Immutable.Record<\n  NotebookContentRecordProps\n>({\n  mimetype: null,\n  created: null,\n  format: \"json\",\n  lastSaved: null,\n  model: makeDocumentRecord(),\n  filepath: \"\",\n  type: \"notebook\",\n  writable: true,\n  saving: false,\n  loading: false,\n  error: null\n});\n\nexport type NotebookContentRecord = Immutable.RecordOf<\n  NotebookContentRecordProps\n>;\n","/**\n * @module types\n */\nimport * as Immutable from \"immutable\";\n\nimport { ContentRef } from \"../../refs\";\n\nexport interface DirectoryModelRecordProps {\n  type: \"directory\";\n  sortedBy?: \"created\" | \"lastSaved\" | \"type\" | \"name\";\n  groupedBy?: \"type\" | \"mimetype\";\n  items: Immutable.List<ContentRef>;\n}\nexport const makeDirectoryModel = Immutable.Record<DirectoryModelRecordProps>({\n  type: \"directory\",\n  items: Immutable.List()\n});\nexport type DirectoryModelRecord = Immutable.RecordOf<\n  DirectoryModelRecordProps\n>;\n\nexport interface DirectoryContentRecordProps {\n  mimetype: null;\n  type: \"directory\";\n  created: Date | null;\n  format: \"json\";\n  lastSaved: Date | null;\n  filepath: string;\n  model: DirectoryModelRecord;\n  saving: boolean;\n  loading: boolean;\n  error?: object | null;\n}\nexport const makeDirectoryContentRecord = Immutable.Record<\n  DirectoryContentRecordProps\n>({\n  mimetype: null,\n  type: \"directory\",\n  created: null,\n  format: \"json\",\n  lastSaved: null,\n  filepath: \"\",\n  model: makeDirectoryModel(),\n  saving: false,\n  loading: false,\n  error: null\n});\nexport type DirectoryContentRecord = Immutable.RecordOf<\n  DirectoryContentRecordProps\n>;\n","/**\n * @module types\n */\nimport * as Immutable from \"immutable\";\n\nexport interface EmptyModelRecordProps {\n  type: \"unknown\";\n}\n\nexport const makeEmptyModel = Immutable.Record<EmptyModelRecordProps>({\n  type: \"unknown\"\n});\nexport type EmptyModelRecord = Immutable.RecordOf<EmptyModelRecordProps>;\n\nexport type NotebookTypes = \"unknown\" | \"directory\" | \"notebook\" | \"file\";\n\nexport interface DummyContentRecordProps {\n  type: \"dummy\";\n  assumedType: NotebookTypes;\n  mimetype?: string | null;\n  lastSaved: null;\n  filepath: string;\n  model: EmptyModelRecord;\n  saving: boolean;\n  loading: boolean;\n  error?: object | null;\n}\nexport const makeDummyContentRecord = Immutable.Record<DummyContentRecordProps>(\n  {\n    type: \"dummy\",\n    mimetype: null,\n    assumedType: \"unknown\",\n    lastSaved: null,\n    filepath: \"\",\n    model: makeEmptyModel(),\n    saving: false,\n    loading: false,\n    error: null\n  }\n);\nexport type DummyContentRecord = Immutable.RecordOf<DummyContentRecordProps>;\n","/**\n * @module types\n */\nimport * as Immutable from \"immutable\";\n\nexport interface FileModelRecordProps {\n  type: \"file\";\n  text: string;\n}\nexport const makeFileModelRecord = Immutable.Record<FileModelRecordProps>({\n  type: \"file\",\n  text: \"\"\n});\nexport type FileModelRecord = Immutable.RecordOf<FileModelRecordProps>;\n\nexport interface FileContentRecordProps {\n  type: \"file\";\n  mimetype?: string | null;\n  created?: Date | null;\n  format: \"json\";\n  lastSaved: null;\n  filepath: string;\n  model: FileModelRecord;\n  saving: boolean;\n  loading: boolean;\n  error?: object | null;\n}\nexport const makeFileContentRecord = Immutable.Record<FileContentRecordProps>({\n  type: \"file\",\n  mimetype: null,\n  created: null,\n  format: \"json\",\n  lastSaved: null,\n  filepath: \"\",\n  model: makeFileModelRecord(),\n  saving: false,\n  loading: false,\n  error: null\n});\n\nexport type FileContentRecord = Immutable.RecordOf<FileContentRecordProps>;\n","/**\n * @module types\n */\nimport * as Immutable from \"immutable\";\n\nimport { ContentRef } from \"../../refs\";\n\nimport { DirectoryContentRecord, DirectoryModelRecord } from \"./directory\";\nimport { DummyContentRecord, EmptyModelRecord } from \"./dummy\";\nimport { FileContentRecord, FileModelRecord } from \"./file\";\nimport { NotebookContentRecord, NotebookModel } from \"./notebook\";\n\nexport * from \"./notebook\";\nexport * from \"./directory\";\nexport * from \"./dummy\";\nexport * from \"./file\";\n\nexport type ContentModel =\n  | NotebookModel\n  | DirectoryModelRecord\n  | FileModelRecord\n  | EmptyModelRecord;\n\nexport type ContentRecord =\n  | NotebookContentRecord\n  | DummyContentRecord\n  | FileContentRecord\n  | DirectoryContentRecord;\n\nexport interface ContentsRecordProps {\n  byRef: Immutable.Map<ContentRef, ContentRecord>;\n}\n\nexport const makeContentsRecord = Immutable.Record<ContentsRecordProps>({\n  byRef: Immutable.Map<ContentRef, ContentRecord>()\n});\n\nexport type ContentsRecord = Immutable.RecordOf<ContentsRecordProps>;\n","/**\n * @module types\n */\nimport * as Immutable from \"immutable\";\nimport { AjaxRequest } from \"rxjs/ajax\";\n\nimport { HostId } from \"../ids\";\nimport { HostRef } from \"../refs\";\n\nexport interface ServerConfig {\n  endpoint: string;\n  crossDomain: boolean | null | undefined;\n  token: string | null | undefined;\n}\n\nexport interface EmptyHost {\n  type: \"empty\";\n}\nexport type EmptyHostRecord = Immutable.RecordOf<EmptyHost>;\nexport const makeEmptyHostRecord = Immutable.Record<EmptyHost>({\n  type: \"empty\"\n});\n\nexport interface BaseHostProps {\n  id?: HostId | null;\n  defaultKernelName: string;\n}\n\nexport type JupyterHostRecordProps = BaseHostProps & {\n  type: \"jupyter\";\n  token?: string | null;\n  origin: string;\n  basePath: string;\n  crossDomain?: boolean | null;\n  ajaxOptions?: Partial<AjaxRequest>;\n  wsProtocol?: string | string[];\n};\n\nexport const makeJupyterHostRecord = Immutable.Record<JupyterHostRecordProps>({\n  type: \"jupyter\",\n  id: null,\n  defaultKernelName: \"python\",\n  token: null,\n  origin: typeof location === \"undefined\" ? \"\" : location.origin,\n  basePath: \"/\",\n  crossDomain: false,\n  ajaxOptions: undefined,\n  wsProtocol: undefined\n});\n\nexport type JupyterHostRecord = Immutable.RecordOf<JupyterHostRecordProps>;\n\nexport type LocalHostRecordProps = BaseHostProps & {\n  type: \"local\";\n};\n\nexport const makeLocalHostRecord = Immutable.Record<LocalHostRecordProps>({\n  type: \"local\",\n  id: null,\n  defaultKernelName: \"python\"\n});\n\nexport type LocalHostRecord = Immutable.RecordOf<LocalHostRecordProps>;\n\nexport type HostRecordProps = LocalHostRecordProps | JupyterHostRecordProps;\n\nexport type HostRecord = LocalHostRecord | JupyterHostRecord | EmptyHostRecord;\n\nexport interface HostsRecordProps {\n  byRef: Immutable.Map<HostRef, HostRecord>;\n  refs: Immutable.List<HostRef>;\n}\n\nexport const makeHostsRecord = Immutable.Record<HostsRecordProps>({\n  byRef: Immutable.Map(),\n  refs: Immutable.List()\n});\n","/**\n * @module types\n */\nimport { ChildProcess } from \"child_process\";\n\nimport * as Immutable from \"immutable\";\nimport { Observable, Subject } from \"rxjs\";\n\nimport { KernelId, SessionId } from \"../ids\";\nimport { HostRef, KernelRef } from \"../refs\";\n\nimport { KernelInfo } from \"./kernel-info\";\n\n// See #3427. This represents the kernel early in the launch process.\n// With a bit more work we could probably drop this and just use either\n// Local or RemoteKernelProps as our initial representation of the kernel,\n// deriving local-vs-remote from known sources of truth about kernels.\nexport interface KernelNotStartedProps {\n  kernelSpecName?: string | null;\n  status?: string | null;\n  // The following properties are not known immediately at the start of\n  // launch; they are just included to keep Flow happy and minimize the\n  // impact of this likely-to-be-deleted type.\n  type: \"unknown\";\n  cwd: \".\";\n  channels: Subject<any>;\n  info?: KernelInfo | null;\n}\n\nexport type KernelNotStartedRecord = Immutable.RecordOf<KernelNotStartedProps>;\n\nexport const makeKernelNotStartedRecord = Immutable.Record<\n  KernelNotStartedProps\n>({\n  kernelSpecName: null,\n  status: null,\n  type: \"unknown\",\n  cwd: \".\",\n  channels: new Subject(),\n  info: null\n});\n\nexport interface LocalKernelProps {\n  kernelSpecName?: string | null;\n  info?: KernelInfo | null;\n  hostRef?: HostRef | null;\n  lastActivity?: Date | null;\n  channels: Subject<any>;\n  cwd: string;\n  // Canonically: idle, busy, starting\n  // Xref: http://jupyter-client.readthedocs.io/en/stable/messaging.html#kernel-status\n  //\n  // We also use this for other bits of lifecycle, including: launching,\n  //   shutting down, not connected.\n  status?: string | null;\n  type: \"zeromq\";\n  spawn?: ChildProcess | null;\n  connectionFile?: string | null;\n}\n\nexport const makeLocalKernelRecord = Immutable.Record<LocalKernelProps>({\n  type: \"zeromq\",\n  cwd: \".\",\n  info: null,\n  kernelSpecName: null,\n  hostRef: null,\n  lastActivity: null,\n  channels: new Subject(),\n  status: null,\n  spawn: null,\n  connectionFile: null\n});\n\nexport type LocalKernelRecord = Immutable.RecordOf<LocalKernelProps>;\n\nexport interface RemoteKernelProps {\n  kernelSpecName?: string | null;\n  info?: KernelInfo | null;\n  hostRef?: HostRef | null;\n  lastActivity?: Date | null;\n  channels: Subject<any>;\n  cwd: string;\n  // Canonically: idle, busy, starting\n  // Xref: http://jupyter-client.readthedocs.io/en/stable/messaging.html#kernel-status\n  //\n  // We also use this for other bits of lifecycle, including: launching,\n  //   shutting down, not connected.\n  status?: string | null;\n  type: \"websocket\";\n  sessionId?: SessionId | null;\n  id?: KernelId | null;\n}\n\nexport const makeRemoteKernelRecord = Immutable.Record<RemoteKernelProps>({\n  type: \"websocket\",\n  info: null,\n  cwd: \".\",\n  id: null,\n  kernelSpecName: null,\n  hostRef: null,\n  lastActivity: null,\n  channels: new Subject(),\n  sessionId: null,\n  status: null\n});\n\nexport type RemoteKernelRecord = Immutable.RecordOf<RemoteKernelProps>;\n\nexport type KernelRecord =\n  | KernelNotStartedRecord\n  | LocalKernelRecord\n  | RemoteKernelRecord;\n\nexport interface KernelsRecordProps {\n  byRef: Immutable.Map<KernelRef, KernelRecord>;\n}\n\nexport const makeKernelsRecord = Immutable.Record<KernelsRecordProps>({\n  byRef: Immutable.Map()\n});\n","/**\n * @module types\n */\nimport { RecordOf } from \"immutable\";\nimport { List, Map, Record } from \"immutable\";\n\nimport { HostRef, KernelspecsRef } from \"../refs\";\n\nexport interface KernelspecProps {\n  name: string;\n  argv: List<string>;\n  env: Map<string, any>;\n  interruptMode?: string | null;\n  language: string;\n  displayName: string;\n  resources: Map<string, any>;\n  metadata: Map<string, any>;\n}\n\nexport const makeKernelspec = Record<KernelspecProps>({\n  name: \"\",\n  argv: List(),\n  env: Map(),\n  interruptMode: null,\n  language: \"\",\n  displayName: \"\",\n  metadata: Map(),\n  resources: Map()\n});\n\nexport type KernelspecRecord = RecordOf<KernelspecProps>;\n\nexport interface KernelspecsByRefRecordProps {\n  hostRef?: HostRef | null;\n  defaultKernelName: string;\n  byName: Map<string, KernelspecRecord>;\n}\n\nexport type KernelspecsByRefRecord = RecordOf<KernelspecsByRefRecordProps>;\n\nexport const makeKernelspecsByRefRecord = Record<KernelspecsByRefRecordProps>({\n  hostRef: null,\n  defaultKernelName: \"python\",\n  byName: Map()\n});\n\nexport interface KernelspecsRecordProps {\n  byRef: Map<KernelspecsRef, RecordOf<KernelspecsByRefRecordProps>>;\n  refs: List<KernelspecsRef>;\n}\n\nexport const makeKernelspecsRecord = Record<KernelspecsRecordProps>({\n  byRef: Map(),\n  refs: List()\n});\n\nexport type KernelSpecsRecord = RecordOf<KernelspecsRecordProps>;\n","/**\n * @module types\n */\nimport * as Immutable from \"immutable\";\n\nexport interface ModalsRecordProps {\n  modalType: string;\n}\n\nexport type ModalsRecord = Immutable.RecordOf<ModalsRecordProps>;\n\nexport const makeModalsRecord = Immutable.Record<ModalsRecordProps>({\n  modalType: \"\"\n});\n","/**\n * @module types\n */\nimport Immutable from \"immutable\";\n\nexport interface TransformsRecordProps {\n  displayOrder: Immutable.List<string>;\n  byId: Immutable.Map<string, any>;\n}\n\nexport type TransformsRecord = Immutable.RecordOf<TransformsRecordProps>;\n\nexport const makeTransformsRecord = Immutable.Record<TransformsRecordProps>({\n  displayOrder: Immutable.List<string>(),\n  byId: Immutable.Map<string, any>()\n});\n","/**\n * @module types\n */\nimport { JSONType } from \"@nteract/commutable\";\nimport * as Immutable from \"immutable\";\n\nexport interface HelpLink {\n  text: string;\n  url: string;\n}\nexport const makeHelpLinkRecord = Immutable.Record<HelpLink>({\n  text: \"\",\n  url: \"#\"\n});\nexport type HelpLinkRecord = Immutable.RecordOf<HelpLink>;\n\n//\n// The kernel info object is determined by making a kernel_info_request to the\n// kernel after it has been started\n// Documentation comes from http://jupyter-client.readthedocs.io/en/stable/messaging.html#kernel-info\n//\n// We've adapted to both camelCase instead of snake_case here as well as flattened\n// the structure. The original naming is labeled `SPEC`\n//\nexport interface KernelInfo {\n  // Version of the messaging protocol.\n  // The first integer indicates major version.  It is incremented when\n  // there is any backward incompatible change.\n  // The second integer indicates minor version.  It is incremented when\n  // there is any backward compatible change.\n  // SPEC: protocol_version\n  protocolVersion: string; // E.g. 1.2.3\n\n  // The kernel implementation name\n  // (e.g. 'ipython' for the IPython kernel)\n  implementation: string;\n\n  // Implementation version number.\n  // The version number of the kernel's implementation\n  // (e.g. IPython.__version__ for the IPython kernel)\n  // SPEC: implementation_version\n  implementationVersion: string;\n\n  // A banner of information about the kernel,\n  // which may be displayed in console environments.\n  banner: string;\n\n  // Optional: A list of dictionaries, each with keys 'text' and 'url'.\n  // These can be displayed in the help menu for the UI.\n  // NOTE: To make it easy to use the KernelInfo type as a plain object in\n  //       actions, we allow this type to be an array of plain objects or the\n  //       fully immutable variety\n  // SPEC: help_links\n  helpLinks?: HelpLink[] | Immutable.List<HelpLinkRecord>;\n\n  // This section is all from the language_info object, flattened to the top\n  // level here\n\n  // Name of the programming language that the kernel implements.\n  //  Kernel included in IPython returns 'python'.\n  // SPEC: language_info.name\n  languageName: string; // language_info.name on the spec\n\n  // Language version number.\n  // It is Python version number (e.g., '2.7.3') for the kernel\n  // included in IPython.\n  // SPEC: language_info.version\n  languageVersion: string;\n\n  // mimetype for script files in this language\n  // SPEC: language_info.mimetype\n  mimetype: string;\n\n  // Extension including the dot, e.g. '.py'\n  // SPEC: language_info.file_extension\n  fileExtension: string;\n\n  // Pygments lexer, for highlighting\n  // Only needed if it differs from the 'name' field.\n  // SPEC: language_info.pygments_lexer\n  pygmentsLexer: string;\n\n  // Codemirror mode, for for highlighting in the notebook.\n  // Only needed if it differs from the 'name' field.\n  // SPEC: language_info.codemirror_mode\n  codemirrorMode: string | object | Immutable.Map<string, JSONType>;\n\n  // Nbconvert exporter, if notebooks written with this kernel should\n  // be exported with something other than the general 'script'\n  // exporter.\n  // SPEC: language_info.nbconvert_exporter\n  nbconvertExporter: string;\n}\n\nexport type KernelInfoRecord = Immutable.RecordOf<KernelInfo>;\n\n// NOTE: This is not exported as the \"makeXRecord\" for KernelInfo so that we\n//       don't have nullables and can rely on the proper types. The developer is\n//       required to pass a fully instantiated KernelInfo into\n//       makeKernelInfoRecord below.\nconst kernelInfoRecordMaker = Immutable.Record<KernelInfo>({\n  protocolVersion: \"0.0.0\", // E.g. 1.2.3\n  implementation: \"\",\n  implementationVersion: \"\",\n  banner: \"\",\n  helpLinks: Immutable.List(),\n  languageName: \"\",\n  languageVersion: \"\",\n  mimetype: \"\",\n  fileExtension: \"\",\n  pygmentsLexer: \"\",\n  codemirrorMode: \"text/plain\",\n  nbconvertExporter: \"\"\n});\n\nexport function makeKernelInfoRecord(kernelInfo: KernelInfo): KernelInfoRecord {\n  return kernelInfoRecordMaker(kernelInfo);\n}\n","/**\n * @module types\n */\nimport * as Immutable from \"immutable\";\n\nimport { ContentsRecordProps, makeContentsRecord } from \"./contents\";\nimport { HostsRecordProps, makeHostsRecord } from \"./hosts\";\nimport { KernelsRecordProps, makeKernelsRecord } from \"./kernels\";\nimport { KernelspecsRecordProps, makeKernelspecsRecord } from \"./kernelspecs\";\nimport { makeModalsRecord, ModalsRecordProps } from \"./modals\";\nimport { makeTransformsRecord, TransformsRecordProps } from \"./transforms\";\n\nexport * from \"./contents\";\nexport * from \"./hosts\";\nexport * from \"./kernels\";\nexport * from \"./kernel-info\";\nexport * from \"./kernelspecs\";\nexport * from \"./modals\";\nexport * from \"./transforms\";\n\nexport interface EntitiesRecordProps {\n  contents: Immutable.RecordOf<ContentsRecordProps>;\n  hosts: Immutable.RecordOf<HostsRecordProps>;\n  kernels: Immutable.RecordOf<KernelsRecordProps>;\n  kernelspecs: Immutable.RecordOf<KernelspecsRecordProps>;\n  modals: Immutable.RecordOf<ModalsRecordProps>;\n  transforms: Immutable.RecordOf<TransformsRecordProps>;\n}\n\nexport type EntitiesRecord = Immutable.RecordOf<EntitiesRecordProps>;\n\nexport const makeEntitiesRecord = Immutable.Record<EntitiesRecordProps>({\n  contents: makeContentsRecord(),\n  hosts: makeHostsRecord(),\n  kernels: makeKernelsRecord(),\n  kernelspecs: makeKernelspecsRecord(),\n  modals: makeModalsRecord(),\n  transforms: makeTransformsRecord()\n});\n","/**\n * @module types\n */\nimport uuid from \"uuid/v4\";\n\nexport type HostRef = string;\nexport type KernelRef = string;\nexport type KernelspecsRef = string;\nexport type ContentRef = string;\n\nexport function createHostRef(): HostRef {\n  return uuid();\n}\nexport function createKernelRef(): KernelRef {\n  return uuid();\n}\nexport function createKernelspecsRef(): KernelspecsRef {\n  return uuid();\n}\nexport function createContentRef(): ContentRef {\n  return uuid();\n}\n","/**\n * @module types\n */\nimport * as Immutable from \"immutable\";\n\nimport { MediaBundle } from \"@nteract/commutable\";\nimport { Notification } from \"react-notification-system\";\nimport {\n  EntitiesRecordProps,\n  makeEmptyHostRecord,\n  makeEntitiesRecord\n} from \"./entities\";\nimport { HostRecord } from \"./entities/hosts\";\nimport { KernelRef, KernelspecsRef } from \"./refs\";\n\nexport * from \"./entities\";\nexport * from \"./ids\";\nexport * from \"./refs\";\n\nexport interface KernelspecMetadata {\n  display_name: string;\n  language: string;\n  argv: string[];\n  name?: string;\n  env?: {\n    [variable: string]: string;\n  };\n}\n\n/**\n * This is the kernelspec as formed by spawnteract and jupyter kernelspecs --json\n */\nexport interface KernelspecInfo {\n  name: string;\n  spec: KernelspecMetadata;\n}\n\nexport interface Kernelspecs {\n  [name: string]: KernelspecInfo;\n}\n\nexport interface LanguageInfoMetadata {\n  name: string;\n  codemirror_mode?: string | Immutable.Map<string, any> | object;\n  file_extension?: string;\n  mimetype?: string;\n  pygments_lexer?: string;\n}\n\nexport interface NotebookMetadata {\n  kernelspec: KernelspecMetadata;\n  language_info: LanguageInfoMetadata;\n  // NOTE: We're not currently using orig_nbformat in nteract. Based on the comment\n  // in the schema, we won't:\n  //\n  //   > Original notebook format (major number) before converting the notebook between versions. This should never be written to a file\n  //\n  //   from https://github.com/jupyter/nbformat/blob/62d6eb8803616d198eaa2024604d1fe923f2a7b3/nbformat/v4/nbformat.v4.schema.json#L58-L61\n  //\n  // It seems like an intermediate/in-memory representation that bled its way into the spec, when it should have been\n  // handled as separate state.\n  //\n  // orig_nbformat?: number,\n}\n\nexport interface PagePayloadMessage {\n  source: \"page\";\n  data: MediaBundle;\n  start: number;\n}\n\nexport interface SetNextInputPayloadMessage {\n  source: \"set_next_input\";\n  text: string;\n  replace: boolean;\n}\n\nexport interface EditPayloadMessage {\n  source: \"edit\";\n  filename: string;\n  line_number: number;\n}\n\nexport interface AskExitPayloadMessage {\n  source: \"ask_exit\";\n  keepkernel: boolean;\n}\n\nexport type PayloadMessage =\n  | PagePayloadMessage\n  | SetNextInputPayloadMessage\n  | EditPayloadMessage\n  | AskExitPayloadMessage;\n\nexport interface CommsRecordProps {\n  targets: Immutable.Map<any, any>;\n  info: Immutable.Map<any, any>;\n  models: Immutable.Map<any, any>;\n}\n\nexport type CommsRecord = Immutable.RecordOf<CommsRecordProps>;\n\nexport const makeCommsRecord = Immutable.Record<CommsRecordProps>({\n  targets: Immutable.Map(),\n  info: Immutable.Map(),\n  models: Immutable.Map()\n});\n\n// Pull version from our package.json\nconst version: string = require(\"../package.json\").version;\n\nexport type ConfigState = Immutable.Map<string, any>;\n\nexport interface StateRecordProps {\n  kernelRef: KernelRef | null;\n  currentKernelspecsRef?: KernelspecsRef | null;\n  entities: Immutable.RecordOf<EntitiesRecordProps>;\n}\n\nexport const makeStateRecord = Immutable.Record<StateRecordProps>({\n  kernelRef: null,\n  currentKernelspecsRef: null,\n  entities: makeEntitiesRecord()\n});\nexport type CoreRecord = Immutable.RecordOf<StateRecordProps>;\n\nexport interface AppRecordProps {\n  host: HostRecord;\n  githubToken?: string | null;\n  notificationSystem: {\n    addNotification: (msg: Notification) => void;\n  };\n  isSaving: boolean;\n  lastSaved?: Date | null;\n  configLastSaved?: Date | null;\n  error: any;\n  // The version number should be provided by an app on boot\n  version: string;\n}\n\nexport const makeAppRecord = Immutable.Record<AppRecordProps>({\n  host: makeEmptyHostRecord(),\n  githubToken: null,\n  notificationSystem: {\n    addNotification: (msg: Notification) => {\n      let logger = console.log.bind(console);\n      switch (msg.level) {\n        case \"error\":\n          logger = console.error.bind(console);\n          break;\n        case \"warning\":\n          logger = console.warn.bind(console);\n          break;\n      }\n      logger(msg);\n    }\n  },\n  isSaving: false,\n  lastSaved: null,\n  configLastSaved: null,\n  error: null,\n  // set the default version to @nteract/core's version\n  version: `@nteract/core@${version}`\n});\n\nexport type AppRecord = Immutable.RecordOf<AppRecordProps>;\n\nexport interface AppState {\n  app: AppRecord;\n  comms: CommsRecord;\n  config: ConfigState;\n  core: CoreRecord;\n}\n\nexport type AppStateRecord = Immutable.RecordOf<AppState>;\n\nexport const makeAppStateRecord = Immutable.Record<AppState>({\n  app: makeAppRecord(),\n  comms: makeCommsRecord(),\n  config: Immutable.Map<string, any>(),\n  core: makeStateRecord()\n});\n","/**\n * @module epics\n */\nimport { ImmutableNotebook } from \"@nteract/commutable\";\nimport {\n  Channels,\n  childOf,\n  createMessage,\n  JupyterMessage,\n  ofMessageType\n} from \"@nteract/messaging\";\nimport { ActionsObservable, ofType } from \"redux-observable\";\nimport { empty, merge, Observable, Observer, of } from \"rxjs\";\nimport {\n  catchError,\n  concatMap,\n  filter,\n  first,\n  map,\n  mergeMap,\n  switchMap,\n  take,\n  timeout\n} from \"rxjs/operators\";\n\nimport * as actions from \"@nteract/actions\";\nimport * as selectors from \"@nteract/selectors\";\nimport { ContentRef, KernelRef } from \"@nteract/types\";\nimport { createKernelRef } from \"@nteract/types\";\nimport { AppState, KernelInfo } from \"@nteract/types\";\n\nconst path = require(\"path\");\n\n/**\n * Sets the execution state after a kernel has been launched.\n *\n * @oaram  {ActionObservable}  action$ ActionObservable for LAUNCH_KERNEL_SUCCESSFUL action\n */\nexport const watchExecutionStateEpic = (\n  action$: ActionsObservable<actions.NewKernelAction>\n) =>\n  action$.pipe(\n    ofType(actions.LAUNCH_KERNEL_SUCCESSFUL),\n    switchMap((action: actions.NewKernelAction) =>\n      action.payload.kernel.channels.pipe(\n        filter((msg: JupyterMessage) => msg.header.msg_type === \"status\"),\n        map((msg: JupyterMessage) =>\n          actions.setExecutionState({\n            kernelStatus: msg.content.execution_state,\n            kernelRef: action.payload.kernelRef\n          })\n        )\n      )\n    )\n  );\n\n/**\n * Send a kernel_info_request to the kernel.\n *\n * @param  {Object}  channels  A object containing the kernel channels\n * @returns  {Observable}  The reply from the server\n */\nexport function acquireKernelInfo(\n  channels: Channels,\n  kernelRef: KernelRef,\n  contentRef: ContentRef\n) {\n  const message = createMessage(\"kernel_info_request\");\n\n  const obs = channels.pipe(\n    childOf(message),\n    ofMessageType(\"kernel_info_reply\"),\n    first(),\n    mergeMap(msg => {\n      const c = msg.content;\n      const l = c.language_info;\n\n      const info: KernelInfo = {\n        protocolVersion: c.protocol_version,\n        implementation: c.implementation,\n        implementationVersion: c.implementation_version,\n        banner: c.banner,\n        helpLinks: c.help_links,\n        languageName: l.name,\n        languageVersion: l.version,\n        mimetype: l.mimetype,\n        fileExtension: l.file_extension,\n        pygmentsLexer: l.pygments_lexer,\n        codemirrorMode: l.codemirror_mode,\n        nbconvertExporter: l.nbconvert_exporter\n      };\n\n      let result;\n      if (!c.protocol_version.startsWith(\"5\")) {\n        result = [\n          actions.launchKernelFailed({\n            kernelRef,\n            contentRef,\n            error: new Error(\n              \"The kernel that you are attempting to launch does not support the latest version (v5) of the messaging protocol.\"\n            )\n          })\n        ];\n      } else {\n        result = [\n          // The original action we were using\n          actions.setLanguageInfo({\n            langInfo: msg.content.language_info,\n            kernelRef,\n            contentRef\n          }),\n          actions.setKernelInfo({\n            kernelRef,\n            info\n          })\n        ];\n      }\n\n      return of(...result);\n    })\n  );\n\n  return Observable.create((observer: Observer<any>) => {\n    const subscription = obs.subscribe(observer);\n    channels.next(message);\n    return subscription;\n  });\n}\n\n/**\n * Gets information about newly launched kernel.\n *\n * @param  {ActionObservable}  The action type\n */\nexport const acquireKernelInfoEpic = (\n  action$: ActionsObservable<actions.NewKernelAction>\n) =>\n  action$.pipe(\n    ofType(actions.LAUNCH_KERNEL_SUCCESSFUL),\n    switchMap((action: actions.NewKernelAction) => {\n      const {\n        payload: {\n          kernel: { channels },\n          kernelRef,\n          contentRef\n        }\n      } = action;\n      return acquireKernelInfo(channels, kernelRef, contentRef);\n    })\n  );\n\nexport const extractNewKernel = (\n  filepath: string | null,\n  notebook: ImmutableNotebook\n) => {\n  const cwd = (filepath && path.dirname(filepath)) || \"/\";\n\n  const kernelSpecName =\n    notebook.getIn([\"metadata\", \"kernelspec\", \"name\"]) ||\n    notebook.getIn([\"metadata\", \"language_info\", \"name\"]) ||\n    \"python3\";\n\n  return {\n    cwd,\n    kernelSpecName\n  };\n};\n\n/**\n * NOTE: This function is _exactly_ the same as the desktop loading.js version\n *       with one strong exception -- extractNewKernel\n *       Can they be combined without incurring a penalty on the web app?\n *       The native functions used are `path.dirname`, `path.resolve`, and `process.cwd()`\n *       We could always inject those dependencies separately...\n */\nexport const launchKernelWhenNotebookSetEpic = (\n  action$: ActionsObservable<actions.FetchContentFulfilled>,\n  state$: any\n) =>\n  action$.pipe(\n    ofType(actions.FETCH_CONTENT_FULFILLED),\n    mergeMap((action: actions.FetchContentFulfilled) => {\n      const state: AppState = state$.value;\n\n      const contentRef = action.payload.contentRef;\n\n      const content = selectors.content(state, { contentRef });\n\n      if (\n        !content ||\n        content.type !== \"notebook\" ||\n        content.model.type !== \"notebook\"\n      ) {\n        // This epic only handles notebook content\n        return empty();\n      }\n\n      const filepath = content.filepath;\n      const notebook = content.model.notebook;\n\n      const { cwd, kernelSpecName } = extractNewKernel(filepath, notebook);\n\n      return of(\n        actions.launchKernelByName({\n          kernelSpecName,\n          cwd,\n          kernelRef: action.payload.kernelRef,\n          selectNextKernel: true,\n          contentRef: action.payload.contentRef\n        })\n      );\n    })\n  );\n\nexport const restartKernelEpic = (\n  action$: ActionsObservable<actions.RestartKernel | actions.NewKernelAction>,\n  state$: any,\n  kernelRefGenerator: () => KernelRef = createKernelRef\n) =>\n  action$.pipe(\n    ofType(actions.RESTART_KERNEL),\n    concatMap((action: actions.RestartKernel | actions.NewKernelAction) => {\n      const state = state$.value;\n      const oldKernelRef = action.payload.kernelRef;\n      const notificationSystem = selectors.notificationSystem(state);\n\n      if (!oldKernelRef) {\n        notificationSystem.addNotification({\n          title: \"Failure to Restart\",\n          message: \"Unable to restart kernel, please select a new kernel.\",\n          dismissible: true,\n          position: \"tr\",\n          level: \"error\"\n        });\n        return empty();\n      }\n\n      const oldKernel = selectors.kernel(state, { kernelRef: oldKernelRef });\n\n      if (!oldKernelRef || !oldKernel) {\n        notificationSystem.addNotification({\n          title: \"Failure to Restart\",\n          message: \"Unable to restart kernel, please select a new kernel.\",\n          dismissible: true,\n          position: \"tr\",\n          level: \"error\"\n        });\n\n        // TODO: Wow do we need to send notifications through our store for\n        // consistency\n        return empty();\n      }\n\n      const newKernelRef = kernelRefGenerator();\n      const initiatingContentRef = action.payload.contentRef;\n\n      // TODO: Incorporate this into each of the launchKernelByName\n      //       actions...\n      //       This only mirrors the old behavior of restart kernel (for now)\n      notificationSystem.addNotification({\n        title: \"Kernel Restarting...\",\n        message: `Kernel ${oldKernel.kernelSpecName ||\n          \"unknown\"} is restarting.`,\n        dismissible: true,\n        position: \"tr\",\n        level: \"success\"\n      });\n\n      const kill = actions.killKernel({\n        restarting: true,\n        kernelRef: oldKernelRef\n      });\n\n      const relaunch = actions.launchKernelByName({\n        kernelSpecName: oldKernel.kernelSpecName,\n        cwd: oldKernel.cwd,\n        kernelRef: newKernelRef,\n        selectNextKernel: true,\n        contentRef: initiatingContentRef\n      });\n\n      const awaitKernelReady = action$.pipe(\n        ofType(actions.LAUNCH_KERNEL_SUCCESSFUL),\n        filter(\n          (action: actions.NewKernelAction | actions.RestartKernel) =>\n            action.payload.kernelRef === newKernelRef\n        ),\n        take(1),\n        timeout(60000), // If kernel doesn't come up within this interval we will abort follow-on actions.\n        concatMap(() => {\n          const restartSuccess = actions.restartKernelSuccessful({\n            kernelRef: newKernelRef,\n            contentRef: initiatingContentRef\n          });\n\n          if (\n            (action as actions.RestartKernel).payload.outputHandling ===\n            \"Run All\"\n          ) {\n            return of(\n              restartSuccess,\n              actions.executeAllCells({ contentRef: initiatingContentRef })\n            );\n          } else {\n            return of(restartSuccess);\n          }\n        }),\n        catchError(error => {\n          return of(\n            actions.restartKernelFailed({\n              error,\n              kernelRef: newKernelRef,\n              contentRef: initiatingContentRef\n            })\n          );\n        })\n      );\n\n      return merge(of(kill, relaunch), awaitKernelReady);\n    })\n  );\n","/**\n * @module epics\n */\nimport { ofType } from \"redux-observable\";\nimport { ActionsObservable } from \"redux-observable\";\nimport { kernelspecs, ServerConfig } from \"rx-jupyter\";\nimport { empty, of } from \"rxjs\";\nimport { catchError, map, mergeMap } from \"rxjs/operators\";\n\nimport * as actions from \"@nteract/actions\";\nimport * as selectors from \"@nteract/selectors\";\nimport { KernelspecProps } from \"@nteract/types\";\n\nexport const fetchKernelspecsEpic = (\n  action$: ActionsObservable<actions.FetchKernelspecs>,\n  state$: any\n) =>\n  action$.pipe(\n    ofType(actions.FETCH_KERNELSPECS),\n    mergeMap((action: actions.FetchKernelspecs) => {\n      const {\n        payload: { hostRef, kernelspecsRef }\n      } = action;\n      const state = state$.value;\n\n      const host = selectors.currentHost(state);\n      if (host.type !== \"jupyter\") {\n        // Dismiss any usage that isn't targeting a jupyter server\n        return empty();\n      }\n      const serverConfig: ServerConfig = selectors.serverConfig(host);\n\n      return kernelspecs.list(serverConfig).pipe(\n        map(data => {\n          const defaultKernelName = data.response.default;\n          const kernelspecs: { [key: string]: KernelspecProps } = {};\n          Object.keys(data.response.kernelspecs).forEach(key => {\n            const value = data.response.kernelspecs[key];\n            kernelspecs[key] = {\n              name: value.name,\n              resources: value.resources,\n              argv: value.spec.argv,\n              displayName: value.spec.display_name,\n              env: value.spec.env,\n              interruptMode: value.spec.interrupt_mode,\n              language: value.spec.language,\n              metadata: value.spec.metadata\n            };\n          });\n          return actions.fetchKernelspecsFulfilled({\n            hostRef,\n            kernelspecsRef,\n            defaultKernelName,\n            kernelspecs\n          });\n        }),\n        catchError(error => {\n          return of(actions.fetchKernelspecsFailed({ kernelspecsRef, error }));\n        })\n      );\n    })\n  );\n","/**\n * @module epics\n */\nimport { kernelInfoRequest } from \"@nteract/messaging\";\nimport { ofType } from \"redux-observable\";\nimport { ActionsObservable, StateObservable } from \"redux-observable\";\nimport { kernels, ServerConfig, sessions } from \"rx-jupyter\";\nimport { empty, of } from \"rxjs\";\nimport {\n  catchError,\n  concatMap,\n  filter,\n  map,\n  mergeMap,\n  switchMap\n} from \"rxjs/operators\";\n\nimport * as actions from \"@nteract/actions\";\nimport * as selectors from \"@nteract/selectors\";\nimport { castToSessionId } from \"@nteract/types\";\nimport { createKernelRef } from \"@nteract/types\";\nimport { AppState } from \"@nteract/types\";\nimport { RemoteKernelProps } from \"@nteract/types\";\n\nimport { extractNewKernel } from \"./kernel-lifecycle\";\n\nexport const launchWebSocketKernelEpic = (\n  action$: ActionsObservable<actions.LaunchKernelByNameAction>,\n  state$: StateObservable<AppState>\n) =>\n  action$.pipe(\n    ofType(actions.LAUNCH_KERNEL_BY_NAME),\n    // Only accept jupyter servers for the host with this epic\n    filter(() => selectors.isCurrentHostJupyter(state$.value)),\n    // TODO: When a switchMap happens, we need to close down the originating\n    // kernel, likely by sending a different action. Right now this gets\n    // coordinated in a different way.\n    switchMap((action: actions.LaunchKernelByNameAction) => {\n      const state = state$.value;\n      const host = selectors.currentHost(state);\n      if (host.type !== \"jupyter\") {\n        // Dismiss any usage that isn't targeting a jupyter server\n        return empty();\n      }\n      const serverConfig: ServerConfig = selectors.serverConfig(host);\n\n      const {\n        payload: { kernelSpecName, cwd, kernelRef, contentRef }\n      } = action;\n\n      const content = selectors.content(state, { contentRef });\n      if (!content || content.type !== \"notebook\") {\n        return empty();\n      }\n\n      // TODO: Create a START_SESSION action instead (?)\n      const sessionPayload = {\n        kernel: {\n          id: null,\n          name: kernelSpecName\n        },\n        name: \"\",\n        // TODO: Figure where the leading slash comes from in the content store\n        path: content.filepath.replace(/^\\/+/g, \"\"),\n        type: \"notebook\"\n      };\n\n      // TODO: Handle failure cases here\n      return sessions.create(serverConfig, sessionPayload).pipe(\n        mergeMap(data => {\n          const session = data.response;\n\n          const sessionId = castToSessionId(session.id);\n\n          const kernel: RemoteKernelProps = Object.assign({}, session.kernel, {\n            type: \"websocket\",\n            info: null,\n            sessionId,\n            cwd,\n            channels: kernels.connect(\n              serverConfig,\n              session.kernel.id,\n              sessionId\n            ),\n            kernelSpecName\n          });\n\n          kernel.channels.next(kernelInfoRequest());\n\n          return of(\n            actions.launchKernelSuccessful({\n              kernel,\n              kernelRef,\n              contentRef: action.payload.contentRef,\n              selectNextKernel: true\n            })\n          );\n        }),\n        catchError(error => {\n          return of(actions.launchKernelFailed({ error }));\n        })\n      );\n    })\n  );\n\nexport const changeWebSocketKernelEpic = (\n  action$: ActionsObservable<actions.ChangeKernelByName>,\n  state$: StateObservable<AppState>\n) =>\n  action$.pipe(\n    ofType(actions.CHANGE_KERNEL_BY_NAME),\n    // Only accept jupyter servers for the host with this epic\n    filter(() => selectors.isCurrentHostJupyter(state$.value)),\n    // TODO: When a switchMap happens, we need to close down the originating\n    // kernel, likely by sending a different action. Right now this gets\n    // coordinated in a different way.\n    switchMap((action: actions.ChangeKernelByName) => {\n      const {\n        payload: { contentRef, oldKernelRef, kernelSpecName }\n      } = action;\n      const state = state$.value;\n      const host = selectors.currentHost(state);\n      if (host.type !== \"jupyter\") {\n        // Dismiss any usage that isn't targeting a jupyter server\n        return empty();\n      }\n      const serverConfig: ServerConfig = selectors.serverConfig(host);\n\n      // TODO: This is the case where we didn't have a kernel before\n      //       and they chose to switch kernels. Instead we need to allow\n      //       \"switching\" by disregarding the previous kernel and creating a\n      //       new session\n      if (!oldKernelRef) {\n        return empty();\n      }\n\n      const oldKernel = selectors.kernel(state, { kernelRef: oldKernelRef });\n      if (!oldKernel || oldKernel.type !== \"websocket\") {\n        return empty();\n      }\n      const { sessionId } = oldKernel;\n      if (!sessionId) {\n        return empty();\n      }\n\n      const content = selectors.content(state, { contentRef });\n      if (!content || content.type !== \"notebook\") {\n        return empty();\n      }\n      const {\n        filepath,\n        model: { notebook }\n      } = content;\n      const { cwd } = extractNewKernel(filepath, notebook);\n\n      const kernelRef = createKernelRef();\n      return kernels.start(serverConfig, kernelSpecName, cwd).pipe(\n        mergeMap(({ response }) => {\n          const { id: kernelId } = response;\n          const sessionPayload = {\n            kernel: { id: kernelId, name: kernelSpecName }\n          };\n          // The sessions API will close down the old kernel for us if it is\n          // on this session\n          return sessions.update(serverConfig, sessionId, sessionPayload).pipe(\n            mergeMap(({ response: session }) => {\n              const kernel: RemoteKernelProps = Object.assign(\n                {},\n                session.kernel,\n                {\n                  type: \"websocket\",\n                  sessionId,\n                  cwd,\n                  channels: kernels.connect(\n                    serverConfig,\n                    session.kernel.id,\n                    sessionId\n                  ),\n                  kernelSpecName\n                }\n              );\n              return of(\n                actions.launchKernelSuccessful({\n                  kernel,\n                  kernelRef,\n                  contentRef: action.payload.contentRef,\n                  selectNextKernel: true\n                })\n              );\n            }),\n            catchError(error =>\n              of(actions.launchKernelFailed({ error, kernelRef, contentRef }))\n            )\n          );\n        }),\n        catchError(error =>\n          of(actions.launchKernelFailed({ error, kernelRef, contentRef }))\n        )\n      );\n    })\n  );\n\nexport const interruptKernelEpic = (\n  action$: ActionsObservable<actions.InterruptKernel>,\n  state$: StateObservable<AppState>\n) =>\n  action$.pipe(\n    ofType(actions.INTERRUPT_KERNEL),\n    // This epic can only interrupt kernels on jupyter websockets\n    filter(() => selectors.isCurrentHostJupyter(state$.value)),\n    // If the user fires off _more_ interrupts, we shouldn't interrupt the in-flight\n    // interrupt, instead doing it after the last one happens\n    concatMap((action: actions.InterruptKernel) => {\n      const state = state$.value;\n\n      const host = selectors.currentHost(state);\n      if (host.type !== \"jupyter\") {\n        // Dismiss any usage that isn't targeting a jupyter server\n        return empty();\n      }\n      const serverConfig: ServerConfig = selectors.serverConfig(host);\n\n      const kernel = selectors.currentKernel(state);\n      if (!kernel) {\n        return of(\n          actions.interruptKernelFailed({\n            error: new Error(\"Can't interrupt a kernel we don't have\"),\n            kernelRef: action.payload.kernelRef\n          })\n        );\n      }\n\n      if (kernel.type !== \"websocket\" || !kernel.id) {\n        return of(\n          actions.interruptKernelFailed({\n            error: new Error(\"Invalid kernel type for interrupting\"),\n            kernelRef: action.payload.kernelRef\n          })\n        );\n      }\n\n      const id = kernel.id;\n\n      return kernels.interrupt(serverConfig, id).pipe(\n        map(() =>\n          actions.interruptKernelSuccessful({\n            kernelRef: action.payload.kernelRef\n          })\n        ),\n        catchError(err =>\n          of(\n            actions.interruptKernelFailed({\n              error: err,\n              kernelRef: action.payload.kernelRef\n            })\n          )\n        )\n      );\n    })\n  );\n\n// NB: This epic kills the *current* kernel. ZMQ killKernelEpic kills a *specified* kernel.\nexport const killKernelEpic = (\n  action$: ActionsObservable<actions.KillKernelAction>,\n  state$: StateObservable<AppState>\n) =>\n  // TODO: Use the sessions API for this\n  action$.pipe(\n    ofType(actions.KILL_KERNEL),\n    // This epic can only interrupt kernels on jupyter websockets\n    filter(() => selectors.isCurrentHostJupyter(state$.value)),\n    // If the user fires off _more_ kills, we shouldn't interrupt the in-flight\n    // kill, instead doing it after the last one happens\n    concatMap((action: actions.KillKernelAction) => {\n      const state = state$.value;\n\n      const host = selectors.currentHost(state);\n      if (host.type !== \"jupyter\") {\n        // Dismiss any usage that isn't targeting a jupyter server\n        return empty();\n      }\n      const serverConfig: ServerConfig = selectors.serverConfig(host);\n\n      const kernel = selectors.currentKernel(state);\n      if (!kernel) {\n        return of(\n          actions.killKernelFailed({\n            error: new Error(\"kernel not available for killing\"),\n            kernelRef: action.payload.kernelRef\n          })\n        );\n      }\n\n      if (kernel.type !== \"websocket\" || !kernel.id || !kernel.sessionId) {\n        return of(\n          actions.killKernelFailed({\n            error: new Error(\n              \"websocket kernel epic can only kill websocket kernels with an id\"\n            ),\n            kernelRef: action.payload.kernelRef\n          })\n        );\n      }\n\n      // TODO: If this was a kernel language change, we shouldn't be using this\n      //       kill kernel epic because we need to make sure that creation happens\n      //       after deletion\n      return sessions.destroy(serverConfig, kernel.sessionId).pipe(\n        map(() =>\n          actions.killKernelSuccessful({\n            kernelRef: action.payload.kernelRef\n          })\n        ),\n        catchError(err =>\n          of(\n            actions.killKernelFailed({\n              error: err,\n              kernelRef: action.payload.kernelRef\n            })\n          )\n        )\n      );\n    })\n  );\n","/**\n * @module types\n */\nexport type HostId = string;\nexport type KernelId = string;\nexport type SessionId = string;\n\nexport const castToHostId = (id: string): HostId => id;\nexport const castToKernelId = (id: string): KernelId => id;\nexport const castToSessionId = (id: string): SessionId => id;\n","/**\n * @module epics\n */\nimport { commListenEpic } from \"./comm\";\nimport {\n  autoSaveCurrentContentEpic,\n  fetchContentEpic,\n  saveContentEpic,\n  updateContentEpic\n} from \"./contents\";\nimport {\n  executeAllCellsEpic,\n  executeCellEpic,\n  updateDisplayEpic\n} from \"./execute\";\nimport {\n  acquireKernelInfoEpic,\n  launchKernelWhenNotebookSetEpic,\n  restartKernelEpic,\n  watchExecutionStateEpic\n} from \"./kernel-lifecycle\";\nimport { fetchKernelspecsEpic } from \"./kernelspecs\";\nimport {\n  changeWebSocketKernelEpic,\n  interruptKernelEpic,\n  killKernelEpic,\n  launchWebSocketKernelEpic\n} from \"./websocket-kernel\";\n\n// Because `@nteract/core` ends up being a commonjs import, we can't currently\n// rely on `import { epics } from \"\"@nteract/core\"`\n// as it would collide the array with the named exports\nconst allEpics = [\n  executeCellEpic,\n  updateDisplayEpic,\n  executeAllCellsEpic,\n  commListenEpic,\n  launchWebSocketKernelEpic,\n  changeWebSocketKernelEpic,\n  interruptKernelEpic,\n  killKernelEpic,\n  acquireKernelInfoEpic,\n  watchExecutionStateEpic,\n  launchKernelWhenNotebookSetEpic,\n  restartKernelEpic,\n  fetchKernelspecsEpic,\n  fetchContentEpic,\n  updateContentEpic,\n  saveContentEpic,\n  autoSaveCurrentContentEpic\n];\n\nexport {\n  allEpics,\n  executeCellEpic,\n  updateDisplayEpic,\n  executeAllCellsEpic,\n  commListenEpic,\n  launchWebSocketKernelEpic,\n  changeWebSocketKernelEpic,\n  interruptKernelEpic,\n  killKernelEpic,\n  acquireKernelInfoEpic,\n  watchExecutionStateEpic,\n  launchKernelWhenNotebookSetEpic,\n  restartKernelEpic,\n  fetchKernelspecsEpic,\n  fetchContentEpic,\n  updateContentEpic,\n  saveContentEpic,\n  autoSaveCurrentContentEpic\n};\n","// Vendor modules\nimport * as actions from \"@nteract/actions\";\nimport {\n  Save,\n  SaveFailed,\n  SaveFulfilled,\n  SetAppHostAction,\n  SetGithubTokenAction,\n  SetNotificationSystemAction\n} from \"@nteract/actions\";\nimport { AppRecord, AppRecordProps, makeAppRecord } from \"@nteract/types\";\nimport { RecordOf } from \"immutable\";\n\nfunction setGithubToken(\n  state: AppRecord,\n  action: SetGithubTokenAction\n): RecordOf<AppRecordProps> {\n  return state.set(\"githubToken\", action.payload.githubToken);\n}\n\nfunction save(state: AppRecord): RecordOf<AppRecordProps> {\n  return state.set(\"isSaving\", true);\n}\n\nfunction saveFailed(state: AppRecord): RecordOf<AppRecordProps> {\n  return state.set(\"isSaving\", false);\n}\n\nfunction saveFulfilled(state: AppRecord): RecordOf<AppRecordProps> {\n  return state.set(\"isSaving\", false).set(\"lastSaved\", new Date());\n}\n\nfunction setNotificationsSystem(\n  state: AppRecord,\n  action: SetNotificationSystemAction\n): RecordOf<AppRecordProps> {\n  if (!action.payload || !action.payload.notificationSystem) {\n    return state;\n  }\n  return state.set(\"notificationSystem\", action.payload.notificationSystem);\n}\n\nfunction setAppHost(\n  state: AppRecord,\n  action: SetAppHostAction\n): RecordOf<AppRecordProps> {\n  return state.set(\"host\", action.payload);\n}\n\nexport default function handleApp(\n  state: AppRecord = makeAppRecord(),\n  action:\n    | SetNotificationSystemAction\n    | SetGithubTokenAction\n    | Save\n    | SaveFulfilled\n    | SaveFailed\n    | SetAppHostAction\n): RecordOf<AppRecordProps> {\n  switch (action.type) {\n    case actions.SAVE:\n      return save(state);\n    case actions.SAVE_FAILED:\n      return saveFailed(state);\n    case actions.SAVE_FULFILLED:\n      return saveFulfilled(state);\n    case actions.SET_NOTIFICATION_SYSTEM:\n      return setNotificationsSystem(state, action);\n    case actions.SET_GITHUB_TOKEN:\n      return setGithubToken(state, action);\n    case actions.SET_APP_HOST:\n      return setAppHost(state, action);\n    default:\n      return state;\n  }\n}\n","// Vendor modules\nimport {\n  CommMessageAction,\n  CommOpenAction,\n  RegisterCommTargetAction\n} from \"@nteract/actions\";\nimport { CommsRecord, makeCommsRecord } from \"@nteract/types\";\nimport { fromJS } from \"immutable\";\n\nfunction registerCommTarget(\n  state: CommsRecord,\n  action: RegisterCommTargetAction\n): CommsRecord {\n  return state.setIn([\"targets\", action.name], action.handler);\n}\n\nfunction processCommOpen(\n  state: CommsRecord,\n  action: CommOpenAction\n): CommsRecord {\n  const { target_name, target_module, data, comm_id } = action;\n\n  const commInfo = {\n    target_module,\n    target_name\n  };\n\n  return state\n    .setIn([\"info\", comm_id], fromJS(commInfo))\n    .setIn([\"models\", comm_id], fromJS(data));\n}\n\nfunction processCommMessage(\n  state: CommsRecord,\n  action: CommMessageAction\n): CommsRecord {\n  const { data, comm_id } = action;\n\n  const commInfo = state.getIn([\"info\", comm_id]);\n  if (\n    commInfo &&\n    commInfo.get(\"target_module\") === \"reducers\" &&\n    commInfo.get(\"target_name\") === \"setIn\"\n  ) {\n    const path: Array<string | number> = data.path;\n    const value = fromJS(data.value);\n\n    // set `value` into `path` of the model data\n    return state.updateIn([\"models\", comm_id], model =>\n      model.setIn(path, value)\n    );\n  }\n\n  // Default to overwrite / replace for now\n  return state.setIn([\"models\", comm_id], fromJS(data));\n}\n\ntype CommAction = RegisterCommTargetAction | CommMessageAction | CommOpenAction;\n\nexport default function(\n  state: CommsRecord = makeCommsRecord(),\n  action: CommAction\n): CommsRecord {\n  switch (action.type) {\n    case \"REGISTER_COMM_TARGET\":\n      return registerCommTarget(state, action);\n    case \"COMM_OPEN\":\n      return processCommOpen(state, action);\n    case \"COMM_MESSAGE\":\n      return processCommMessage(state, action);\n    default:\n      return state;\n  }\n}\n","// Vendor modules\nimport { MergeConfigAction, SetConfigAction } from \"@nteract/actions\";\nimport { ConfigState } from \"@nteract/types\";\nimport { Map } from \"immutable\";\n\ntype ConfigAction = SetConfigAction<any> | MergeConfigAction;\n\nexport function setConfigAtKey(\n  state: ConfigState,\n  action: SetConfigAction<any>\n): Map<string, any> {\n  const { key, value } = action.payload;\n  return state.set(key, value);\n}\n\nexport function mergeConfig(\n  state: ConfigState,\n  action: MergeConfigAction\n): Map<string, any> {\n  const { config } = action.payload;\n  return state.merge(config);\n}\n\nexport default function handleConfig(\n  state: ConfigState = Map(),\n  action: ConfigAction\n): Map<string, any> {\n  switch (action.type) {\n    case \"SET_CONFIG_AT_KEY\":\n      return setConfigAtKey(state, action);\n    case \"MERGE_CONFIG\":\n      return mergeConfig(state, action);\n    default:\n      return state;\n  }\n}\n","// Vendor modules\nimport * as actionTypes from \"@nteract/actions\";\nimport {\n  CellId,\n  createFrozenMediaBundle,\n  createImmutableOutput,\n  deleteCell,\n  emptyCodeCell,\n  emptyMarkdownCell,\n  emptyNotebook,\n  ImmutableCell,\n  ImmutableCodeCell,\n  ImmutableMarkdownCell,\n  ImmutableNotebook,\n  ImmutableOutput,\n  insertCellAfter,\n  insertCellAt,\n  makeCodeCell,\n  makeMarkdownCell,\n  makeRawCell,\n  OnDiskDisplayData,\n  OnDiskExecuteResult,\n  OnDiskOutput,\n  OnDiskStreamOutput\n} from \"@nteract/commutable\";\nimport {\n  DocumentRecordProps,\n  makeDocumentRecord,\n  NotebookModel,\n  PayloadMessage\n} from \"@nteract/types\";\nimport { escapeCarriageReturnSafe } from \"escape-carriage\";\nimport { fromJS, List, Map, RecordOf, Set } from \"immutable\";\nimport { has } from \"lodash\";\nimport uuid from \"uuid/v4\";\n\ntype KeyPath = List<string | number>;\ntype KeyPaths = List<KeyPath>;\n\n/**\n * An output can be a stream of data that does not arrive at a single time. This\n * function handles the different types of outputs and accumulates the data\n * into a reduced output.\n *\n * @param {Object} outputs - Kernel output messages\n * @param {Object} output - Outputted to be reduced into list of outputs\n * @return {List<Object>} updated-outputs - Outputs + Output\n */\nexport function reduceOutputs(\n  outputs: List<ImmutableOutput> = List(),\n  output: OnDiskOutput\n): List<ImmutableOutput> {\n  // Find the last output to see if it's a stream type\n  // If we don't find one, default to null\n  const last = outputs.last(null);\n\n  if (!last || !last.output_type) {\n    return outputs.push(createImmutableOutput(output));\n  }\n\n  if (output.output_type !== \"stream\" || last.output_type !== \"stream\") {\n    // If the last output type or the incoming output type isn't a stream\n    // we just add it to the outputs\n    // This is kind of like a \"break\" between streams if we get error,\n    // display_data, execute_result, etc.\n    return outputs.push(createImmutableOutput(output));\n  }\n\n  const streamOutput: OnDiskStreamOutput = output;\n\n  if (typeof streamOutput.name === \"undefined\") {\n    return outputs.push(createImmutableOutput(streamOutput));\n  }\n\n  function appendText(text: string): string {\n    if (typeof streamOutput.text === \"string\") {\n      return escapeCarriageReturnSafe(text + streamOutput.text);\n    }\n    return text;\n  }\n\n  // Invariant: size > 0, outputs.last() exists\n  if (last.name === streamOutput.name) {\n    return outputs.updateIn([outputs.size - 1, \"text\"], appendText);\n  }\n\n  // Check if there's a separate stream to merge with\n  const nextToLast = outputs.butLast().last(null);\n\n  if (\n    nextToLast &&\n    nextToLast.output_type === \"stream\" &&\n    nextToLast.name === streamOutput.name\n  ) {\n    return outputs.updateIn([outputs.size - 2, \"text\"], appendText);\n  }\n  // If nothing else matched, just append it\n  return outputs.push(createImmutableOutput(streamOutput));\n}\n\nexport function cleanCellTransient(\n  state: NotebookModel,\n  id: string\n): RecordOf<DocumentRecordProps> {\n  // Clear out key paths that should no longer be referenced\n  return state\n    .setIn([\"cellPagers\", id], List())\n    .updateIn(\n      [\"transient\", \"keyPathsForDisplays\"],\n      (kpfd: Map<string, KeyPaths>) =>\n        (kpfd || Map()).map((keyPaths: KeyPaths) =>\n          keyPaths.filter((keyPath: KeyPath) => keyPath.get(2) !== id)\n        )\n    )\n    .setIn([\"transient\", \"cellMap\", id], Map());\n}\n\nfunction setNotebookCheckpoint(\n  state: NotebookModel\n): RecordOf<DocumentRecordProps> {\n  // Use the current version of the notebook document\n  return state.set(\"savedNotebook\", state.get(\"notebook\"));\n}\n\nfunction focusCell(\n  state: NotebookModel,\n  action: actionTypes.FocusCell\n): RecordOf<DocumentRecordProps> {\n  return state.set(\"cellFocused\", action.payload.id);\n}\n\nfunction clearOutputs(\n  state: NotebookModel,\n  action: actionTypes.ClearOutputs\n): RecordOf<DocumentRecordProps> {\n  const id = action.payload.id ? action.payload.id : state.cellFocused;\n  if (!id) {\n    return state;\n  }\n\n  const type = state.getIn([\"notebook\", \"cellMap\", id, \"cell_type\"]);\n\n  const cleanedState = cleanCellTransient(state, id);\n\n  if (type === \"code\") {\n    return cleanedState\n      .setIn([\"notebook\", \"cellMap\", id, \"outputs\"], List())\n      .setIn([\"notebook\", \"cellMap\", id, \"execution_count\"], null);\n  }\n  return cleanedState;\n}\n\nfunction toggleTagInCell(\n  state: NotebookModel,\n  action: actionTypes.ToggleTagInCell\n): RecordOf<DocumentRecordProps> {\n  const { id, tag } = action.payload;\n\n  return state.updateIn(\n    [\"notebook\", \"cellMap\", id, \"metadata\", \"tags\"],\n    tags => {\n      if (tags) {\n        return tags.has(tag) ? tags.remove(tag) : tags.add(tag);\n      } else {\n        return Set([tag]);\n      }\n    }\n  );\n}\n\nfunction clearAllOutputs(\n  state: NotebookModel,\n  action: actionTypes.ClearAllOutputs | actionTypes.RestartKernel\n): RecordOf<DocumentRecordProps> {\n  // If we get a restart kernel action that said to clear outputs, we'll\n  // handle it\n  if (\n    action.type === actionTypes.RESTART_KERNEL &&\n    action.payload.outputHandling !== \"Clear All\"\n  ) {\n    return state;\n  }\n\n  // For every cell, clear the outputs and execution counts\n  const cellMap = state\n    .getIn([\"notebook\", \"cellMap\"])\n    // NOTE: My kingdom for a mergeMap\n    .map((cell: ImmutableCell) => {\n      if ((cell as any).get(\"cell_type\") === \"code\") {\n        return (cell as ImmutableCodeCell).merge({\n          outputs: List(),\n          execution_count: null\n        });\n      }\n      return cell;\n    });\n\n  // Clear all the transient data too\n  const transient = Map({\n    keyPathsForDisplays: Map(),\n    cellMap: cellMap.map(() => Map())\n  });\n\n  return state\n    .setIn([\"notebook\", \"cellMap\"], cellMap)\n    .set(\"transient\", transient);\n}\n\nfunction appendOutput(\n  state: NotebookModel,\n  action: actionTypes.AppendOutput\n): RecordOf<DocumentRecordProps> {\n  const output = action.payload.output;\n  const cellId = action.payload.id;\n\n  /**\n   * If it is not a display_data or execute_result with\n   * a display_id, then treat it as a normal output and don't\n   * add its index to the keyPaths.\n   */\n  if (\n    (output.output_type !== \"execute_result\" &&\n      output.output_type !== \"display_data\") ||\n    !has(output, \"transient.display_id\")\n  ) {\n    return state.updateIn(\n      [\"notebook\", \"cellMap\", cellId, \"outputs\"],\n      (outputs: List<ImmutableOutput>): List<ImmutableOutput> =>\n        reduceOutputs(outputs, output)\n    );\n  }\n\n  // We now have a display_data that includes a transient display_id\n  // output: {\n  //   data: { 'text/html': '<b>woo</b>' }\n  //   metadata: {}\n  //   transient: { display_id: '12312' }\n  // }\n\n  // We now have a display to track\n  let displayID;\n  let typedOutput;\n  if (output.output_type === \"execute_result\") {\n    typedOutput = output as OnDiskExecuteResult;\n  } else {\n    typedOutput = output as OnDiskDisplayData;\n  }\n  displayID = typedOutput.transient!.display_id;\n\n  // Every time we see a display id we're going to capture the keypath\n  // to the output\n\n  // Determine the next output index\n  const outputIndex = state\n    .getIn([\"notebook\", \"cellMap\", cellId, \"outputs\"])\n    .count();\n\n  // Construct the path to the output for updating later\n  const keyPath: KeyPath = List([\n    \"notebook\",\n    \"cellMap\",\n    cellId,\n    \"outputs\",\n    outputIndex\n  ]);\n\n  const keyPaths: KeyPaths = (\n    state\n      // Extract the current list of keypaths for this displayID\n      .getIn([\"transient\", \"keyPathsForDisplays\", displayID]) || List()\n  )\n    // Append our current output's keyPath\n    .push(keyPath);\n\n  const immutableOutput = createImmutableOutput(output);\n\n  // We'll reduce the overall state based on each keypath, updating output\n  return state\n    .updateIn(keyPath, () => immutableOutput)\n    .setIn([\"transient\", \"keyPathsForDisplays\", displayID], keyPaths);\n}\n\nfunction updateDisplay(\n  state: NotebookModel,\n  action: actionTypes.UpdateDisplay\n): RecordOf<DocumentRecordProps> {\n  const { content } = action.payload;\n  if (!(content && content.transient && content.transient.display_id)) {\n    return state;\n  }\n  const displayID = content.transient.display_id;\n\n  const keyPaths: KeyPaths = state.getIn([\n    \"transient\",\n    \"keyPathsForDisplays\",\n    displayID\n  ]);\n\n  const updatedContent = {\n    data: createFrozenMediaBundle(content.data),\n    metadata: fromJS(content.metadata || {})\n  };\n\n  return keyPaths.reduce(\n    (currState: NotebookModel, kp: KeyPath) =>\n      currState.updateIn(kp, output => {\n        return output.merge(updatedContent);\n      }),\n    state\n  );\n}\n\nfunction focusNextCell(\n  state: NotebookModel,\n  action: actionTypes.FocusNextCell\n): RecordOf<DocumentRecordProps> {\n  const cellOrder = state.getIn([\"notebook\", \"cellOrder\"]);\n\n  const id = action.payload.id ? action.payload.id : state.get(\"cellFocused\");\n  // If for some reason we neither have an ID here or a focused cell, we just\n  // keep the state consistent\n  if (!id) {\n    return state;\n  }\n\n  const curIndex = cellOrder.findIndex((foundId: CellId) => id === foundId);\n  const curCellType = state.getIn([\"notebook\", \"cellMap\", id, \"cell_type\"]);\n\n  const nextIndex = curIndex + 1;\n\n  // When at the end, create a new cell\n  if (nextIndex >= cellOrder.size) {\n    if (!action.payload.createCellIfUndefined) {\n      return state;\n    }\n\n    const cellId: string = uuid();\n    const cell = curCellType === \"code\" ? emptyCodeCell : emptyMarkdownCell;\n\n    const notebook: ImmutableNotebook = state.get(\"notebook\");\n\n    return state\n      .set(\"cellFocused\", cellId)\n      .set(\"notebook\", insertCellAt(notebook, cell, cellId, nextIndex));\n  }\n\n  // When in the middle of the notebook document, move to the next cell\n  return state.set(\"cellFocused\", cellOrder.get(nextIndex));\n}\n\nfunction focusPreviousCell(\n  state: NotebookModel,\n  action: actionTypes.FocusPreviousCell\n): RecordOf<DocumentRecordProps> {\n  const cellOrder = state.getIn([\"notebook\", \"cellOrder\"]);\n  const curIndex = cellOrder.findIndex(\n    (id: CellId) => id === action.payload.id\n  );\n  const nextIndex = Math.max(0, curIndex - 1);\n\n  return state.set(\"cellFocused\", cellOrder.get(nextIndex));\n}\n\nfunction focusCellEditor(\n  state: NotebookModel,\n  action: actionTypes.FocusCellEditor\n): RecordOf<DocumentRecordProps> {\n  return state.set(\"editorFocused\", action.payload.id);\n}\n\nfunction focusNextCellEditor(\n  state: NotebookModel,\n  action: actionTypes.FocusNextCellEditor\n): RecordOf<DocumentRecordProps> {\n  const cellOrder: List<CellId> = state.getIn([\"notebook\", \"cellOrder\"]);\n\n  const id = action.payload.id ? action.payload.id : state.get(\"editorFocused\");\n\n  // If for some reason we neither have an ID here or a focused editor, we just\n  // keep the state consistent\n  if (!id) {\n    return state;\n  }\n\n  const curIndex = cellOrder.findIndex((foundId: CellId) => id === foundId);\n  const nextIndex = curIndex + 1;\n\n  return state.set(\"editorFocused\", cellOrder.get(nextIndex));\n}\n\nfunction focusPreviousCellEditor(\n  state: NotebookModel,\n  action: actionTypes.FocusPreviousCellEditor\n): RecordOf<DocumentRecordProps> {\n  const cellOrder: List<CellId> = state.getIn([\"notebook\", \"cellOrder\"]);\n  const curIndex = cellOrder.findIndex(\n    (id: CellId) => id === action.payload.id\n  );\n  const nextIndex = Math.max(0, curIndex - 1);\n\n  return state.set(\"editorFocused\", cellOrder.get(nextIndex));\n}\n\nfunction moveCell(\n  state: NotebookModel,\n  action: actionTypes.MoveCell\n): RecordOf<DocumentRecordProps> {\n  return state.updateIn(\n    [\"notebook\", \"cellOrder\"],\n    (cellOrder: List<CellId>) => {\n      const oldIndex = cellOrder.findIndex(\n        (id: string) => id === action.payload.id\n      );\n      const newIndex =\n        cellOrder.findIndex(\n          (id: string) => id === action.payload.destinationId\n        ) + (action.payload.above ? 0 : 1);\n      if (oldIndex === newIndex) {\n        return cellOrder;\n      }\n      return cellOrder\n        .splice(oldIndex, 1)\n        .splice(newIndex - (oldIndex < newIndex ? 1 : 0), 0, action.payload.id);\n    }\n  );\n}\n\n// DEPRECATION WARNING: The action type RemoveCell is being deprecated. Please use DeleteCell instead\nfunction deleteCellFromState(\n  state: NotebookModel,\n  action: actionTypes.DeleteCell | actionTypes.RemoveCell\n): RecordOf<DocumentRecordProps> {\n  const id = action.payload.id ? action.payload.id : state.cellFocused;\n  if (!id) {\n    return state;\n  }\n  return cleanCellTransient(\n    state.update(\"notebook\", (notebook: ImmutableNotebook) =>\n      deleteCell(notebook, id)\n    ),\n    id\n  );\n}\n\nfunction createCellBelow(\n  state: NotebookModel,\n  action: actionTypes.CreateCellBelow\n): RecordOf<DocumentRecordProps> {\n  const id = action.payload.id ? action.payload.id : state.cellFocused;\n  if (!id) {\n    return state;\n  }\n\n  const { cellType, source } = action.payload;\n  const cell = cellType === \"markdown\" ? emptyMarkdownCell : emptyCodeCell;\n  const cellId = uuid();\n  return state.update(\"notebook\", (notebook: ImmutableNotebook) => {\n    const index = notebook.get(\"cellOrder\", List()).indexOf(id) + 1;\n    return insertCellAt(\n      notebook,\n      (cell as ImmutableMarkdownCell).set(\"source\", source),\n      cellId,\n      index\n    );\n  });\n}\n\nfunction createCellAbove(\n  state: NotebookModel,\n  action: actionTypes.CreateCellAbove\n): RecordOf<DocumentRecordProps> {\n  const id = action.payload.id ? action.payload.id : state.cellFocused;\n  if (!id) {\n    return state;\n  }\n\n  const { cellType } = action.payload;\n  const cell = cellType === \"markdown\" ? emptyMarkdownCell : emptyCodeCell;\n  const cellId = uuid();\n  return state.update(\"notebook\", (notebook: ImmutableNotebook) => {\n    const cellOrder: List<CellId> = notebook.get(\"cellOrder\", List());\n    const index = cellOrder.indexOf(id);\n    return insertCellAt(notebook, cell, cellId, index);\n  });\n}\n\nfunction createCellAfter(\n  state: NotebookModel,\n  action: actionTypes.CreateCellAfter\n): RecordOf<DocumentRecordProps> {\n  console.log(\n    \"DEPRECATION WARNING: This function is being deprecated. Please use createCellBelow() instead\"\n  );\n  const id = action.payload.id ? action.payload.id : state.cellFocused;\n  if (!id) {\n    return state;\n  }\n\n  const { cellType, source } = action.payload;\n  const cell = cellType === \"markdown\" ? emptyMarkdownCell : emptyCodeCell;\n  const cellId = uuid();\n  return state.update(\"notebook\", (notebook: ImmutableNotebook) => {\n    const index = notebook.get(\"cellOrder\", List()).indexOf(id) + 1;\n    return insertCellAt(\n      notebook,\n      (cell as ImmutableMarkdownCell).set(\"source\", source),\n      cellId,\n      index\n    );\n  });\n}\n\nfunction createCellBefore(\n  state: NotebookModel,\n  action: actionTypes.CreateCellBefore\n): RecordOf<DocumentRecordProps> {\n  console.log(\n    \"DEPRECATION WARNING: This function is being deprecated. Please use createCellAbove() instead\"\n  );\n  const id = action.payload.id ? action.payload.id : state.cellFocused;\n  if (!id) {\n    return state;\n  }\n\n  const { cellType } = action.payload;\n  const cell = cellType === \"markdown\" ? emptyMarkdownCell : emptyCodeCell;\n  const cellId = uuid();\n  return state.update(\"notebook\", (notebook: ImmutableNotebook) => {\n    const cellOrder: List<CellId> = notebook.get(\"cellOrder\", List());\n    const index = cellOrder.indexOf(id);\n    return insertCellAt(notebook, cell, cellId, index);\n  });\n}\n\nfunction createCellAppend(\n  state: NotebookModel,\n  action: actionTypes.CreateCellAppend\n): RecordOf<DocumentRecordProps> {\n  const { cellType } = action.payload;\n  const notebook: ImmutableNotebook = state.get(\"notebook\");\n  const cellOrder: List<CellId> = notebook.get(\"cellOrder\", List());\n  const cell: ImmutableCell =\n    cellType === \"markdown\" ? emptyMarkdownCell : emptyCodeCell;\n  const index = cellOrder.count();\n  const cellId = uuid();\n  return state.set(\"notebook\", insertCellAt(notebook, cell, cellId, index));\n}\n\nfunction acceptPayloadMessage(\n  state: NotebookModel,\n  action: actionTypes.AcceptPayloadMessage\n): NotebookModel {\n  const id: string = action.payload.id;\n  const payload: PayloadMessage = action.payload.payload;\n\n  if (payload.source === \"page\") {\n    // append pager\n    return state.updateIn([\"cellPagers\", id], l =>\n      (l || List()).push(payload.data)\n    );\n  } else if (payload.source === \"set_next_input\") {\n    if (payload.replace) {\n      // this payload is sent in IPython when you use %load\n      // and is intended to replace cell source\n      return state.setIn([\"notebook\", \"cellMap\", id, \"source\"], payload.text);\n    } else {\n      // create the next cell\n      // FIXME: This is a weird pattern. We're basically faking a dispatch here\n      // inside a reducer and then appending to the result. I think that both of\n      // these reducers should just handle the original action.\n      return createCellBelow(state, {\n        type: actionTypes.CREATE_CELL_BELOW,\n        payload: {\n          cellType: \"code\",\n          // TODO: is payload.text guaranteed to be defined?\n          source: payload.text || \"\",\n          id,\n          contentRef: action.payload.contentRef\n        }\n      });\n    }\n  }\n  // If the payload is unsupported, just return the current state\n  return state;\n}\n\nfunction sendExecuteRequest(\n  state: NotebookModel,\n  action: actionTypes.SendExecuteRequest\n): RecordOf<DocumentRecordProps> {\n  const id = action.payload.id ? action.payload.id : state.cellFocused;\n  const contentRef = action.payload.contentRef;\n  if (!id) {\n    return state;\n  }\n\n  // TODO: Record the last execute request for this cell\n\n  // * Clear outputs\n  // * Set status to queued, as all we've done is submit the execution request\n  // FIXME: This is a weird pattern. We're basically faking a dispatch here\n  // inside a reducer and then appending to the result. I think that both of\n  // these reducers should just handle the original action.\n  return clearOutputs(state, {\n    type: \"CLEAR_OUTPUTS\",\n    payload: {\n      id,\n      contentRef\n    }\n  }).setIn([\"transient\", \"cellMap\", id, \"status\"], \"queued\");\n}\n\nfunction setInCell(\n  state: NotebookModel,\n  action: actionTypes.SetInCell<string>\n): RecordOf<DocumentRecordProps> {\n  return state.setIn(\n    [\"notebook\", \"cellMap\", action.payload.id].concat(action.payload.path),\n    action.payload.value\n  );\n}\n\nfunction toggleCellOutputVisibility(\n  state: NotebookModel,\n  action: actionTypes.ToggleCellOutputVisibility\n): RecordOf<DocumentRecordProps> {\n  const id = action.payload.id ? action.payload.id : state.cellFocused;\n  if (!id) {\n    return state;\n  }\n\n  return state.setIn(\n    [\"notebook\", \"cellMap\", id, \"metadata\", \"outputHidden\"],\n    !state.getIn([\"notebook\", \"cellMap\", id, \"metadata\", \"outputHidden\"])\n  );\n}\n\nfunction unhideAll(\n  state: NotebookModel,\n  action: actionTypes.UnhideAll\n): RecordOf<DocumentRecordProps> {\n  return state.updateIn([\"notebook\", \"cellMap\"], cellMap =>\n    cellMap.map((cell: ImmutableCell) => {\n      if ((cell as any).get(\"cell_type\") === \"code\") {\n        return cell.mergeIn([\"metadata\"], {\n          // TODO: Verify that we convert to one namespace\n          // for hidden input/output\n          outputHidden: action.payload.outputHidden,\n          inputHidden: action.payload.inputHidden\n        });\n      }\n      return cell;\n    })\n  );\n}\n\nfunction toggleCellInputVisibility(\n  state: NotebookModel,\n  action: actionTypes.ToggleCellInputVisibility\n): RecordOf<DocumentRecordProps> {\n  const id = action.payload.id ? action.payload.id : state.cellFocused;\n  if (!id) {\n    return state;\n  }\n\n  return state.setIn(\n    [\"notebook\", \"cellMap\", id, \"metadata\", \"inputHidden\"],\n    !state.getIn([\"notebook\", \"cellMap\", id, \"metadata\", \"inputHidden\"])\n  );\n}\n\nfunction updateCellStatus(\n  state: NotebookModel,\n  action: actionTypes.UpdateCellStatus\n): RecordOf<DocumentRecordProps> {\n  const { id, status } = action.payload;\n  return state.setIn([\"transient\", \"cellMap\", id, \"status\"], status);\n}\n\nfunction updateOutputMetadata(\n  state: NotebookModel,\n  action: actionTypes.UpdateOutputMetadata\n): RecordOf<DocumentRecordProps> {\n  const { id, metadata, index, mediaType } = action.payload;\n  const currentOutputs = state.getIn([\"notebook\", \"cellMap\", id, \"outputs\"]);\n\n  const updatedOutputs = currentOutputs.update(index, (item: any) =>\n    item.set(\n      \"metadata\",\n      fromJS({\n        [mediaType]: metadata\n      })\n    )\n  );\n\n  return state.setIn([\"notebook\", \"cellMap\", id, \"outputs\"], updatedOutputs);\n}\n\nfunction setLanguageInfo(\n  state: NotebookModel,\n  action: actionTypes.SetLanguageInfo\n): RecordOf<DocumentRecordProps> {\n  const langInfo = fromJS(action.payload.langInfo);\n  return state.setIn([\"notebook\", \"metadata\", \"language_info\"], langInfo);\n}\n\nfunction setKernelspecInfo(\n  state: NotebookModel,\n  action: actionTypes.SetKernelspecInfo\n): RecordOf<DocumentRecordProps> {\n  const { kernelInfo } = action.payload;\n  return state\n    .setIn(\n      [\"notebook\", \"metadata\", \"kernelspec\"],\n      fromJS({\n        name: kernelInfo.name,\n        language: kernelInfo.spec.language,\n        display_name: kernelInfo.spec.display_name\n      })\n    )\n    .setIn([\"notebook\", \"metadata\", \"kernel_info\", \"name\"], kernelInfo.name);\n}\n\nfunction overwriteMetadataField(\n  state: NotebookModel,\n  action: actionTypes.OverwriteMetadataField\n): RecordOf<DocumentRecordProps> {\n  const { field, value } = action.payload;\n  return state.setIn([\"notebook\", \"metadata\", field], fromJS(value));\n}\nfunction deleteMetadataField(\n  state: NotebookModel,\n  action: actionTypes.DeleteMetadataField\n): RecordOf<DocumentRecordProps> {\n  const { field } = action.payload;\n  return state.deleteIn([\"notebook\", \"metadata\", field]);\n}\n\nfunction copyCell(\n  state: NotebookModel,\n  action: actionTypes.CopyCell\n): RecordOf<DocumentRecordProps> {\n  const id = action.payload.id || state.cellFocused;\n\n  const cell = state.getIn([\"notebook\", \"cellMap\", id]);\n  if (!cell) {\n    return state;\n  }\n  return state.set(\"copied\", cell);\n}\n\nfunction cutCell(\n  state: NotebookModel,\n  action: actionTypes.CutCell\n): RecordOf<DocumentRecordProps> {\n  const id = action.payload.id ? action.payload.id : state.cellFocused;\n  if (!id) {\n    return state;\n  }\n\n  const cell = state.getIn([\"notebook\", \"cellMap\", id]);\n\n  if (!cell) {\n    return state;\n  }\n\n  // FIXME: If the cell that was cut was the focused cell, focus the cell below\n  return state\n    .set(\"copied\", cell)\n    .update(\"notebook\", (notebook: ImmutableNotebook) =>\n      deleteCell(notebook, id)\n    );\n}\n\nfunction pasteCell(state: NotebookModel): RecordOf<DocumentRecordProps> {\n  const copiedCell = state.get(\"copied\");\n\n  const pasteAfter = state.cellFocused;\n\n  if (!copiedCell || !pasteAfter) {\n    return state;\n  }\n\n  // Create a new cell with `id` that will come after the currently focused cell\n  // using the contents of the originally copied cell\n  const id = uuid();\n\n  return state.update(\"notebook\", (notebook: ImmutableNotebook) =>\n    insertCellAfter(notebook, copiedCell, id, pasteAfter)\n  );\n}\n\nfunction changeCellType(\n  state: NotebookModel,\n  action: actionTypes.ChangeCellType\n): RecordOf<DocumentRecordProps> {\n  const id = action.payload.id ? action.payload.id : state.cellFocused;\n  if (!id) {\n    return state;\n  }\n\n  const { to } = action.payload;\n\n  const cell = state.getIn([\"notebook\", \"cellMap\", id]);\n\n  const from = cell.cell_type;\n\n  // NOOP, since we're already that cell type\n  if (from === to) {\n    return state;\n  }\n\n  let nextState = state;\n\n  // from === \"code\"\n  if (from === \"code\") {\n    nextState = cleanCellTransient(\n      state\n        .deleteIn([\"notebook\", \"cellMap\", id, \"execution_count\"])\n        .deleteIn([\"notebook\", \"cellMap\", id, \"outputs\"]),\n      id\n    );\n  }\n\n  switch (to) {\n    case \"code\":\n      return nextState.setIn(\n        [\"notebook\", \"cellMap\", id],\n        makeCodeCell({\n          source: cell.source\n        })\n      );\n    case \"markdown\":\n      return nextState.setIn(\n        [\"notebook\", \"cellMap\", id],\n        makeMarkdownCell({\n          source: cell.source\n        })\n      );\n    case \"raw\":\n      return nextState.setIn(\n        [\"notebook\", \"cellMap\", id],\n        makeRawCell({\n          source: cell.source\n        })\n      );\n  }\n\n  // If we didn't match on the `to`, we should change nothing as we don't implement\n  // other cell types (as there aren't any)\n  return state;\n}\n\nfunction toggleOutputExpansion(\n  state: NotebookModel,\n  action: actionTypes.ToggleCellExpansion\n): RecordOf<DocumentRecordProps> {\n  const id = action.payload.id ? action.payload.id : state.cellFocused;\n  if (!id) {\n    return state;\n  }\n\n  return state.updateIn(\n    [\"notebook\", \"cellMap\"],\n    (cells: Map<CellId, ImmutableCell>) =>\n      cells.setIn(\n        [id, \"metadata\", \"outputExpanded\"],\n        !cells.getIn([id, \"metadata\", \"outputExpanded\"])\n      )\n  );\n}\n\n// DEPRECATION WARNING: Below, the following action types are being deprecated: RemoveCell, CreateCellAfter and CreateCellBefore\ntype DocumentAction =\n  | actionTypes.ToggleTagInCell\n  | actionTypes.FocusPreviousCellEditor\n  | actionTypes.FocusPreviousCell\n  | actionTypes.FocusNextCellEditor\n  | actionTypes.FocusNextCell\n  | actionTypes.FocusCellEditor\n  | actionTypes.FocusCell\n  | actionTypes.ClearOutputs\n  | actionTypes.AppendOutput\n  | actionTypes.UpdateDisplay\n  | actionTypes.MoveCell\n  | actionTypes.DeleteCell\n  | actionTypes.RemoveCell\n  | actionTypes.CreateCellBelow\n  | actionTypes.CreateCellAbove\n  | actionTypes.CreateCellAfter\n  | actionTypes.CreateCellBefore\n  | actionTypes.CreateCellAppend\n  | actionTypes.ToggleCellOutputVisibility\n  | actionTypes.ToggleCellInputVisibility\n  | actionTypes.UpdateCellStatus\n  | actionTypes.UpdateOutputMetadata\n  | actionTypes.SetLanguageInfo\n  | actionTypes.SetKernelspecInfo\n  | actionTypes.OverwriteMetadataField\n  | actionTypes.DeleteMetadataField\n  | actionTypes.CopyCell\n  | actionTypes.CutCell\n  | actionTypes.PasteCell\n  | actionTypes.ChangeCellType\n  | actionTypes.ToggleCellExpansion\n  | actionTypes.AcceptPayloadMessage\n  | actionTypes.SendExecuteRequest\n  | actionTypes.SaveFulfilled\n  | actionTypes.RestartKernel\n  | actionTypes.ClearAllOutputs\n  | actionTypes.SetInCell<any>\n  | actionTypes.UnhideAll;\n\nconst defaultDocument: NotebookModel = makeDocumentRecord({\n  notebook: emptyNotebook\n});\n\nexport function notebook(\n  state: NotebookModel = defaultDocument,\n  action: DocumentAction\n): RecordOf<DocumentRecordProps> {\n  switch (action.type) {\n    case actionTypes.TOGGLE_TAG_IN_CELL:\n      return toggleTagInCell(state, action);\n    case actionTypes.SEND_EXECUTE_REQUEST:\n      return sendExecuteRequest(state, action);\n    case actionTypes.SAVE_FULFILLED:\n      return setNotebookCheckpoint(state);\n    case actionTypes.FOCUS_CELL:\n      return focusCell(state, action);\n    case actionTypes.CLEAR_OUTPUTS:\n      return clearOutputs(state, action);\n    case actionTypes.CLEAR_ALL_OUTPUTS:\n    case actionTypes.RESTART_KERNEL:\n      return clearAllOutputs(state, action);\n    case actionTypes.APPEND_OUTPUT:\n      return appendOutput(state, action);\n    case actionTypes.UPDATE_DISPLAY:\n      return updateDisplay(state, action);\n    case actionTypes.FOCUS_NEXT_CELL:\n      return focusNextCell(state, action);\n    case actionTypes.FOCUS_PREVIOUS_CELL:\n      return focusPreviousCell(state, action);\n    case actionTypes.FOCUS_CELL_EDITOR:\n      return focusCellEditor(state, action);\n    case actionTypes.FOCUS_NEXT_CELL_EDITOR:\n      return focusNextCellEditor(state, action);\n    case actionTypes.FOCUS_PREVIOUS_CELL_EDITOR:\n      return focusPreviousCellEditor(state, action);\n    case actionTypes.SET_IN_CELL:\n      return setInCell(state, action);\n    case actionTypes.MOVE_CELL:\n      return moveCell(state, action);\n    case actionTypes.DELETE_CELL:\n      return deleteCellFromState(state, action);\n    case actionTypes.CREATE_CELL_BELOW:\n      return createCellBelow(state, action);\n    case actionTypes.CREATE_CELL_ABOVE:\n      return createCellAbove(state, action);\n    case actionTypes.REMOVE_CELL:\n      console.log(\n        \"DEPRECATION WARNING: This action type is being deprecated. Please use DELETE_CELL instead\"\n      );\n      return deleteCellFromState(state, action);\n    case actionTypes.CREATE_CELL_AFTER:\n      console.log(\n        \"DEPRECATION WARNING: This action type is being deprecated. Please use CREATE_CELL_BELOW instead\"\n      );\n      return createCellAfter(state, action);\n    case actionTypes.CREATE_CELL_BEFORE:\n      console.log(\n        \"DEPRECATION WARNING: This action type is being deprecated. Please use CREATE_CELL_ABOVE instead\"\n      );\n      return createCellBefore(state, action);\n    case actionTypes.CREATE_CELL_APPEND:\n      return createCellAppend(state, action);\n    case actionTypes.TOGGLE_CELL_OUTPUT_VISIBILITY:\n      return toggleCellOutputVisibility(state, action);\n    case actionTypes.TOGGLE_CELL_INPUT_VISIBILITY:\n      return toggleCellInputVisibility(state, action);\n    case actionTypes.ACCEPT_PAYLOAD_MESSAGE:\n      return acceptPayloadMessage(state, action);\n    case actionTypes.UPDATE_CELL_STATUS:\n      return updateCellStatus(state, action);\n    case actionTypes.UPDATE_OUTPUT_METADATA:\n      return updateOutputMetadata(state, action);\n    case actionTypes.SET_LANGUAGE_INFO:\n      return setLanguageInfo(state, action);\n    case actionTypes.SET_KERNELSPEC_INFO:\n      return setKernelspecInfo(state, action);\n    case actionTypes.OVERWRITE_METADATA_FIELD:\n      return overwriteMetadataField(state, action);\n    case actionTypes.DELETE_METADATA_FIELD:\n      return deleteMetadataField(state, action);\n    case actionTypes.COPY_CELL:\n      return copyCell(state, action);\n    case actionTypes.CUT_CELL:\n      return cutCell(state, action);\n    case actionTypes.PASTE_CELL:\n      return pasteCell(state);\n    case actionTypes.CHANGE_CELL_TYPE:\n      return changeCellType(state, action);\n    case actionTypes.TOGGLE_OUTPUT_EXPANSION:\n      return toggleOutputExpansion(state, action);\n    case actionTypes.UNHIDE_ALL:\n      return unhideAll(state, action);\n    default:\n      return state;\n  }\n}\n","// Vendor modules\nimport * as actionTypes from \"@nteract/actions\";\nimport { fromJS } from \"@nteract/commutable\";\nimport {\n  ContentModel,\n  ContentRecord,\n  ContentRef,\n  ContentsRecord,\n  createContentRef,\n  DummyContentRecordProps,\n  makeContentsRecord,\n  makeDirectoryContentRecord,\n  makeDirectoryModel,\n  makeDocumentRecord,\n  makeDummyContentRecord,\n  makeFileContentRecord,\n  makeFileModelRecord,\n  makeNotebookContentRecord\n} from \"@nteract/types\";\nimport { List, Map, RecordOf } from \"immutable\";\nimport { Action } from \"redux\";\n\n// Local modules\nimport { file } from \"./file\";\nimport { notebook } from \"./notebook\";\n\nconst byRef = (\n  state: Map<ContentRef, ContentRecord>,\n  action: Action\n): Map<ContentRef, ContentRecord> => {\n  switch (action.type) {\n    case actionTypes.CHANGE_CONTENT_NAME:\n      const changeContentNameAction = action as actionTypes.ChangeContentName;\n      const { contentRef, filepath } = changeContentNameAction.payload;\n      return state.setIn([contentRef, \"filepath\"], filepath);\n    case actionTypes.CHANGE_CONTENT_NAME_FAILED:\n      return state;\n    case actionTypes.FETCH_CONTENT:\n      // TODO: we might be able to get around this by looking at the\n      // communication state first and not requesting this information until\n      // the communication state shows that it should exist.\n      const fetchContentAction = action as actionTypes.FetchContent;\n      return state.set(\n        fetchContentAction.payload.contentRef,\n        makeDummyContentRecord({\n          filepath: fetchContentAction.payload.filepath || \"\",\n          loading: true\n          // TODO: we can set kernelRef when the content record uses it.\n        })\n      );\n    case actionTypes.LAUNCH_KERNEL_SUCCESSFUL:\n      // TODO: is this reasonable? We launched the kernel on behalf of this\n      // content... so it makes sense to swap it, right?\n      const launchKernelAction = action as actionTypes.NewKernelAction;\n      return state.setIn(\n        [launchKernelAction.payload.contentRef, \"model\", \"kernelRef\"],\n        launchKernelAction.payload.kernelRef\n      );\n    case actionTypes.FETCH_CONTENT_FULFILLED:\n      const fetchContentFulfilledAction = action as actionTypes.FetchContentFulfilled;\n      switch (fetchContentFulfilledAction.payload.model.type) {\n        case \"file\":\n          return state.set(\n            fetchContentFulfilledAction.payload.contentRef,\n            makeFileContentRecord({\n              mimetype: fetchContentFulfilledAction.payload.model.mimetype,\n              created: fetchContentFulfilledAction.payload.model.created,\n              lastSaved:\n                fetchContentFulfilledAction.payload.model.last_modified,\n              filepath: fetchContentFulfilledAction.payload.filepath,\n              model: makeFileModelRecord({\n                text: fetchContentFulfilledAction.payload.model.content\n              }),\n              loading: false,\n              saving: false,\n              error: null\n            })\n          );\n        case \"directory\": {\n          // For each entry in the directory listing, create a new contentRef\n          // and a \"filler\" contents object\n\n          // Optional: run through all the current contents to see if they're\n          //           a file we already have (?)\n\n          // Create a map of <ContentRef, ContentRecord> that we merge into the\n          // content refs state\n          const dummyRecords = Map<ContentRef, ContentRecord>(\n            fetchContentFulfilledAction.payload.model.content.map(\n              (entry: any) => {\n                return [\n                  createContentRef(),\n                  makeDummyContentRecord({\n                    mimetype: entry.mimetype,\n                    // TODO: We can store the type of this content,\n                    // it just doesn't have a model\n                    // entry.type\n                    assumedType: entry.type,\n                    lastSaved: entry.last_modified,\n                    filepath: entry.path\n                  })\n                ];\n              }\n            )\n          );\n\n          const items = List<ContentRef>(dummyRecords.keys());\n          const sorted: List<string> = items.sort((aRef, bRef) => {\n            const a:\n              | RecordOf<DummyContentRecordProps>\n              | undefined = dummyRecords.get(aRef) as RecordOf<\n              DummyContentRecordProps\n            >;\n            const b:\n              | RecordOf<DummyContentRecordProps>\n              | undefined = dummyRecords.get(bRef) as RecordOf<\n              DummyContentRecordProps\n            >;\n\n            if (a.assumedType === b.assumedType) {\n              return a.filepath.localeCompare(b.filepath);\n            }\n            return a.assumedType.localeCompare(b.assumedType);\n          });\n\n          return (\n            state\n              // Bring in all the listed records\n              .merge(dummyRecords)\n              // Set up the base directory\n              .set(\n                fetchContentFulfilledAction.payload.contentRef,\n                makeDirectoryContentRecord({\n                  model: makeDirectoryModel({\n                    type: \"directory\",\n                    // The listing is all these contents in aggregate\n                    items: sorted\n                  }),\n                  filepath: fetchContentFulfilledAction.payload.filepath,\n                  lastSaved:\n                    fetchContentFulfilledAction.payload.model.last_modified,\n                  created: fetchContentFulfilledAction.payload.model.created,\n                  loading: false,\n                  saving: false,\n                  error: null\n                })\n              )\n          );\n        }\n        case \"notebook\": {\n          const immutableNotebook = fromJS(\n            fetchContentFulfilledAction.payload.model.content\n          );\n\n          return state.set(\n            fetchContentFulfilledAction.payload.contentRef,\n            makeNotebookContentRecord({\n              created: fetchContentFulfilledAction.payload.created,\n              lastSaved: fetchContentFulfilledAction.payload.lastSaved,\n              filepath: fetchContentFulfilledAction.payload.filepath,\n              model: makeDocumentRecord({\n                notebook: immutableNotebook,\n                savedNotebook: immutableNotebook,\n                transient: Map({\n                  keyPathsForDisplays: Map(),\n                  cellMap: Map()\n                }),\n                cellFocused: immutableNotebook.getIn([\"cellOrder\", 0])\n              }),\n              loading: false,\n              saving: false,\n              error: null\n            })\n          );\n        }\n      }\n\n      // NOTE: There are no other content types (at the moment), so we will just\n      //       warn and return the current state\n      console.warn(\"Met some content type we don't support\");\n      return state;\n    case actionTypes.CHANGE_FILENAME: {\n      const changeFilenameAction = action as actionTypes.ChangeFilenameAction;\n      return state.updateIn(\n        [changeFilenameAction.payload.contentRef],\n        contentRecord =>\n          contentRecord.merge({\n            filepath: changeFilenameAction.payload.filepath\n          })\n      );\n    }\n    case actionTypes.SAVE_FULFILLED: {\n      const saveFulfilledAction = action as actionTypes.SaveFulfilled;\n      return state\n        .updateIn(\n          [saveFulfilledAction.payload.contentRef, \"model\"],\n          (model: ContentModel) => {\n            // Notebook ends up needing this because we store a last\n            // saved version of the notebook Alternatively, we could\n            // be storing a hash of the content to compare 🤔\n            if (model && model.type === \"notebook\") {\n              return notebook(model, saveFulfilledAction);\n            }\n            return model;\n          }\n        )\n        .setIn(\n          [saveFulfilledAction.payload.contentRef, \"lastSaved\"],\n          saveFulfilledAction.payload.model.last_modified\n        )\n        .setIn([saveFulfilledAction.payload.contentRef, \"loading\"], false)\n        .setIn([saveFulfilledAction.payload.contentRef, \"saving\"], false)\n        .setIn([saveFulfilledAction.payload.contentRef, \"error\"], null);\n    }\n    // Defer all notebook actions to the notebook reducer\n    case actionTypes.SEND_EXECUTE_REQUEST:\n    case actionTypes.FOCUS_CELL:\n    case actionTypes.CLEAR_OUTPUTS:\n    case actionTypes.CLEAR_ALL_OUTPUTS:\n    case actionTypes.RESTART_KERNEL:\n    case actionTypes.APPEND_OUTPUT:\n    case actionTypes.UPDATE_DISPLAY:\n    case actionTypes.FOCUS_NEXT_CELL:\n    case actionTypes.FOCUS_PREVIOUS_CELL:\n    case actionTypes.FOCUS_CELL_EDITOR:\n    case actionTypes.FOCUS_NEXT_CELL_EDITOR:\n    case actionTypes.FOCUS_PREVIOUS_CELL_EDITOR:\n    case actionTypes.SET_IN_CELL:\n    case actionTypes.MOVE_CELL:\n    case actionTypes.DELETE_CELL:\n    case actionTypes.REMOVE_CELL: // DEPRECATION WARNING: This action type is being deprecated. Please use DELETE_CELL instead\n    case actionTypes.CREATE_CELL_BELOW:\n    case actionTypes.CREATE_CELL_ABOVE:\n    case actionTypes.CREATE_CELL_AFTER: // DEPRECATION WARNING: This action type is being deprecated. Please use CREATE_CELL_BELOW instead\n    case actionTypes.CREATE_CELL_BEFORE: // DEPRECATION WARNING: This action type is being deprecated. Please use CREATE_CELL_ABOVE instead\n    case actionTypes.CREATE_CELL_APPEND:\n    case actionTypes.TOGGLE_CELL_OUTPUT_VISIBILITY:\n    case actionTypes.TOGGLE_CELL_INPUT_VISIBILITY:\n    case actionTypes.ACCEPT_PAYLOAD_MESSAGE:\n    case actionTypes.UPDATE_CELL_STATUS:\n    case actionTypes.SET_LANGUAGE_INFO:\n    case actionTypes.SET_KERNELSPEC_INFO:\n    case actionTypes.OVERWRITE_METADATA_FIELD:\n    case actionTypes.DELETE_METADATA_FIELD:\n    case actionTypes.COPY_CELL:\n    case actionTypes.CUT_CELL:\n    case actionTypes.PASTE_CELL:\n    case actionTypes.CHANGE_CELL_TYPE:\n    case actionTypes.TOGGLE_OUTPUT_EXPANSION:\n    case actionTypes.TOGGLE_TAG_IN_CELL:\n    case actionTypes.UPDATE_OUTPUT_METADATA:\n    case actionTypes.UNHIDE_ALL: {\n      const cellAction = action as actionTypes.FocusCell;\n      const path = [cellAction.payload.contentRef, \"model\"];\n      const model = state.getIn(path);\n      return state.setIn(path, notebook(model, cellAction));\n    }\n    case actionTypes.UPDATE_FILE_TEXT: {\n      const fileAction = action as actionTypes.UpdateFileText;\n      const path = [fileAction.payload.contentRef, \"model\"];\n      const model: ContentModel = state.getIn(path);\n      if (model && model.type === \"file\") {\n        return state.setIn(path, file(model, fileAction));\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport const contents = (\n  state: ContentsRecord = makeContentsRecord(),\n  action: Action\n): ContentsRecord => {\n  return state.merge({\n    byRef: byRef(state.byRef, action)\n  });\n};\n","// Vendor modules\nimport * as actions from \"@nteract/actions\";\nimport { FileModelRecord, FileModelRecordProps } from \"@nteract/types\";\nimport { RecordOf } from \"immutable\";\n\nfunction updateFileText(\n  state: FileModelRecord,\n  action: actions.UpdateFileText\n): RecordOf<FileModelRecordProps> {\n  return state.set(\"text\", action.payload.text);\n}\n\nexport function file(\n  state: FileModelRecord,\n  action: actions.UpdateFileText\n): RecordOf<FileModelRecordProps> {\n  switch (action.type) {\n    case actions.UPDATE_FILE_TEXT:\n      return updateFileText(state, action);\n    default:\n      return state;\n  }\n}\n","// Vendor modules\nimport * as actions from \"@nteract/actions\";\nimport {\n  HostRecord,\n  makeHostsRecord,\n  makeJupyterHostRecord,\n  makeLocalHostRecord\n} from \"@nteract/types\";\nimport { List, Map } from \"immutable\";\nimport { Action, Reducer } from \"redux\";\nimport { combineReducers } from \"redux-immutable\";\n\nconst byRef = (\n  state = Map() as Map<string, HostRecord>,\n  action: Action\n): Map<string, HostRecord> => {\n  let typedAction;\n  switch (action.type) {\n    case actions.ADD_HOST:\n      typedAction = action as actions.AddHost;\n      switch (typedAction.payload.host.type) {\n        case \"jupyter\": {\n          return state.set(\n            typedAction.payload.hostRef,\n            makeJupyterHostRecord(typedAction.payload.host)\n          );\n        }\n        case \"local\": {\n          return state.set(\n            typedAction.payload.hostRef,\n            makeLocalHostRecord(typedAction.payload.host)\n          );\n        }\n        default:\n          throw new Error(\n            `Unrecognized host type \"${typedAction.payload.host.type}\".`\n          );\n      }\n    case actions.REMOVE_HOST:\n      typedAction = action as actions.RemoveHost;\n      return state.remove(typedAction.payload.hostRef);\n    default:\n      return state;\n  }\n};\n\nconst refs = (state = List(), action: Action): List<string> => {\n  switch (action.type) {\n    case actions.ADD_HOST:\n      return state.push((action as actions.AddHost).payload.hostRef);\n    case actions.REMOVE_HOST:\n      return state.filter(\n        hostRef => hostRef !== (action as actions.RemoveHost).payload.hostRef\n      );\n    default:\n      return state;\n  }\n};\n\nexport const hosts: Reducer<\n  {\n    byRef: Map<string, HostRecord>;\n    refs: List<string>;\n  },\n  Action<any>\n> = combineReducers({ byRef, refs }, makeHostsRecord as any);\n","// Vendor modules\nimport * as actionTypes from \"@nteract/actions\";\nimport { JSONObject } from \"@nteract/commutable\";\nimport {\n  HelpLink,\n  makeHelpLinkRecord,\n  makeKernelInfoRecord,\n  makeKernelNotStartedRecord,\n  makeKernelsRecord,\n  makeLocalKernelRecord,\n  makeRemoteKernelRecord\n} from \"@nteract/types\";\nimport { List, Map } from \"immutable\";\nimport { Action, Reducer } from \"redux\";\nimport { combineReducers } from \"redux-immutable\";\n\n// TODO: we need to clean up references to old kernels at some point. Listening\n// for KILL_KERNEL_SUCCESSFUL seems like a good candidate, but I think you can\n// also end up with a dead kernel if that fails and you hit KILL_KERNEL_FAILED.\nconst byRef = (state = Map(), action: Action): Map<{}, {}> => {\n  let typedAction;\n  switch (action.type) {\n    case actionTypes.SET_LANGUAGE_INFO:\n      // TODO: Should the kernel hold language info?\n      return state;\n    case actionTypes.KILL_KERNEL_SUCCESSFUL:\n      typedAction = action as actionTypes.KillKernelSuccessful;\n      return state.setIn([typedAction.payload.kernelRef, \"status\"], \"killed\");\n    case actionTypes.KILL_KERNEL_FAILED:\n      typedAction = action as actionTypes.KillKernelFailed;\n      return state.setIn(\n        [typedAction.payload.kernelRef, \"status\"],\n        \"failed to kill\"\n      );\n    case actionTypes.RESTART_KERNEL:\n      typedAction = action as actionTypes.RestartKernel;\n      return state.setIn(\n        [typedAction.payload.kernelRef, \"status\"],\n        \"restarting\"\n      );\n    case actionTypes.LAUNCH_KERNEL:\n      typedAction = action as actionTypes.LaunchKernelAction;\n      return state.set(\n        typedAction.payload.kernelRef,\n        makeKernelNotStartedRecord({\n          status: \"launching\",\n          kernelSpecName: typedAction.payload.kernelSpec.name\n        })\n      );\n    case actionTypes.LAUNCH_KERNEL_BY_NAME:\n      typedAction = action as actionTypes.LaunchKernelByNameAction;\n      return state.set(\n        typedAction.payload.kernelRef,\n        makeKernelNotStartedRecord({\n          status: \"launching\",\n          kernelSpecName: typedAction.payload.kernelSpecName\n        })\n      );\n    case actionTypes.CHANGE_KERNEL_BY_NAME:\n      typedAction = action as actionTypes.ChangeKernelByName;\n      return state.setIn(\n        [typedAction.payload.oldKernelRef, \"status\"],\n        \"changing\"\n      );\n    case actionTypes.SET_KERNEL_INFO:\n      typedAction = action as actionTypes.SetKernelInfo;\n      let codemirrorMode = typedAction.payload.info.codemirrorMode;\n      // If the codemirror mode isn't set, fallback on the language name\n      if (!codemirrorMode) {\n        codemirrorMode = typedAction.payload.info.languageName;\n      }\n      switch (typeof codemirrorMode) {\n        case \"string\":\n          // already set as we want it\n          break;\n        case \"object\":\n          codemirrorMode = Map(codemirrorMode as JSONObject);\n          break;\n        default:\n          // any other case results in falling back to language name\n          codemirrorMode = typedAction.payload.info.languageName;\n      }\n\n      const helpLinks = typedAction.payload.info.helpLinks\n        ? List(\n            (typedAction.payload.info.helpLinks as HelpLink[]).map(\n              makeHelpLinkRecord\n            )\n          )\n        : List();\n\n      return state.setIn(\n        [typedAction.payload.kernelRef, \"info\"],\n        makeKernelInfoRecord(typedAction.payload.info).merge({\n          helpLinks,\n          codemirrorMode\n        })\n      );\n    case actionTypes.SET_EXECUTION_STATE:\n      typedAction = action as actionTypes.SetExecutionStateAction;\n      return state.setIn(\n        [typedAction.payload.kernelRef, \"status\"],\n        typedAction.payload.kernelStatus\n      );\n    case actionTypes.LAUNCH_KERNEL_SUCCESSFUL:\n      typedAction = action as actionTypes.NewKernelAction;\n      switch (typedAction.payload.kernel.type) {\n        case \"zeromq\":\n          return state.set(\n            typedAction.payload.kernelRef,\n            makeLocalKernelRecord(typedAction.payload.kernel)\n          );\n        case \"websocket\":\n          return state.set(\n            typedAction.payload.kernelRef,\n            makeRemoteKernelRecord(typedAction.payload.kernel)\n          );\n        default:\n          throw new Error(\n            `Unrecognized kernel type in kernel ${typedAction.payload.kernel}.`\n          );\n      }\n    default:\n      return state;\n  }\n};\n\nexport const kernels: Reducer<\n  {\n    byRef: Map<{}, {}>;\n  },\n  Action<any>\n> = combineReducers({ byRef }, makeKernelsRecord as any);\n","// Vendor modules\nimport * as actionTypes from \"@nteract/actions\";\nimport {\n  makeKernelspec,\n  makeKernelspecsByRefRecord,\n  makeKernelspecsRecord\n} from \"@nteract/types\";\nimport { List, Map } from \"immutable\";\nimport { Action, Reducer } from \"redux\";\nimport { combineReducers } from \"redux-immutable\";\n\nconst byRef = (state = Map(), action: Action): Map<{}, {}> => {\n  const typedAction = action as actionTypes.FetchKernelspecsFulfilled;\n  switch (action.type) {\n    case actionTypes.FETCH_KERNELSPECS_FULFILLED:\n      return state.set(\n        typedAction.payload.kernelspecsRef,\n        makeKernelspecsByRefRecord({\n          hostRef: typedAction.payload.hostRef,\n          defaultKernelName: typedAction.payload.defaultKernelName,\n          byName: Map(\n            Object.keys(typedAction.payload.kernelspecs).reduce((r: any, k) => {\n              r[k] = makeKernelspec(typedAction.payload.kernelspecs[k]);\n              return r;\n            }, {})\n          )\n        })\n      );\n    default:\n      return state;\n  }\n};\n\nconst refs = (state = List(), action: Action): List<any> => {\n  let typedAction;\n  switch (action.type) {\n    case actionTypes.FETCH_KERNELSPECS_FULFILLED:\n      typedAction = action as actionTypes.FetchKernelspecsFulfilled;\n      return state.includes(typedAction.payload.kernelspecsRef)\n        ? state\n        : state.push(typedAction.payload.kernelspecsRef);\n    default:\n      return state;\n  }\n};\n\nexport const kernelspecs: Reducer<\n  {\n    byRef: Map<{}, {}>;\n    refs: List<any>;\n  },\n  Action<any>\n> = combineReducers({ byRef, refs }, makeKernelspecsRecord as any);\n","// Vendor modules\nimport * as actions from \"@nteract/actions\";\nimport { makeModalsRecord } from \"@nteract/types\";\nimport { Action, Reducer } from \"redux\";\nimport { combineReducers } from \"redux-immutable\";\n\nconst modalType = (\n  state: string = \"\",\n  action: actions.OpenModal | actions.CloseModal\n): string => {\n  switch (action.type) {\n    case actions.OPEN_MODAL:\n      return action.payload.modalType;\n    case actions.CLOSE_MODAL:\n      return \"\";\n    default:\n      return state;\n  }\n};\n\nexport const modals: Reducer<\n  {\n    modalType: string;\n  },\n  Action<any>\n> = combineReducers({ modalType }, makeModalsRecord as any);\n","// Vendor modules\nimport * as actions from \"@nteract/actions\";\nimport { makeTransformsRecord } from \"@nteract/types\";\nimport { List, Map } from \"immutable\";\nimport { Action, Reducer } from \"redux\";\nimport { combineReducers } from \"redux-immutable\";\n\nconst byId = (\n  state = Map() as Map<string, React.ComponentClass>,\n  action: Action\n): Map<string, React.ComponentClass> => {\n  let typedAction;\n  switch (action.type) {\n    case actions.ADD_TRANSFORM:\n      typedAction = action as actions.AddTransform;\n      return state.set(\n        typedAction.payload.mediaType,\n        typedAction.payload.component\n      );\n    case actions.REMOVE_TRANSFORM:\n      typedAction = action as actions.RemoveTransform;\n      return state.delete(typedAction.payload.mediaType);\n    default:\n      return state;\n  }\n};\n\nconst displayOrder = (\n  state = List() as List<string>,\n  action: Action\n): List<string> => {\n  let typedAction;\n  switch (action.type) {\n    case actions.ADD_TRANSFORM:\n      typedAction = action as actions.AddTransform;\n      return state.push(typedAction.payload.mediaType);\n    case actions.REMOVE_TRANSFORM:\n      typedAction = action as actions.RemoveTransform;\n      return state.delete(state.indexOf(typedAction.payload.mediaType));\n    default:\n      return state;\n  }\n};\n\nexport const transforms: Reducer<\n  {\n    byId: Map<string, React.ComponentClass>;\n    displayOrder: List<any>;\n  },\n  Action<any>\n> = combineReducers({ byId, displayOrder }, makeTransformsRecord as any);\n","// Vendor modules\nimport { makeEntitiesRecord } from \"@nteract/types\";\nimport { combineReducers } from \"redux-immutable\";\n\n// Local modules\nimport { contents } from \"./contents\";\nimport { hosts } from \"./hosts\";\nimport { kernels } from \"./kernels\";\nimport { kernelspecs } from \"./kernelspecs\";\nimport { modals } from \"./modals\";\nimport { transforms } from \"./transforms\";\n\nexport const entities = combineReducers(\n  {\n    contents,\n    hosts,\n    kernels,\n    kernelspecs,\n    modals,\n    transforms\n  },\n  makeEntitiesRecord as any\n);\n","// Vendor modules\nimport * as actions from \"@nteract/actions\";\nimport { makeStateRecord } from \"@nteract/types\";\nimport { Action } from \"redux\";\nimport { combineReducers } from \"redux-immutable\";\n\n// Local modules\nimport { entities } from \"./entities\";\n\n// TODO: This is temporary until we have sessions in place. Ideally, we point to\n// a document, which knows about its session and that session knows about its\n// kernel. For now, we need to keep a reference to the currently targeted kernel\n// around.\nconst kernelRef = (state = \"\", action: Action) => {\n  let typedAction;\n  switch (action.type) {\n    case actions.LAUNCH_KERNEL:\n    case actions.LAUNCH_KERNEL_BY_NAME:\n      typedAction = action as actions.LaunchKernelAction;\n      return typedAction.payload.selectNextKernel\n        ? typedAction.payload.kernelRef\n        : state;\n    case actions.LAUNCH_KERNEL_SUCCESSFUL:\n      typedAction = action as actions.NewKernelAction;\n      return typedAction.payload.selectNextKernel\n        ? typedAction.payload.kernelRef\n        : state;\n    default:\n      return state;\n  }\n};\n\nconst currentKernelspecsRef = (state = \"\", action: Action) => {\n  switch (action.type) {\n    case actions.FETCH_KERNELSPECS:\n      const typedAction = action as actions.FetchKernelspecs;\n      return typedAction.payload.kernelspecsRef;\n    default:\n      return state;\n  }\n};\n\nconst core = combineReducers(\n  {\n    currentKernelspecsRef,\n    entities,\n    kernelRef\n  },\n  makeStateRecord as any\n);\n\nexport default core;\n","import * as actions from \"@nteract/actions\";\nimport * as epics from \"@nteract/epics\";\nimport * as reducers from \"@nteract/reducers\";\nimport * as selectors from \"@nteract/selectors\";\nimport * as state from \"@nteract/types\";\n\nimport * as middlewares from \"./middlewares\";\n\nexport * from \"@nteract/types\";\n\nexport { actions, middlewares, reducers, selectors, epics, state };\n"],"sourceRoot":""}